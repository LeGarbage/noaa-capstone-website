/**
 * @param {OastNodes} tree
 * @param {Partial<Config> | null | undefined} [options = {}]
 */
export function createState(tree: OastNodes, options?: Partial<Config> | null | undefined): {
    one: (node: OastNodes, parent?: OastParent | undefined) => HastRoot | HastElementContent | HastElementContent[] | undefined;
    all: (parent: OastNodes) => Array<HastElementContent>;
    handlers: Partial<Record<"newline" | "comment" | "text" | "document" | "section" | "paragraph" | "block" | "drawer" | "planning" | "list" | "table" | "hr" | "headline" | "html" | "jsx" | "latex" | "keyword" | "footnote" | "table.row" | "table.hr" | "table.cell" | "list.item" | "link" | "footnote.reference" | "emptyLine" | "todo" | "stars" | "priority" | "tags" | "planning.keyword" | "planning.timestamp" | "list.item.tag" | "list.item.checkbox" | "list.item.bullet" | "table.columnSeparator" | "footnote.label" | "block.begin" | "block.end" | "latex.begin" | "latex.end" | "drawer.begin" | "drawer.end" | "opening" | "closing" | "link.path", Handler>>;
    getAttrHtml: (node: OastNodes) => Record<string, string> | undefined;
    patch: <T extends HastNodes>(from: OastNodes, to: T) => T;
    /** @type {Config} */
    options: Config;
};
export type HastNodes = import("hast").Nodes;
export type OastParent = import("orga").Parent;
export type OastNodes = import("orga").Nodes;
export type Config = {
    handlers: Handlers;
    linkTarget: string;
    linkHref: (link: import("orga").Link) => string;
    /**
     * =[]
     */
    selectTags: string[];
    /**
     * =['noexport']
     */
    excludeTags: string[];
};
export type State = ReturnType<typeof createState>;
export type Handler = (state: State, node: any, parent: OastParent | undefined) => Array<HastElementContent> | HastElementContent | HastRoot | undefined;
/**
 * Handle nodes.
 */
export type Handlers = Partial<Record<OastNodes["type"], Handler>>;
import type { Root as HastRoot } from 'hast';
import type { ElementContent as HastElementContent } from 'hast';
//# sourceMappingURL=state.d.ts.map