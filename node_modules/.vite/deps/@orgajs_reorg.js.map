{
  "version": 3,
  "sources": ["../../extend/index.js", "../../@babel/runtime/helpers/interopRequireDefault.js", "../../@babel/runtime/helpers/typeof.js", "../../date-fns/_lib/requiredArgs/index.js", "../../date-fns/isDate/index.js", "../../date-fns/toDate/index.js", "../../date-fns/isValid/index.js", "../../date-fns/_lib/toInteger/index.js", "../../date-fns/addMilliseconds/index.js", "../../date-fns/subMilliseconds/index.js", "../../date-fns/_lib/getUTCDayOfYear/index.js", "../../date-fns/_lib/startOfUTCISOWeek/index.js", "../../date-fns/_lib/getUTCISOWeekYear/index.js", "../../date-fns/_lib/startOfUTCISOWeekYear/index.js", "../../date-fns/_lib/getUTCISOWeek/index.js", "../../date-fns/_lib/defaultOptions/index.js", "../../date-fns/_lib/startOfUTCWeek/index.js", "../../date-fns/_lib/getUTCWeekYear/index.js", "../../date-fns/_lib/startOfUTCWeekYear/index.js", "../../date-fns/_lib/getUTCWeek/index.js", "../../date-fns/_lib/addLeadingZeros/index.js", "../../date-fns/_lib/format/lightFormatters/index.js", "../../date-fns/_lib/format/formatters/index.js", "../../date-fns/_lib/format/longFormatters/index.js", "../../date-fns/_lib/getTimezoneOffsetInMilliseconds/index.js", "../../date-fns/_lib/protectedTokens/index.js", "../../date-fns/locale/en-US/_lib/formatDistance/index.js", "../../date-fns/locale/_lib/buildFormatLongFn/index.js", "../../date-fns/locale/en-US/_lib/formatLong/index.js", "../../date-fns/locale/en-US/_lib/formatRelative/index.js", "../../date-fns/locale/_lib/buildLocalizeFn/index.js", "../../date-fns/locale/en-US/_lib/localize/index.js", "../../date-fns/locale/_lib/buildMatchFn/index.js", "../../date-fns/locale/_lib/buildMatchPatternFn/index.js", "../../date-fns/locale/en-US/_lib/match/index.js", "../../date-fns/locale/en-US/index.js", "../../date-fns/_lib/defaultLocale/index.js", "../../date-fns/format/index.js", "../../date-fns/_lib/assign/index.js", "../../date-fns/_lib/cloneObject/index.js", "../../bail/index.js", "../../unified/lib/index.js", "../../is-plain-obj/index.js", "../../trough/lib/index.js", "../../unified/lib/callable-instance.js", "../../orga/dist/options.js", "../../orga/dist/utils.js", "../../orga/dist/parse/block.js", "../../orga/dist/parse/latex.js", "../../orga/dist/types.js", "../../orga/dist/parse/context.js", "../../orga/dist/parse/_primitive.js", "../../orga/dist/parse/_parseSymbols.js", "../../orga/dist/parse/keyword.js", "../../orga/dist/parse/phrasing.js", "../../orga/dist/parse/list.js", "../../orga/dist/parse/_utils.js", "../../orga/dist/parse/paragraph.js", "../../orga/dist/parse/drawer.js", "../../orga/dist/parse/headline.js", "../../orga/dist/parse/planning.js", "../../orga/dist/parse/section.js", "../../orga/dist/parse/table.js", "../../orga/dist/parse/footnote.js", "../../orga/dist/parse/index.js", "../../date-fns-tz/esm/format/index.js", "../../date-fns-tz/esm/_lib/tzTokenizeDate/index.js", "../../date-fns-tz/esm/_lib/newDateUTC/index.js", "../../date-fns-tz/esm/_lib/tzParseTimezone/index.js", "../../date-fns-tz/esm/format/formatters/index.js", "../../date-fns-tz/esm/toDate/index.js", "../../date-fns-tz/esm/_lib/tzPattern/index.js", "../../date-fns-tz/esm/formatInTimeZone/index.js", "../../date-fns-tz/esm/zonedTimeToUtc/index.js", "../../text-kit/lib/core.js", "../../text-kit/lib/utils/substring.js", "../../text-kit/lib/utils/lines.js", "../../text-kit/lib/utils/index.js", "../../text-kit/lib/reader.js", "../../text-kit/index.js", "../../orga/dist/timestamp.js", "../../orga/dist/todo-keyword-set.js", "../../orga/dist/tokenize/block.js", "../../orga/dist/tokenize/latex.js", "../../orga/dist/tokenize/comment.js", "../../orga/dist/tokenize/drawer.js", "../../orga/dist/uri.js", "../../orga/dist/tokenize/inline/text.js", "../../orga/dist/tokenize/inline/link.js", "../../orga/dist/tokenize/inline/math.js", "../../orga/dist/tokenize/inline/footnote.js", "../../orga/dist/tokenize/inline/index.js", "../../orga/dist/tokenize/footnote.js", "../../orga/dist/tokenize/headline.js", "../../orga/dist/tokenize/hr.js", "../../orga/dist/tokenize/keyword.js", "../../orga/dist/tokenize/list.js", "../../orga/dist/tokenize/planning.js", "../../orga/dist/tokenize/table.js", "../../orga/dist/tokenize/empty.js", "../../orga/dist/tokenize/index.js", "../../orga/dist/index.js", "../../@orgajs/reorg-parse/index.js", "../../@orgajs/reorg/index.js"],
  "sourcesContent": ["'use strict';\n\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar toStr = Object.prototype.toString;\nvar defineProperty = Object.defineProperty;\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nvar isArray = function isArray(arr) {\n\tif (typeof Array.isArray === 'function') {\n\t\treturn Array.isArray(arr);\n\t}\n\n\treturn toStr.call(arr) === '[object Array]';\n};\n\nvar isPlainObject = function isPlainObject(obj) {\n\tif (!obj || toStr.call(obj) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tvar hasOwnConstructor = hasOwn.call(obj, 'constructor');\n\tvar hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');\n\t// Not own constructor property must be Object\n\tif (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n\t\treturn false;\n\t}\n\n\t// Own properties are enumerated firstly, so to speed up,\n\t// if last one is own, then all properties are own.\n\tvar key;\n\tfor (key in obj) { /**/ }\n\n\treturn typeof key === 'undefined' || hasOwn.call(obj, key);\n};\n\n// If name is '__proto__', and Object.defineProperty is available, define __proto__ as an own property on target\nvar setProperty = function setProperty(target, options) {\n\tif (defineProperty && options.name === '__proto__') {\n\t\tdefineProperty(target, options.name, {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: true,\n\t\t\tvalue: options.newValue,\n\t\t\twritable: true\n\t\t});\n\t} else {\n\t\ttarget[options.name] = options.newValue;\n\t}\n};\n\n// Return undefined instead of __proto__ if '__proto__' is not an own property\nvar getProperty = function getProperty(obj, name) {\n\tif (name === '__proto__') {\n\t\tif (!hasOwn.call(obj, name)) {\n\t\t\treturn void 0;\n\t\t} else if (gOPD) {\n\t\t\t// In early versions of node, obj['__proto__'] is buggy when obj has\n\t\t\t// __proto__ as an own property. Object.getOwnPropertyDescriptor() works.\n\t\t\treturn gOPD(obj, name).value;\n\t\t}\n\t}\n\n\treturn obj[name];\n};\n\nmodule.exports = function extend() {\n\tvar options, name, src, copy, copyIsArray, clone;\n\tvar target = arguments[0];\n\tvar i = 1;\n\tvar length = arguments.length;\n\tvar deep = false;\n\n\t// Handle a deep copy situation\n\tif (typeof target === 'boolean') {\n\t\tdeep = target;\n\t\ttarget = arguments[1] || {};\n\t\t// skip the boolean and the target\n\t\ti = 2;\n\t}\n\tif (target == null || (typeof target !== 'object' && typeof target !== 'function')) {\n\t\ttarget = {};\n\t}\n\n\tfor (; i < length; ++i) {\n\t\toptions = arguments[i];\n\t\t// Only deal with non-null/undefined values\n\t\tif (options != null) {\n\t\t\t// Extend the base object\n\t\t\tfor (name in options) {\n\t\t\t\tsrc = getProperty(target, name);\n\t\t\t\tcopy = getProperty(options, name);\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif (target !== copy) {\n\t\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\t\tif (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {\n\t\t\t\t\t\tif (copyIsArray) {\n\t\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\t\tclone = src && isArray(src) ? src : [];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tclone = src && isPlainObject(src) ? src : {};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: extend(deep, clone, copy) });\n\n\t\t\t\t\t// Don't bring in undefined values\n\t\t\t\t\t} else if (typeof copy !== 'undefined') {\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: copy });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n", "function _interopRequireDefault(e) {\n  return e && e.__esModule ? e : {\n    \"default\": e\n  };\n}\nmodule.exports = _interopRequireDefault, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;", "function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return module.exports = _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports, _typeof(o);\n}\nmodule.exports = _typeof, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = requiredArgs;\nfunction requiredArgs(required, args) {\n  if (args.length < required) {\n    throw new TypeError(required + ' argument' + (required > 1 ? 's' : '') + ' required, but only ' + args.length + ' present');\n  }\n}\nmodule.exports = exports.default;", "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isDate;\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime/helpers/typeof\"));\nvar _index = _interopRequireDefault(require(\"../_lib/requiredArgs/index.js\"));\n/**\n * @name isDate\n * @category Common Helpers\n * @summary Is the given value a date?\n *\n * @description\n * Returns true if the given value is an instance of Date. The function works for dates transferred across iframes.\n *\n * @param {*} value - the value to check\n * @returns {boolean} true if the given value is a date\n * @throws {TypeError} 1 arguments required\n *\n * @example\n * // For a valid date:\n * const result = isDate(new Date())\n * //=> true\n *\n * @example\n * // For an invalid date:\n * const result = isDate(new Date(NaN))\n * //=> true\n *\n * @example\n * // For some value:\n * const result = isDate('2014-02-31')\n * //=> false\n *\n * @example\n * // For an object:\n * const result = isDate({})\n * //=> false\n */\nfunction isDate(value) {\n  (0, _index.default)(1, arguments);\n  return value instanceof Date || (0, _typeof2.default)(value) === 'object' && Object.prototype.toString.call(value) === '[object Date]';\n}\nmodule.exports = exports.default;", "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = toDate;\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime/helpers/typeof\"));\nvar _index = _interopRequireDefault(require(\"../_lib/requiredArgs/index.js\"));\n/**\n * @name toDate\n * @category Common Helpers\n * @summary Convert the given argument to an instance of Date.\n *\n * @description\n * Convert the given argument to an instance of Date.\n *\n * If the argument is an instance of Date, the function returns its clone.\n *\n * If the argument is a number, it is treated as a timestamp.\n *\n * If the argument is none of the above, the function returns Invalid Date.\n *\n * **Note**: *all* Date arguments passed to any *date-fns* function is processed by `toDate`.\n *\n * @param {Date|Number} argument - the value to convert\n * @returns {Date} the parsed date in the local time zone\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Clone the date:\n * const result = toDate(new Date(2014, 1, 11, 11, 30, 30))\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert the timestamp to date:\n * const result = toDate(1392098430000)\n * //=> Tue Feb 11 2014 11:30:30\n */\nfunction toDate(argument) {\n  (0, _index.default)(1, arguments);\n  var argStr = Object.prototype.toString.call(argument);\n\n  // Clone the date\n  if (argument instanceof Date || (0, _typeof2.default)(argument) === 'object' && argStr === '[object Date]') {\n    // Prevent the date to lose the milliseconds when passed to new Date() in IE10\n    return new Date(argument.getTime());\n  } else if (typeof argument === 'number' || argStr === '[object Number]') {\n    return new Date(argument);\n  } else {\n    if ((typeof argument === 'string' || argStr === '[object String]') && typeof console !== 'undefined') {\n      // eslint-disable-next-line no-console\n      console.warn(\"Starting with v2.0.0-beta.1 date-fns doesn't accept strings as date arguments. Please use `parseISO` to parse strings. See: https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#string-arguments\");\n      // eslint-disable-next-line no-console\n      console.warn(new Error().stack);\n    }\n    return new Date(NaN);\n  }\n}\nmodule.exports = exports.default;", "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isValid;\nvar _index = _interopRequireDefault(require(\"../isDate/index.js\"));\nvar _index2 = _interopRequireDefault(require(\"../toDate/index.js\"));\nvar _index3 = _interopRequireDefault(require(\"../_lib/requiredArgs/index.js\"));\n/**\n * @name isValid\n * @category Common Helpers\n * @summary Is the given date valid?\n *\n * @description\n * Returns false if argument is Invalid Date and true otherwise.\n * Argument is converted to Date using `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}\n * Invalid Date is a Date, whose time value is NaN.\n *\n * Time value of Date: http://es5.github.io/#x15.9.1.1\n *\n * @param {*} date - the date to check\n * @returns {Boolean} the date is valid\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // For the valid date:\n * const result = isValid(new Date(2014, 1, 31))\n * //=> true\n *\n * @example\n * // For the value, convertable into a date:\n * const result = isValid(1393804800000)\n * //=> true\n *\n * @example\n * // For the invalid date:\n * const result = isValid(new Date(''))\n * //=> false\n */\nfunction isValid(dirtyDate) {\n  (0, _index3.default)(1, arguments);\n  if (!(0, _index.default)(dirtyDate) && typeof dirtyDate !== 'number') {\n    return false;\n  }\n  var date = (0, _index2.default)(dirtyDate);\n  return !isNaN(Number(date));\n}\nmodule.exports = exports.default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = toInteger;\nfunction toInteger(dirtyNumber) {\n  if (dirtyNumber === null || dirtyNumber === true || dirtyNumber === false) {\n    return NaN;\n  }\n  var number = Number(dirtyNumber);\n  if (isNaN(number)) {\n    return number;\n  }\n  return number < 0 ? Math.ceil(number) : Math.floor(number);\n}\nmodule.exports = exports.default;", "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = addMilliseconds;\nvar _index = _interopRequireDefault(require(\"../_lib/toInteger/index.js\"));\nvar _index2 = _interopRequireDefault(require(\"../toDate/index.js\"));\nvar _index3 = _interopRequireDefault(require(\"../_lib/requiredArgs/index.js\"));\n/**\n * @name addMilliseconds\n * @category Millisecond Helpers\n * @summary Add the specified number of milliseconds to the given date.\n *\n * @description\n * Add the specified number of milliseconds to the given date.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of milliseconds to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the milliseconds added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 750 milliseconds to 10 July 2014 12:45:30.000:\n * const result = addMilliseconds(new Date(2014, 6, 10, 12, 45, 30, 0), 750)\n * //=> Thu Jul 10 2014 12:45:30.750\n */\nfunction addMilliseconds(dirtyDate, dirtyAmount) {\n  (0, _index3.default)(2, arguments);\n  var timestamp = (0, _index2.default)(dirtyDate).getTime();\n  var amount = (0, _index.default)(dirtyAmount);\n  return new Date(timestamp + amount);\n}\nmodule.exports = exports.default;", "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = subMilliseconds;\nvar _index = _interopRequireDefault(require(\"../addMilliseconds/index.js\"));\nvar _index2 = _interopRequireDefault(require(\"../_lib/requiredArgs/index.js\"));\nvar _index3 = _interopRequireDefault(require(\"../_lib/toInteger/index.js\"));\n/**\n * @name subMilliseconds\n * @category Millisecond Helpers\n * @summary Subtract the specified number of milliseconds from the given date.\n *\n * @description\n * Subtract the specified number of milliseconds from the given date.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of milliseconds to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the milliseconds subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract 750 milliseconds from 10 July 2014 12:45:30.000:\n * const result = subMilliseconds(new Date(2014, 6, 10, 12, 45, 30, 0), 750)\n * //=> Thu Jul 10 2014 12:45:29.250\n */\nfunction subMilliseconds(dirtyDate, dirtyAmount) {\n  (0, _index2.default)(2, arguments);\n  var amount = (0, _index3.default)(dirtyAmount);\n  return (0, _index.default)(dirtyDate, -amount);\n}\nmodule.exports = exports.default;", "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = getUTCDayOfYear;\nvar _index = _interopRequireDefault(require(\"../../toDate/index.js\"));\nvar _index2 = _interopRequireDefault(require(\"../requiredArgs/index.js\"));\nvar MILLISECONDS_IN_DAY = 86400000;\nfunction getUTCDayOfYear(dirtyDate) {\n  (0, _index2.default)(1, arguments);\n  var date = (0, _index.default)(dirtyDate);\n  var timestamp = date.getTime();\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n  var startOfYearTimestamp = date.getTime();\n  var difference = timestamp - startOfYearTimestamp;\n  return Math.floor(difference / MILLISECONDS_IN_DAY) + 1;\n}\nmodule.exports = exports.default;", "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = startOfUTCISOWeek;\nvar _index = _interopRequireDefault(require(\"../../toDate/index.js\"));\nvar _index2 = _interopRequireDefault(require(\"../requiredArgs/index.js\"));\nfunction startOfUTCISOWeek(dirtyDate) {\n  (0, _index2.default)(1, arguments);\n  var weekStartsOn = 1;\n  var date = (0, _index.default)(dirtyDate);\n  var day = date.getUTCDay();\n  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n  date.setUTCDate(date.getUTCDate() - diff);\n  date.setUTCHours(0, 0, 0, 0);\n  return date;\n}\nmodule.exports = exports.default;", "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = getUTCISOWeekYear;\nvar _index = _interopRequireDefault(require(\"../../toDate/index.js\"));\nvar _index2 = _interopRequireDefault(require(\"../requiredArgs/index.js\"));\nvar _index3 = _interopRequireDefault(require(\"../startOfUTCISOWeek/index.js\"));\nfunction getUTCISOWeekYear(dirtyDate) {\n  (0, _index2.default)(1, arguments);\n  var date = (0, _index.default)(dirtyDate);\n  var year = date.getUTCFullYear();\n  var fourthOfJanuaryOfNextYear = new Date(0);\n  fourthOfJanuaryOfNextYear.setUTCFullYear(year + 1, 0, 4);\n  fourthOfJanuaryOfNextYear.setUTCHours(0, 0, 0, 0);\n  var startOfNextYear = (0, _index3.default)(fourthOfJanuaryOfNextYear);\n  var fourthOfJanuaryOfThisYear = new Date(0);\n  fourthOfJanuaryOfThisYear.setUTCFullYear(year, 0, 4);\n  fourthOfJanuaryOfThisYear.setUTCHours(0, 0, 0, 0);\n  var startOfThisYear = (0, _index3.default)(fourthOfJanuaryOfThisYear);\n  if (date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}\nmodule.exports = exports.default;", "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = startOfUTCISOWeekYear;\nvar _index = _interopRequireDefault(require(\"../getUTCISOWeekYear/index.js\"));\nvar _index2 = _interopRequireDefault(require(\"../startOfUTCISOWeek/index.js\"));\nvar _index3 = _interopRequireDefault(require(\"../requiredArgs/index.js\"));\nfunction startOfUTCISOWeekYear(dirtyDate) {\n  (0, _index3.default)(1, arguments);\n  var year = (0, _index.default)(dirtyDate);\n  var fourthOfJanuary = new Date(0);\n  fourthOfJanuary.setUTCFullYear(year, 0, 4);\n  fourthOfJanuary.setUTCHours(0, 0, 0, 0);\n  var date = (0, _index2.default)(fourthOfJanuary);\n  return date;\n}\nmodule.exports = exports.default;", "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = getUTCISOWeek;\nvar _index = _interopRequireDefault(require(\"../../toDate/index.js\"));\nvar _index2 = _interopRequireDefault(require(\"../startOfUTCISOWeek/index.js\"));\nvar _index3 = _interopRequireDefault(require(\"../startOfUTCISOWeekYear/index.js\"));\nvar _index4 = _interopRequireDefault(require(\"../requiredArgs/index.js\"));\nvar MILLISECONDS_IN_WEEK = 604800000;\nfunction getUTCISOWeek(dirtyDate) {\n  (0, _index4.default)(1, arguments);\n  var date = (0, _index.default)(dirtyDate);\n  var diff = (0, _index2.default)(date).getTime() - (0, _index3.default)(date).getTime();\n\n  // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n  return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;\n}\nmodule.exports = exports.default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getDefaultOptions = getDefaultOptions;\nexports.setDefaultOptions = setDefaultOptions;\nvar defaultOptions = {};\nfunction getDefaultOptions() {\n  return defaultOptions;\n}\nfunction setDefaultOptions(newOptions) {\n  defaultOptions = newOptions;\n}", "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = startOfUTCWeek;\nvar _index = _interopRequireDefault(require(\"../../toDate/index.js\"));\nvar _index2 = _interopRequireDefault(require(\"../requiredArgs/index.js\"));\nvar _index3 = _interopRequireDefault(require(\"../toInteger/index.js\"));\nvar _index4 = require(\"../defaultOptions/index.js\");\nfunction startOfUTCWeek(dirtyDate, options) {\n  var _ref, _ref2, _ref3, _options$weekStartsOn, _options$locale, _options$locale$optio, _defaultOptions$local, _defaultOptions$local2;\n  (0, _index2.default)(1, arguments);\n  var defaultOptions = (0, _index4.getDefaultOptions)();\n  var weekStartsOn = (0, _index3.default)((_ref = (_ref2 = (_ref3 = (_options$weekStartsOn = options === null || options === void 0 ? void 0 : options.weekStartsOn) !== null && _options$weekStartsOn !== void 0 ? _options$weekStartsOn : options === null || options === void 0 ? void 0 : (_options$locale = options.locale) === null || _options$locale === void 0 ? void 0 : (_options$locale$optio = _options$locale.options) === null || _options$locale$optio === void 0 ? void 0 : _options$locale$optio.weekStartsOn) !== null && _ref3 !== void 0 ? _ref3 : defaultOptions.weekStartsOn) !== null && _ref2 !== void 0 ? _ref2 : (_defaultOptions$local = defaultOptions.locale) === null || _defaultOptions$local === void 0 ? void 0 : (_defaultOptions$local2 = _defaultOptions$local.options) === null || _defaultOptions$local2 === void 0 ? void 0 : _defaultOptions$local2.weekStartsOn) !== null && _ref !== void 0 ? _ref : 0);\n\n  // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n  var date = (0, _index.default)(dirtyDate);\n  var day = date.getUTCDay();\n  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n  date.setUTCDate(date.getUTCDate() - diff);\n  date.setUTCHours(0, 0, 0, 0);\n  return date;\n}\nmodule.exports = exports.default;", "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = getUTCWeekYear;\nvar _index = _interopRequireDefault(require(\"../../toDate/index.js\"));\nvar _index2 = _interopRequireDefault(require(\"../requiredArgs/index.js\"));\nvar _index3 = _interopRequireDefault(require(\"../startOfUTCWeek/index.js\"));\nvar _index4 = _interopRequireDefault(require(\"../toInteger/index.js\"));\nvar _index5 = require(\"../defaultOptions/index.js\");\nfunction getUTCWeekYear(dirtyDate, options) {\n  var _ref, _ref2, _ref3, _options$firstWeekCon, _options$locale, _options$locale$optio, _defaultOptions$local, _defaultOptions$local2;\n  (0, _index2.default)(1, arguments);\n  var date = (0, _index.default)(dirtyDate);\n  var year = date.getUTCFullYear();\n  var defaultOptions = (0, _index5.getDefaultOptions)();\n  var firstWeekContainsDate = (0, _index4.default)((_ref = (_ref2 = (_ref3 = (_options$firstWeekCon = options === null || options === void 0 ? void 0 : options.firstWeekContainsDate) !== null && _options$firstWeekCon !== void 0 ? _options$firstWeekCon : options === null || options === void 0 ? void 0 : (_options$locale = options.locale) === null || _options$locale === void 0 ? void 0 : (_options$locale$optio = _options$locale.options) === null || _options$locale$optio === void 0 ? void 0 : _options$locale$optio.firstWeekContainsDate) !== null && _ref3 !== void 0 ? _ref3 : defaultOptions.firstWeekContainsDate) !== null && _ref2 !== void 0 ? _ref2 : (_defaultOptions$local = defaultOptions.locale) === null || _defaultOptions$local === void 0 ? void 0 : (_defaultOptions$local2 = _defaultOptions$local.options) === null || _defaultOptions$local2 === void 0 ? void 0 : _defaultOptions$local2.firstWeekContainsDate) !== null && _ref !== void 0 ? _ref : 1);\n\n  // Test if weekStartsOn is between 1 and 7 _and_ is not NaN\n  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {\n    throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively');\n  }\n  var firstWeekOfNextYear = new Date(0);\n  firstWeekOfNextYear.setUTCFullYear(year + 1, 0, firstWeekContainsDate);\n  firstWeekOfNextYear.setUTCHours(0, 0, 0, 0);\n  var startOfNextYear = (0, _index3.default)(firstWeekOfNextYear, options);\n  var firstWeekOfThisYear = new Date(0);\n  firstWeekOfThisYear.setUTCFullYear(year, 0, firstWeekContainsDate);\n  firstWeekOfThisYear.setUTCHours(0, 0, 0, 0);\n  var startOfThisYear = (0, _index3.default)(firstWeekOfThisYear, options);\n  if (date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}\nmodule.exports = exports.default;", "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = startOfUTCWeekYear;\nvar _index = _interopRequireDefault(require(\"../getUTCWeekYear/index.js\"));\nvar _index2 = _interopRequireDefault(require(\"../requiredArgs/index.js\"));\nvar _index3 = _interopRequireDefault(require(\"../startOfUTCWeek/index.js\"));\nvar _index4 = _interopRequireDefault(require(\"../toInteger/index.js\"));\nvar _index5 = require(\"../defaultOptions/index.js\");\nfunction startOfUTCWeekYear(dirtyDate, options) {\n  var _ref, _ref2, _ref3, _options$firstWeekCon, _options$locale, _options$locale$optio, _defaultOptions$local, _defaultOptions$local2;\n  (0, _index2.default)(1, arguments);\n  var defaultOptions = (0, _index5.getDefaultOptions)();\n  var firstWeekContainsDate = (0, _index4.default)((_ref = (_ref2 = (_ref3 = (_options$firstWeekCon = options === null || options === void 0 ? void 0 : options.firstWeekContainsDate) !== null && _options$firstWeekCon !== void 0 ? _options$firstWeekCon : options === null || options === void 0 ? void 0 : (_options$locale = options.locale) === null || _options$locale === void 0 ? void 0 : (_options$locale$optio = _options$locale.options) === null || _options$locale$optio === void 0 ? void 0 : _options$locale$optio.firstWeekContainsDate) !== null && _ref3 !== void 0 ? _ref3 : defaultOptions.firstWeekContainsDate) !== null && _ref2 !== void 0 ? _ref2 : (_defaultOptions$local = defaultOptions.locale) === null || _defaultOptions$local === void 0 ? void 0 : (_defaultOptions$local2 = _defaultOptions$local.options) === null || _defaultOptions$local2 === void 0 ? void 0 : _defaultOptions$local2.firstWeekContainsDate) !== null && _ref !== void 0 ? _ref : 1);\n  var year = (0, _index.default)(dirtyDate, options);\n  var firstWeek = new Date(0);\n  firstWeek.setUTCFullYear(year, 0, firstWeekContainsDate);\n  firstWeek.setUTCHours(0, 0, 0, 0);\n  var date = (0, _index3.default)(firstWeek, options);\n  return date;\n}\nmodule.exports = exports.default;", "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = getUTCWeek;\nvar _index = _interopRequireDefault(require(\"../../toDate/index.js\"));\nvar _index2 = _interopRequireDefault(require(\"../startOfUTCWeek/index.js\"));\nvar _index3 = _interopRequireDefault(require(\"../startOfUTCWeekYear/index.js\"));\nvar _index4 = _interopRequireDefault(require(\"../requiredArgs/index.js\"));\nvar MILLISECONDS_IN_WEEK = 604800000;\nfunction getUTCWeek(dirtyDate, options) {\n  (0, _index4.default)(1, arguments);\n  var date = (0, _index.default)(dirtyDate);\n  var diff = (0, _index2.default)(date, options).getTime() - (0, _index3.default)(date, options).getTime();\n\n  // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n  return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;\n}\nmodule.exports = exports.default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = addLeadingZeros;\nfunction addLeadingZeros(number, targetLength) {\n  var sign = number < 0 ? '-' : '';\n  var output = Math.abs(number).toString();\n  while (output.length < targetLength) {\n    output = '0' + output;\n  }\n  return sign + output;\n}\nmodule.exports = exports.default;", "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _index = _interopRequireDefault(require(\"../../addLeadingZeros/index.js\"));\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* |                                |\n * |  d  | Day of month                   |  D  |                                |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  m  | Minute                         |  M  | Month                          |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  y  | Year (abs)                     |  Y  |                                |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n */\n\nvar formatters = {\n  // Year\n  y: function y(date, token) {\n    // From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_tokens\n    // | Year     |     y | yy |   yyy |  yyyy | yyyyy |\n    // |----------|-------|----|-------|-------|-------|\n    // | AD 1     |     1 | 01 |   001 |  0001 | 00001 |\n    // | AD 12    |    12 | 12 |   012 |  0012 | 00012 |\n    // | AD 123   |   123 | 23 |   123 |  0123 | 00123 |\n    // | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |\n    // | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |\n\n    var signedYear = date.getUTCFullYear();\n    // Returns 1 for 1 BC (which is year 0 in JavaScript)\n    var year = signedYear > 0 ? signedYear : 1 - signedYear;\n    return (0, _index.default)(token === 'yy' ? year % 100 : year, token.length);\n  },\n  // Month\n  M: function M(date, token) {\n    var month = date.getUTCMonth();\n    return token === 'M' ? String(month + 1) : (0, _index.default)(month + 1, 2);\n  },\n  // Day of the month\n  d: function d(date, token) {\n    return (0, _index.default)(date.getUTCDate(), token.length);\n  },\n  // AM or PM\n  a: function a(date, token) {\n    var dayPeriodEnumValue = date.getUTCHours() / 12 >= 1 ? 'pm' : 'am';\n    switch (token) {\n      case 'a':\n      case 'aa':\n        return dayPeriodEnumValue.toUpperCase();\n      case 'aaa':\n        return dayPeriodEnumValue;\n      case 'aaaaa':\n        return dayPeriodEnumValue[0];\n      case 'aaaa':\n      default:\n        return dayPeriodEnumValue === 'am' ? 'a.m.' : 'p.m.';\n    }\n  },\n  // Hour [1-12]\n  h: function h(date, token) {\n    return (0, _index.default)(date.getUTCHours() % 12 || 12, token.length);\n  },\n  // Hour [0-23]\n  H: function H(date, token) {\n    return (0, _index.default)(date.getUTCHours(), token.length);\n  },\n  // Minute\n  m: function m(date, token) {\n    return (0, _index.default)(date.getUTCMinutes(), token.length);\n  },\n  // Second\n  s: function s(date, token) {\n    return (0, _index.default)(date.getUTCSeconds(), token.length);\n  },\n  // Fraction of second\n  S: function S(date, token) {\n    var numberOfDigits = token.length;\n    var milliseconds = date.getUTCMilliseconds();\n    var fractionalSeconds = Math.floor(milliseconds * Math.pow(10, numberOfDigits - 3));\n    return (0, _index.default)(fractionalSeconds, token.length);\n  }\n};\nvar _default = formatters;\nexports.default = _default;\nmodule.exports = exports.default;", "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _index = _interopRequireDefault(require(\"../../../_lib/getUTCDayOfYear/index.js\"));\nvar _index2 = _interopRequireDefault(require(\"../../../_lib/getUTCISOWeek/index.js\"));\nvar _index3 = _interopRequireDefault(require(\"../../../_lib/getUTCISOWeekYear/index.js\"));\nvar _index4 = _interopRequireDefault(require(\"../../../_lib/getUTCWeek/index.js\"));\nvar _index5 = _interopRequireDefault(require(\"../../../_lib/getUTCWeekYear/index.js\"));\nvar _index6 = _interopRequireDefault(require(\"../../addLeadingZeros/index.js\"));\nvar _index7 = _interopRequireDefault(require(\"../lightFormatters/index.js\"));\nvar dayPeriodEnum = {\n  am: 'am',\n  pm: 'pm',\n  midnight: 'midnight',\n  noon: 'noon',\n  morning: 'morning',\n  afternoon: 'afternoon',\n  evening: 'evening',\n  night: 'night'\n};\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* | Milliseconds in day            |\n * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |\n * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |\n * |  d  | Day of month                   |  D  | Day of year                    |\n * |  e  | Local day of week              |  E  | Day of week                    |\n * |  f  |                                |  F* | Day of week in month           |\n * |  g* | Modified Julian day            |  G  | Era                            |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  i! | ISO day of week                |  I! | ISO week of year               |\n * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |\n * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |\n * |  l* | (deprecated)                   |  L  | Stand-alone month              |\n * |  m  | Minute                         |  M  | Month                          |\n * |  n  |                                |  N  |                                |\n * |  o! | Ordinal number modifier        |  O  | Timezone (GMT)                 |\n * |  p! | Long localized time            |  P! | Long localized date            |\n * |  q  | Stand-alone quarter            |  Q  | Quarter                        |\n * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |\n * |  u  | Extended year                  |  U* | Cyclic year                    |\n * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |\n * |  w  | Local week of year             |  W* | Week of month                  |\n * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |\n * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |\n * |  z  | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n *\n * Letters marked by ! are non-standard, but implemented by date-fns:\n * - `o` modifies the previous token to turn it into an ordinal (see `format` docs)\n * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,\n *   i.e. 7 for Sunday, 1 for Monday, etc.\n * - `I` is ISO week of year, as opposed to `w` which is local week of year.\n * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.\n *   `R` is supposed to be used in conjunction with `I` and `i`\n *   for universal ISO week-numbering date, whereas\n *   `Y` is supposed to be used in conjunction with `w` and `e`\n *   for week-numbering date specific to the locale.\n * - `P` is long localized date format\n * - `p` is long localized time format\n */\n\nvar formatters = {\n  // Era\n  G: function G(date, token, localize) {\n    var era = date.getUTCFullYear() > 0 ? 1 : 0;\n    switch (token) {\n      // AD, BC\n      case 'G':\n      case 'GG':\n      case 'GGG':\n        return localize.era(era, {\n          width: 'abbreviated'\n        });\n      // A, B\n      case 'GGGGG':\n        return localize.era(era, {\n          width: 'narrow'\n        });\n      // Anno Domini, Before Christ\n      case 'GGGG':\n      default:\n        return localize.era(era, {\n          width: 'wide'\n        });\n    }\n  },\n  // Year\n  y: function y(date, token, localize) {\n    // Ordinal number\n    if (token === 'yo') {\n      var signedYear = date.getUTCFullYear();\n      // Returns 1 for 1 BC (which is year 0 in JavaScript)\n      var year = signedYear > 0 ? signedYear : 1 - signedYear;\n      return localize.ordinalNumber(year, {\n        unit: 'year'\n      });\n    }\n    return _index7.default.y(date, token);\n  },\n  // Local week-numbering year\n  Y: function Y(date, token, localize, options) {\n    var signedWeekYear = (0, _index5.default)(date, options);\n    // Returns 1 for 1 BC (which is year 0 in JavaScript)\n    var weekYear = signedWeekYear > 0 ? signedWeekYear : 1 - signedWeekYear;\n\n    // Two digit year\n    if (token === 'YY') {\n      var twoDigitYear = weekYear % 100;\n      return (0, _index6.default)(twoDigitYear, 2);\n    }\n\n    // Ordinal number\n    if (token === 'Yo') {\n      return localize.ordinalNumber(weekYear, {\n        unit: 'year'\n      });\n    }\n\n    // Padding\n    return (0, _index6.default)(weekYear, token.length);\n  },\n  // ISO week-numbering year\n  R: function R(date, token) {\n    var isoWeekYear = (0, _index3.default)(date);\n\n    // Padding\n    return (0, _index6.default)(isoWeekYear, token.length);\n  },\n  // Extended year. This is a single number designating the year of this calendar system.\n  // The main difference between `y` and `u` localizers are B.C. years:\n  // | Year | `y` | `u` |\n  // |------|-----|-----|\n  // | AC 1 |   1 |   1 |\n  // | BC 1 |   1 |   0 |\n  // | BC 2 |   2 |  -1 |\n  // Also `yy` always returns the last two digits of a year,\n  // while `uu` pads single digit years to 2 characters and returns other years unchanged.\n  u: function u(date, token) {\n    var year = date.getUTCFullYear();\n    return (0, _index6.default)(year, token.length);\n  },\n  // Quarter\n  Q: function Q(date, token, localize) {\n    var quarter = Math.ceil((date.getUTCMonth() + 1) / 3);\n    switch (token) {\n      // 1, 2, 3, 4\n      case 'Q':\n        return String(quarter);\n      // 01, 02, 03, 04\n      case 'QQ':\n        return (0, _index6.default)(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n      case 'Qo':\n        return localize.ordinalNumber(quarter, {\n          unit: 'quarter'\n        });\n      // Q1, Q2, Q3, Q4\n      case 'QQQ':\n        return localize.quarter(quarter, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n      case 'QQQQQ':\n        return localize.quarter(quarter, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // 1st quarter, 2nd quarter, ...\n      case 'QQQQ':\n      default:\n        return localize.quarter(quarter, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Stand-alone quarter\n  q: function q(date, token, localize) {\n    var quarter = Math.ceil((date.getUTCMonth() + 1) / 3);\n    switch (token) {\n      // 1, 2, 3, 4\n      case 'q':\n        return String(quarter);\n      // 01, 02, 03, 04\n      case 'qq':\n        return (0, _index6.default)(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n      case 'qo':\n        return localize.ordinalNumber(quarter, {\n          unit: 'quarter'\n        });\n      // Q1, Q2, Q3, Q4\n      case 'qqq':\n        return localize.quarter(quarter, {\n          width: 'abbreviated',\n          context: 'standalone'\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n      case 'qqqqq':\n        return localize.quarter(quarter, {\n          width: 'narrow',\n          context: 'standalone'\n        });\n      // 1st quarter, 2nd quarter, ...\n      case 'qqqq':\n      default:\n        return localize.quarter(quarter, {\n          width: 'wide',\n          context: 'standalone'\n        });\n    }\n  },\n  // Month\n  M: function M(date, token, localize) {\n    var month = date.getUTCMonth();\n    switch (token) {\n      case 'M':\n      case 'MM':\n        return _index7.default.M(date, token);\n      // 1st, 2nd, ..., 12th\n      case 'Mo':\n        return localize.ordinalNumber(month + 1, {\n          unit: 'month'\n        });\n      // Jan, Feb, ..., Dec\n      case 'MMM':\n        return localize.month(month, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // J, F, ..., D\n      case 'MMMMM':\n        return localize.month(month, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // January, February, ..., December\n      case 'MMMM':\n      default:\n        return localize.month(month, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Stand-alone month\n  L: function L(date, token, localize) {\n    var month = date.getUTCMonth();\n    switch (token) {\n      // 1, 2, ..., 12\n      case 'L':\n        return String(month + 1);\n      // 01, 02, ..., 12\n      case 'LL':\n        return (0, _index6.default)(month + 1, 2);\n      // 1st, 2nd, ..., 12th\n      case 'Lo':\n        return localize.ordinalNumber(month + 1, {\n          unit: 'month'\n        });\n      // Jan, Feb, ..., Dec\n      case 'LLL':\n        return localize.month(month, {\n          width: 'abbreviated',\n          context: 'standalone'\n        });\n      // J, F, ..., D\n      case 'LLLLL':\n        return localize.month(month, {\n          width: 'narrow',\n          context: 'standalone'\n        });\n      // January, February, ..., December\n      case 'LLLL':\n      default:\n        return localize.month(month, {\n          width: 'wide',\n          context: 'standalone'\n        });\n    }\n  },\n  // Local week of year\n  w: function w(date, token, localize, options) {\n    var week = (0, _index4.default)(date, options);\n    if (token === 'wo') {\n      return localize.ordinalNumber(week, {\n        unit: 'week'\n      });\n    }\n    return (0, _index6.default)(week, token.length);\n  },\n  // ISO week of year\n  I: function I(date, token, localize) {\n    var isoWeek = (0, _index2.default)(date);\n    if (token === 'Io') {\n      return localize.ordinalNumber(isoWeek, {\n        unit: 'week'\n      });\n    }\n    return (0, _index6.default)(isoWeek, token.length);\n  },\n  // Day of the month\n  d: function d(date, token, localize) {\n    if (token === 'do') {\n      return localize.ordinalNumber(date.getUTCDate(), {\n        unit: 'date'\n      });\n    }\n    return _index7.default.d(date, token);\n  },\n  // Day of year\n  D: function D(date, token, localize) {\n    var dayOfYear = (0, _index.default)(date);\n    if (token === 'Do') {\n      return localize.ordinalNumber(dayOfYear, {\n        unit: 'dayOfYear'\n      });\n    }\n    return (0, _index6.default)(dayOfYear, token.length);\n  },\n  // Day of week\n  E: function E(date, token, localize) {\n    var dayOfWeek = date.getUTCDay();\n    switch (token) {\n      // Tue\n      case 'E':\n      case 'EE':\n      case 'EEE':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // T\n      case 'EEEEE':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // Tu\n      case 'EEEEEE':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'formatting'\n        });\n      // Tuesday\n      case 'EEEE':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Local day of week\n  e: function e(date, token, localize, options) {\n    var dayOfWeek = date.getUTCDay();\n    var localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n    switch (token) {\n      // Numerical value (Nth day of week with current locale or weekStartsOn)\n      case 'e':\n        return String(localDayOfWeek);\n      // Padded numerical value\n      case 'ee':\n        return (0, _index6.default)(localDayOfWeek, 2);\n      // 1st, 2nd, ..., 7th\n      case 'eo':\n        return localize.ordinalNumber(localDayOfWeek, {\n          unit: 'day'\n        });\n      case 'eee':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // T\n      case 'eeeee':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // Tu\n      case 'eeeeee':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'formatting'\n        });\n      // Tuesday\n      case 'eeee':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Stand-alone local day of week\n  c: function c(date, token, localize, options) {\n    var dayOfWeek = date.getUTCDay();\n    var localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n    switch (token) {\n      // Numerical value (same as in `e`)\n      case 'c':\n        return String(localDayOfWeek);\n      // Padded numerical value\n      case 'cc':\n        return (0, _index6.default)(localDayOfWeek, token.length);\n      // 1st, 2nd, ..., 7th\n      case 'co':\n        return localize.ordinalNumber(localDayOfWeek, {\n          unit: 'day'\n        });\n      case 'ccc':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'standalone'\n        });\n      // T\n      case 'ccccc':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'standalone'\n        });\n      // Tu\n      case 'cccccc':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'standalone'\n        });\n      // Tuesday\n      case 'cccc':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'standalone'\n        });\n    }\n  },\n  // ISO day of week\n  i: function i(date, token, localize) {\n    var dayOfWeek = date.getUTCDay();\n    var isoDayOfWeek = dayOfWeek === 0 ? 7 : dayOfWeek;\n    switch (token) {\n      // 2\n      case 'i':\n        return String(isoDayOfWeek);\n      // 02\n      case 'ii':\n        return (0, _index6.default)(isoDayOfWeek, token.length);\n      // 2nd\n      case 'io':\n        return localize.ordinalNumber(isoDayOfWeek, {\n          unit: 'day'\n        });\n      // Tue\n      case 'iii':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // T\n      case 'iiiii':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // Tu\n      case 'iiiiii':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'formatting'\n        });\n      // Tuesday\n      case 'iiii':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // AM or PM\n  a: function a(date, token, localize) {\n    var hours = date.getUTCHours();\n    var dayPeriodEnumValue = hours / 12 >= 1 ? 'pm' : 'am';\n    switch (token) {\n      case 'a':\n      case 'aa':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      case 'aaa':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        }).toLowerCase();\n      case 'aaaaa':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      case 'aaaa':\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // AM, PM, midnight, noon\n  b: function b(date, token, localize) {\n    var hours = date.getUTCHours();\n    var dayPeriodEnumValue;\n    if (hours === 12) {\n      dayPeriodEnumValue = dayPeriodEnum.noon;\n    } else if (hours === 0) {\n      dayPeriodEnumValue = dayPeriodEnum.midnight;\n    } else {\n      dayPeriodEnumValue = hours / 12 >= 1 ? 'pm' : 'am';\n    }\n    switch (token) {\n      case 'b':\n      case 'bb':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      case 'bbb':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        }).toLowerCase();\n      case 'bbbbb':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      case 'bbbb':\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // in the morning, in the afternoon, in the evening, at night\n  B: function B(date, token, localize) {\n    var hours = date.getUTCHours();\n    var dayPeriodEnumValue;\n    if (hours >= 17) {\n      dayPeriodEnumValue = dayPeriodEnum.evening;\n    } else if (hours >= 12) {\n      dayPeriodEnumValue = dayPeriodEnum.afternoon;\n    } else if (hours >= 4) {\n      dayPeriodEnumValue = dayPeriodEnum.morning;\n    } else {\n      dayPeriodEnumValue = dayPeriodEnum.night;\n    }\n    switch (token) {\n      case 'B':\n      case 'BB':\n      case 'BBB':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      case 'BBBBB':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      case 'BBBB':\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Hour [1-12]\n  h: function h(date, token, localize) {\n    if (token === 'ho') {\n      var hours = date.getUTCHours() % 12;\n      if (hours === 0) hours = 12;\n      return localize.ordinalNumber(hours, {\n        unit: 'hour'\n      });\n    }\n    return _index7.default.h(date, token);\n  },\n  // Hour [0-23]\n  H: function H(date, token, localize) {\n    if (token === 'Ho') {\n      return localize.ordinalNumber(date.getUTCHours(), {\n        unit: 'hour'\n      });\n    }\n    return _index7.default.H(date, token);\n  },\n  // Hour [0-11]\n  K: function K(date, token, localize) {\n    var hours = date.getUTCHours() % 12;\n    if (token === 'Ko') {\n      return localize.ordinalNumber(hours, {\n        unit: 'hour'\n      });\n    }\n    return (0, _index6.default)(hours, token.length);\n  },\n  // Hour [1-24]\n  k: function k(date, token, localize) {\n    var hours = date.getUTCHours();\n    if (hours === 0) hours = 24;\n    if (token === 'ko') {\n      return localize.ordinalNumber(hours, {\n        unit: 'hour'\n      });\n    }\n    return (0, _index6.default)(hours, token.length);\n  },\n  // Minute\n  m: function m(date, token, localize) {\n    if (token === 'mo') {\n      return localize.ordinalNumber(date.getUTCMinutes(), {\n        unit: 'minute'\n      });\n    }\n    return _index7.default.m(date, token);\n  },\n  // Second\n  s: function s(date, token, localize) {\n    if (token === 'so') {\n      return localize.ordinalNumber(date.getUTCSeconds(), {\n        unit: 'second'\n      });\n    }\n    return _index7.default.s(date, token);\n  },\n  // Fraction of second\n  S: function S(date, token) {\n    return _index7.default.S(date, token);\n  },\n  // Timezone (ISO-8601. If offset is 0, output is always `'Z'`)\n  X: function X(date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n    if (timezoneOffset === 0) {\n      return 'Z';\n    }\n    switch (token) {\n      // Hours and optional minutes\n      case 'X':\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XX`\n      case 'XXXX':\n      case 'XX':\n        // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XXX`\n      case 'XXXXX':\n      case 'XXX': // Hours and minutes with `:` delimiter\n      default:\n        return formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Timezone (ISO-8601. If offset is 0, output is `'+00:00'` or equivalent)\n  x: function x(date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n    switch (token) {\n      // Hours and optional minutes\n      case 'x':\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xx`\n      case 'xxxx':\n      case 'xx':\n        // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xxx`\n      case 'xxxxx':\n      case 'xxx': // Hours and minutes with `:` delimiter\n      default:\n        return formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Timezone (GMT)\n  O: function O(date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n    switch (token) {\n      // Short\n      case 'O':\n      case 'OO':\n      case 'OOO':\n        return 'GMT' + formatTimezoneShort(timezoneOffset, ':');\n      // Long\n      case 'OOOO':\n      default:\n        return 'GMT' + formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Timezone (specific non-location)\n  z: function z(date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n    switch (token) {\n      // Short\n      case 'z':\n      case 'zz':\n      case 'zzz':\n        return 'GMT' + formatTimezoneShort(timezoneOffset, ':');\n      // Long\n      case 'zzzz':\n      default:\n        return 'GMT' + formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Seconds timestamp\n  t: function t(date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timestamp = Math.floor(originalDate.getTime() / 1000);\n    return (0, _index6.default)(timestamp, token.length);\n  },\n  // Milliseconds timestamp\n  T: function T(date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timestamp = originalDate.getTime();\n    return (0, _index6.default)(timestamp, token.length);\n  }\n};\nfunction formatTimezoneShort(offset, dirtyDelimiter) {\n  var sign = offset > 0 ? '-' : '+';\n  var absOffset = Math.abs(offset);\n  var hours = Math.floor(absOffset / 60);\n  var minutes = absOffset % 60;\n  if (minutes === 0) {\n    return sign + String(hours);\n  }\n  var delimiter = dirtyDelimiter || '';\n  return sign + String(hours) + delimiter + (0, _index6.default)(minutes, 2);\n}\nfunction formatTimezoneWithOptionalMinutes(offset, dirtyDelimiter) {\n  if (offset % 60 === 0) {\n    var sign = offset > 0 ? '-' : '+';\n    return sign + (0, _index6.default)(Math.abs(offset) / 60, 2);\n  }\n  return formatTimezone(offset, dirtyDelimiter);\n}\nfunction formatTimezone(offset, dirtyDelimiter) {\n  var delimiter = dirtyDelimiter || '';\n  var sign = offset > 0 ? '-' : '+';\n  var absOffset = Math.abs(offset);\n  var hours = (0, _index6.default)(Math.floor(absOffset / 60), 2);\n  var minutes = (0, _index6.default)(absOffset % 60, 2);\n  return sign + hours + delimiter + minutes;\n}\nvar _default = formatters;\nexports.default = _default;\nmodule.exports = exports.default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar dateLongFormatter = function dateLongFormatter(pattern, formatLong) {\n  switch (pattern) {\n    case 'P':\n      return formatLong.date({\n        width: 'short'\n      });\n    case 'PP':\n      return formatLong.date({\n        width: 'medium'\n      });\n    case 'PPP':\n      return formatLong.date({\n        width: 'long'\n      });\n    case 'PPPP':\n    default:\n      return formatLong.date({\n        width: 'full'\n      });\n  }\n};\nvar timeLongFormatter = function timeLongFormatter(pattern, formatLong) {\n  switch (pattern) {\n    case 'p':\n      return formatLong.time({\n        width: 'short'\n      });\n    case 'pp':\n      return formatLong.time({\n        width: 'medium'\n      });\n    case 'ppp':\n      return formatLong.time({\n        width: 'long'\n      });\n    case 'pppp':\n    default:\n      return formatLong.time({\n        width: 'full'\n      });\n  }\n};\nvar dateTimeLongFormatter = function dateTimeLongFormatter(pattern, formatLong) {\n  var matchResult = pattern.match(/(P+)(p+)?/) || [];\n  var datePattern = matchResult[1];\n  var timePattern = matchResult[2];\n  if (!timePattern) {\n    return dateLongFormatter(pattern, formatLong);\n  }\n  var dateTimeFormat;\n  switch (datePattern) {\n    case 'P':\n      dateTimeFormat = formatLong.dateTime({\n        width: 'short'\n      });\n      break;\n    case 'PP':\n      dateTimeFormat = formatLong.dateTime({\n        width: 'medium'\n      });\n      break;\n    case 'PPP':\n      dateTimeFormat = formatLong.dateTime({\n        width: 'long'\n      });\n      break;\n    case 'PPPP':\n    default:\n      dateTimeFormat = formatLong.dateTime({\n        width: 'full'\n      });\n      break;\n  }\n  return dateTimeFormat.replace('{{date}}', dateLongFormatter(datePattern, formatLong)).replace('{{time}}', timeLongFormatter(timePattern, formatLong));\n};\nvar longFormatters = {\n  p: timeLongFormatter,\n  P: dateTimeLongFormatter\n};\nvar _default = longFormatters;\nexports.default = _default;\nmodule.exports = exports.default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = getTimezoneOffsetInMilliseconds;\n/**\n * Google Chrome as of 67.0.3396.87 introduced timezones with offset that includes seconds.\n * They usually appear for dates that denote time before the timezones were introduced\n * (e.g. for 'Europe/Prague' timezone the offset is GMT+00:57:44 before 1 October 1891\n * and GMT+01:00:00 after that date)\n *\n * Date#getTimezoneOffset returns the offset in minutes and would return 57 for the example above,\n * which would lead to incorrect calculations.\n *\n * This function returns the timezone offset in milliseconds that takes seconds in account.\n */\nfunction getTimezoneOffsetInMilliseconds(date) {\n  var utcDate = new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds(), date.getMilliseconds()));\n  utcDate.setUTCFullYear(date.getFullYear());\n  return date.getTime() - utcDate.getTime();\n}\nmodule.exports = exports.default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isProtectedDayOfYearToken = isProtectedDayOfYearToken;\nexports.isProtectedWeekYearToken = isProtectedWeekYearToken;\nexports.throwProtectedError = throwProtectedError;\nvar protectedDayOfYearTokens = ['D', 'DD'];\nvar protectedWeekYearTokens = ['YY', 'YYYY'];\nfunction isProtectedDayOfYearToken(token) {\n  return protectedDayOfYearTokens.indexOf(token) !== -1;\n}\nfunction isProtectedWeekYearToken(token) {\n  return protectedWeekYearTokens.indexOf(token) !== -1;\n}\nfunction throwProtectedError(token, format, input) {\n  if (token === 'YYYY') {\n    throw new RangeError(\"Use `yyyy` instead of `YYYY` (in `\".concat(format, \"`) for formatting years to the input `\").concat(input, \"`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\"));\n  } else if (token === 'YY') {\n    throw new RangeError(\"Use `yy` instead of `YY` (in `\".concat(format, \"`) for formatting years to the input `\").concat(input, \"`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\"));\n  } else if (token === 'D') {\n    throw new RangeError(\"Use `d` instead of `D` (in `\".concat(format, \"`) for formatting days of the month to the input `\").concat(input, \"`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\"));\n  } else if (token === 'DD') {\n    throw new RangeError(\"Use `dd` instead of `DD` (in `\".concat(format, \"`) for formatting days of the month to the input `\").concat(input, \"`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\"));\n  }\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: 'less than a second',\n    other: 'less than {{count}} seconds'\n  },\n  xSeconds: {\n    one: '1 second',\n    other: '{{count}} seconds'\n  },\n  halfAMinute: 'half a minute',\n  lessThanXMinutes: {\n    one: 'less than a minute',\n    other: 'less than {{count}} minutes'\n  },\n  xMinutes: {\n    one: '1 minute',\n    other: '{{count}} minutes'\n  },\n  aboutXHours: {\n    one: 'about 1 hour',\n    other: 'about {{count}} hours'\n  },\n  xHours: {\n    one: '1 hour',\n    other: '{{count}} hours'\n  },\n  xDays: {\n    one: '1 day',\n    other: '{{count}} days'\n  },\n  aboutXWeeks: {\n    one: 'about 1 week',\n    other: 'about {{count}} weeks'\n  },\n  xWeeks: {\n    one: '1 week',\n    other: '{{count}} weeks'\n  },\n  aboutXMonths: {\n    one: 'about 1 month',\n    other: 'about {{count}} months'\n  },\n  xMonths: {\n    one: '1 month',\n    other: '{{count}} months'\n  },\n  aboutXYears: {\n    one: 'about 1 year',\n    other: 'about {{count}} years'\n  },\n  xYears: {\n    one: '1 year',\n    other: '{{count}} years'\n  },\n  overXYears: {\n    one: 'over 1 year',\n    other: 'over {{count}} years'\n  },\n  almostXYears: {\n    one: 'almost 1 year',\n    other: 'almost {{count}} years'\n  }\n};\nvar formatDistance = function formatDistance(token, count, options) {\n  var result;\n  var tokenValue = formatDistanceLocale[token];\n  if (typeof tokenValue === 'string') {\n    result = tokenValue;\n  } else if (count === 1) {\n    result = tokenValue.one;\n  } else {\n    result = tokenValue.other.replace('{{count}}', count.toString());\n  }\n  if (options !== null && options !== void 0 && options.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      return 'in ' + result;\n    } else {\n      return result + ' ago';\n    }\n  }\n  return result;\n};\nvar _default = formatDistance;\nexports.default = _default;\nmodule.exports = exports.default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = buildFormatLongFn;\nfunction buildFormatLongFn(args) {\n  return function () {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    // TODO: Remove String()\n    var width = options.width ? String(options.width) : args.defaultWidth;\n    var format = args.formats[width] || args.formats[args.defaultWidth];\n    return format;\n  };\n}\nmodule.exports = exports.default;", "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _index = _interopRequireDefault(require(\"../../../_lib/buildFormatLongFn/index.js\"));\nvar dateFormats = {\n  full: 'EEEE, MMMM do, y',\n  long: 'MMMM do, y',\n  medium: 'MMM d, y',\n  short: 'MM/dd/yyyy'\n};\nvar timeFormats = {\n  full: 'h:mm:ss a zzzz',\n  long: 'h:mm:ss a z',\n  medium: 'h:mm:ss a',\n  short: 'h:mm a'\n};\nvar dateTimeFormats = {\n  full: \"{{date}} 'at' {{time}}\",\n  long: \"{{date}} 'at' {{time}}\",\n  medium: '{{date}}, {{time}}',\n  short: '{{date}}, {{time}}'\n};\nvar formatLong = {\n  date: (0, _index.default)({\n    formats: dateFormats,\n    defaultWidth: 'full'\n  }),\n  time: (0, _index.default)({\n    formats: timeFormats,\n    defaultWidth: 'full'\n  }),\n  dateTime: (0, _index.default)({\n    formats: dateTimeFormats,\n    defaultWidth: 'full'\n  })\n};\nvar _default = formatLong;\nexports.default = _default;\nmodule.exports = exports.default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar formatRelativeLocale = {\n  lastWeek: \"'last' eeee 'at' p\",\n  yesterday: \"'yesterday at' p\",\n  today: \"'today at' p\",\n  tomorrow: \"'tomorrow at' p\",\n  nextWeek: \"eeee 'at' p\",\n  other: 'P'\n};\nvar formatRelative = function formatRelative(token, _date, _baseDate, _options) {\n  return formatRelativeLocale[token];\n};\nvar _default = formatRelative;\nexports.default = _default;\nmodule.exports = exports.default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = buildLocalizeFn;\nfunction buildLocalizeFn(args) {\n  return function (dirtyIndex, options) {\n    var context = options !== null && options !== void 0 && options.context ? String(options.context) : 'standalone';\n    var valuesArray;\n    if (context === 'formatting' && args.formattingValues) {\n      var defaultWidth = args.defaultFormattingWidth || args.defaultWidth;\n      var width = options !== null && options !== void 0 && options.width ? String(options.width) : defaultWidth;\n      valuesArray = args.formattingValues[width] || args.formattingValues[defaultWidth];\n    } else {\n      var _defaultWidth = args.defaultWidth;\n      var _width = options !== null && options !== void 0 && options.width ? String(options.width) : args.defaultWidth;\n      valuesArray = args.values[_width] || args.values[_defaultWidth];\n    }\n    var index = args.argumentCallback ? args.argumentCallback(dirtyIndex) : dirtyIndex;\n    // @ts-ignore: For some reason TypeScript just don't want to match it, no matter how hard we try. I challenge you to try to remove it!\n    return valuesArray[index];\n  };\n}\nmodule.exports = exports.default;", "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _index = _interopRequireDefault(require(\"../../../_lib/buildLocalizeFn/index.js\"));\nvar eraValues = {\n  narrow: ['B', 'A'],\n  abbreviated: ['BC', 'AD'],\n  wide: ['Before Christ', 'Anno Domini']\n};\nvar quarterValues = {\n  narrow: ['1', '2', '3', '4'],\n  abbreviated: ['Q1', 'Q2', 'Q3', 'Q4'],\n  wide: ['1st quarter', '2nd quarter', '3rd quarter', '4th quarter']\n};\n\n// Note: in English, the names of days of the week and months are capitalized.\n// If you are making a new locale based on this one, check if the same is true for the language you're working on.\n// Generally, formatted dates should look like they are in the middle of a sentence,\n// e.g. in Spanish language the weekdays and months should be in the lowercase.\nvar monthValues = {\n  narrow: ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D'],\n  abbreviated: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n  wide: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\n};\nvar dayValues = {\n  narrow: ['S', 'M', 'T', 'W', 'T', 'F', 'S'],\n  short: ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'],\n  abbreviated: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n  wide: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']\n};\nvar dayPeriodValues = {\n  narrow: {\n    am: 'a',\n    pm: 'p',\n    midnight: 'mi',\n    noon: 'n',\n    morning: 'morning',\n    afternoon: 'afternoon',\n    evening: 'evening',\n    night: 'night'\n  },\n  abbreviated: {\n    am: 'AM',\n    pm: 'PM',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'morning',\n    afternoon: 'afternoon',\n    evening: 'evening',\n    night: 'night'\n  },\n  wide: {\n    am: 'a.m.',\n    pm: 'p.m.',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'morning',\n    afternoon: 'afternoon',\n    evening: 'evening',\n    night: 'night'\n  }\n};\nvar formattingDayPeriodValues = {\n  narrow: {\n    am: 'a',\n    pm: 'p',\n    midnight: 'mi',\n    noon: 'n',\n    morning: 'in the morning',\n    afternoon: 'in the afternoon',\n    evening: 'in the evening',\n    night: 'at night'\n  },\n  abbreviated: {\n    am: 'AM',\n    pm: 'PM',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'in the morning',\n    afternoon: 'in the afternoon',\n    evening: 'in the evening',\n    night: 'at night'\n  },\n  wide: {\n    am: 'a.m.',\n    pm: 'p.m.',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'in the morning',\n    afternoon: 'in the afternoon',\n    evening: 'in the evening',\n    night: 'at night'\n  }\n};\nvar ordinalNumber = function ordinalNumber(dirtyNumber, _options) {\n  var number = Number(dirtyNumber);\n\n  // If ordinal numbers depend on context, for example,\n  // if they are different for different grammatical genders,\n  // use `options.unit`.\n  //\n  // `unit` can be 'year', 'quarter', 'month', 'week', 'date', 'dayOfYear',\n  // 'day', 'hour', 'minute', 'second'.\n\n  var rem100 = number % 100;\n  if (rem100 > 20 || rem100 < 10) {\n    switch (rem100 % 10) {\n      case 1:\n        return number + 'st';\n      case 2:\n        return number + 'nd';\n      case 3:\n        return number + 'rd';\n    }\n  }\n  return number + 'th';\n};\nvar localize = {\n  ordinalNumber: ordinalNumber,\n  era: (0, _index.default)({\n    values: eraValues,\n    defaultWidth: 'wide'\n  }),\n  quarter: (0, _index.default)({\n    values: quarterValues,\n    defaultWidth: 'wide',\n    argumentCallback: function argumentCallback(quarter) {\n      return quarter - 1;\n    }\n  }),\n  month: (0, _index.default)({\n    values: monthValues,\n    defaultWidth: 'wide'\n  }),\n  day: (0, _index.default)({\n    values: dayValues,\n    defaultWidth: 'wide'\n  }),\n  dayPeriod: (0, _index.default)({\n    values: dayPeriodValues,\n    defaultWidth: 'wide',\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: 'wide'\n  })\n};\nvar _default = localize;\nexports.default = _default;\nmodule.exports = exports.default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = buildMatchFn;\nfunction buildMatchFn(args) {\n  return function (string) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var width = options.width;\n    var matchPattern = width && args.matchPatterns[width] || args.matchPatterns[args.defaultMatchWidth];\n    var matchResult = string.match(matchPattern);\n    if (!matchResult) {\n      return null;\n    }\n    var matchedString = matchResult[0];\n    var parsePatterns = width && args.parsePatterns[width] || args.parsePatterns[args.defaultParseWidth];\n    var key = Array.isArray(parsePatterns) ? findIndex(parsePatterns, function (pattern) {\n      return pattern.test(matchedString);\n    }) : findKey(parsePatterns, function (pattern) {\n      return pattern.test(matchedString);\n    });\n    var value;\n    value = args.valueCallback ? args.valueCallback(key) : key;\n    value = options.valueCallback ? options.valueCallback(value) : value;\n    var rest = string.slice(matchedString.length);\n    return {\n      value: value,\n      rest: rest\n    };\n  };\n}\nfunction findKey(object, predicate) {\n  for (var key in object) {\n    if (object.hasOwnProperty(key) && predicate(object[key])) {\n      return key;\n    }\n  }\n  return undefined;\n}\nfunction findIndex(array, predicate) {\n  for (var key = 0; key < array.length; key++) {\n    if (predicate(array[key])) {\n      return key;\n    }\n  }\n  return undefined;\n}\nmodule.exports = exports.default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = buildMatchPatternFn;\nfunction buildMatchPatternFn(args) {\n  return function (string) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var matchResult = string.match(args.matchPattern);\n    if (!matchResult) return null;\n    var matchedString = matchResult[0];\n    var parseResult = string.match(args.parsePattern);\n    if (!parseResult) return null;\n    var value = args.valueCallback ? args.valueCallback(parseResult[0]) : parseResult[0];\n    value = options.valueCallback ? options.valueCallback(value) : value;\n    var rest = string.slice(matchedString.length);\n    return {\n      value: value,\n      rest: rest\n    };\n  };\n}\nmodule.exports = exports.default;", "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _index = _interopRequireDefault(require(\"../../../_lib/buildMatchFn/index.js\"));\nvar _index2 = _interopRequireDefault(require(\"../../../_lib/buildMatchPatternFn/index.js\"));\nvar matchOrdinalNumberPattern = /^(\\d+)(th|st|nd|rd)?/i;\nvar parseOrdinalNumberPattern = /\\d+/i;\nvar matchEraPatterns = {\n  narrow: /^(b|a)/i,\n  abbreviated: /^(b\\.?\\s?c\\.?|b\\.?\\s?c\\.?\\s?e\\.?|a\\.?\\s?d\\.?|c\\.?\\s?e\\.?)/i,\n  wide: /^(before christ|before common era|anno domini|common era)/i\n};\nvar parseEraPatterns = {\n  any: [/^b/i, /^(a|c)/i]\n};\nvar matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^q[1234]/i,\n  wide: /^[1234](th|st|nd|rd)? quarter/i\n};\nvar parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i]\n};\nvar matchMonthPatterns = {\n  narrow: /^[jfmasond]/i,\n  abbreviated: /^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,\n  wide: /^(january|february|march|april|may|june|july|august|september|october|november|december)/i\n};\nvar parseMonthPatterns = {\n  narrow: [/^j/i, /^f/i, /^m/i, /^a/i, /^m/i, /^j/i, /^j/i, /^a/i, /^s/i, /^o/i, /^n/i, /^d/i],\n  any: [/^ja/i, /^f/i, /^mar/i, /^ap/i, /^may/i, /^jun/i, /^jul/i, /^au/i, /^s/i, /^o/i, /^n/i, /^d/i]\n};\nvar matchDayPatterns = {\n  narrow: /^[smtwf]/i,\n  short: /^(su|mo|tu|we|th|fr|sa)/i,\n  abbreviated: /^(sun|mon|tue|wed|thu|fri|sat)/i,\n  wide: /^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i\n};\nvar parseDayPatterns = {\n  narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],\n  any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i]\n};\nvar matchDayPeriodPatterns = {\n  narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,\n  any: /^([ap]\\.?\\s?m\\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i\n};\nvar parseDayPeriodPatterns = {\n  any: {\n    am: /^a/i,\n    pm: /^p/i,\n    midnight: /^mi/i,\n    noon: /^no/i,\n    morning: /morning/i,\n    afternoon: /afternoon/i,\n    evening: /evening/i,\n    night: /night/i\n  }\n};\nvar match = {\n  ordinalNumber: (0, _index2.default)({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: function valueCallback(value) {\n      return parseInt(value, 10);\n    }\n  }),\n  era: (0, _index.default)({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: 'any'\n  }),\n  quarter: (0, _index.default)({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: 'any',\n    valueCallback: function valueCallback(index) {\n      return index + 1;\n    }\n  }),\n  month: (0, _index.default)({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: 'any'\n  }),\n  day: (0, _index.default)({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: 'any'\n  }),\n  dayPeriod: (0, _index.default)({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: 'any',\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: 'any'\n  })\n};\nvar _default = match;\nexports.default = _default;\nmodule.exports = exports.default;", "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _index = _interopRequireDefault(require(\"./_lib/formatDistance/index.js\"));\nvar _index2 = _interopRequireDefault(require(\"./_lib/formatLong/index.js\"));\nvar _index3 = _interopRequireDefault(require(\"./_lib/formatRelative/index.js\"));\nvar _index4 = _interopRequireDefault(require(\"./_lib/localize/index.js\"));\nvar _index5 = _interopRequireDefault(require(\"./_lib/match/index.js\"));\n/**\n * @type {Locale}\n * @category Locales\n * @summary English locale (United States).\n * @language English\n * @iso-639-2 eng\n * @author Sasha Koss [@kossnocorp]{@link https://github.com/kossnocorp}\n * @author Lesha Koss [@leshakoss]{@link https://github.com/leshakoss}\n */\nvar locale = {\n  code: 'en-US',\n  formatDistance: _index.default,\n  formatLong: _index2.default,\n  formatRelative: _index3.default,\n  localize: _index4.default,\n  match: _index5.default,\n  options: {\n    weekStartsOn: 0 /* Sunday */,\n    firstWeekContainsDate: 1\n  }\n};\nvar _default = locale;\nexports.default = _default;\nmodule.exports = exports.default;", "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _index = _interopRequireDefault(require(\"../../locale/en-US/index.js\"));\nvar _default = _index.default;\nexports.default = _default;\nmodule.exports = exports.default;", "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = format;\nvar _index = _interopRequireDefault(require(\"../isValid/index.js\"));\nvar _index2 = _interopRequireDefault(require(\"../subMilliseconds/index.js\"));\nvar _index3 = _interopRequireDefault(require(\"../toDate/index.js\"));\nvar _index4 = _interopRequireDefault(require(\"../_lib/format/formatters/index.js\"));\nvar _index5 = _interopRequireDefault(require(\"../_lib/format/longFormatters/index.js\"));\nvar _index6 = _interopRequireDefault(require(\"../_lib/getTimezoneOffsetInMilliseconds/index.js\"));\nvar _index7 = require(\"../_lib/protectedTokens/index.js\");\nvar _index8 = _interopRequireDefault(require(\"../_lib/toInteger/index.js\"));\nvar _index9 = _interopRequireDefault(require(\"../_lib/requiredArgs/index.js\"));\nvar _index10 = require(\"../_lib/defaultOptions/index.js\");\nvar _index11 = _interopRequireDefault(require(\"../_lib/defaultLocale/index.js\"));\n// This RegExp consists of three parts separated by `|`:\n// - [yYQqMLwIdDecihHKkms]o matches any available ordinal number token\n//   (one of the certain letters followed by `o`)\n// - (\\w)\\1* matches any sequences of the same letter\n// - '' matches two quote characters in a row\n// - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),\n//   except a single quote symbol, which ends the sequence.\n//   Two quote characters do not end the sequence.\n//   If there is no matching single quote\n//   then the sequence will continue until the end of the string.\n// - . matches any single character unmatched by previous parts of the RegExps\nvar formattingTokensRegExp = /[yYQqMLwIdDecihHKkms]o|(\\w)\\1*|''|'(''|[^'])+('|$)|./g;\n\n// This RegExp catches symbols escaped by quotes, and also\n// sequences of symbols P, p, and the combinations like `PPPPPPPppppp`\nvar longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;\nvar escapedStringRegExp = /^'([^]*?)'?$/;\nvar doubleQuoteRegExp = /''/g;\nvar unescapedLatinCharacterRegExp = /[a-zA-Z]/;\n\n/**\n * @name format\n * @category Common Helpers\n * @summary Format the date.\n *\n * @description\n * Return the formatted date string in the given format. The result may vary by locale.\n *\n * > ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.\n * > See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * The characters wrapped between two single quotes characters (') are escaped.\n * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.\n * (see the last example)\n *\n * Format of the string is based on Unicode Technical Standard #35:\n * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n * with a few additions (see note 7 below the table).\n *\n * Accepted patterns:\n * | Unit                            | Pattern | Result examples                   | Notes |\n * |---------------------------------|---------|-----------------------------------|-------|\n * | Era                             | G..GGG  | AD, BC                            |       |\n * |                                 | GGGG    | Anno Domini, Before Christ        | 2     |\n * |                                 | GGGGG   | A, B                              |       |\n * | Calendar year                   | y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | yo      | 44th, 1st, 0th, 17th              | 5,7   |\n * |                                 | yy      | 44, 01, 00, 17                    | 5     |\n * |                                 | yyy     | 044, 001, 1900, 2017              | 5     |\n * |                                 | yyyy    | 0044, 0001, 1900, 2017            | 5     |\n * |                                 | yyyyy   | ...                               | 3,5   |\n * | Local week-numbering year       | Y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | Yo      | 44th, 1st, 1900th, 2017th         | 5,7   |\n * |                                 | YY      | 44, 01, 00, 17                    | 5,8   |\n * |                                 | YYY     | 044, 001, 1900, 2017              | 5     |\n * |                                 | YYYY    | 0044, 0001, 1900, 2017            | 5,8   |\n * |                                 | YYYYY   | ...                               | 3,5   |\n * | ISO week-numbering year         | R       | -43, 0, 1, 1900, 2017             | 5,7   |\n * |                                 | RR      | -43, 00, 01, 1900, 2017           | 5,7   |\n * |                                 | RRR     | -043, 000, 001, 1900, 2017        | 5,7   |\n * |                                 | RRRR    | -0043, 0000, 0001, 1900, 2017     | 5,7   |\n * |                                 | RRRRR   | ...                               | 3,5,7 |\n * | Extended year                   | u       | -43, 0, 1, 1900, 2017             | 5     |\n * |                                 | uu      | -43, 01, 1900, 2017               | 5     |\n * |                                 | uuu     | -043, 001, 1900, 2017             | 5     |\n * |                                 | uuuu    | -0043, 0001, 1900, 2017           | 5     |\n * |                                 | uuuuu   | ...                               | 3,5   |\n * | Quarter (formatting)            | Q       | 1, 2, 3, 4                        |       |\n * |                                 | Qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | QQ      | 01, 02, 03, 04                    |       |\n * |                                 | QQQ     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | QQQQQ   | 1, 2, 3, 4                        | 4     |\n * | Quarter (stand-alone)           | q       | 1, 2, 3, 4                        |       |\n * |                                 | qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | qq      | 01, 02, 03, 04                    |       |\n * |                                 | qqq     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | qqqqq   | 1, 2, 3, 4                        | 4     |\n * | Month (formatting)              | M       | 1, 2, ..., 12                     |       |\n * |                                 | Mo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | MM      | 01, 02, ..., 12                   |       |\n * |                                 | MMM     | Jan, Feb, ..., Dec                |       |\n * |                                 | MMMM    | January, February, ..., December  | 2     |\n * |                                 | MMMMM   | J, F, ..., D                      |       |\n * | Month (stand-alone)             | L       | 1, 2, ..., 12                     |       |\n * |                                 | Lo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | LL      | 01, 02, ..., 12                   |       |\n * |                                 | LLL     | Jan, Feb, ..., Dec                |       |\n * |                                 | LLLL    | January, February, ..., December  | 2     |\n * |                                 | LLLLL   | J, F, ..., D                      |       |\n * | Local week of year              | w       | 1, 2, ..., 53                     |       |\n * |                                 | wo      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | ww      | 01, 02, ..., 53                   |       |\n * | ISO week of year                | I       | 1, 2, ..., 53                     | 7     |\n * |                                 | Io      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | II      | 01, 02, ..., 53                   | 7     |\n * | Day of month                    | d       | 1, 2, ..., 31                     |       |\n * |                                 | do      | 1st, 2nd, ..., 31st               | 7     |\n * |                                 | dd      | 01, 02, ..., 31                   |       |\n * | Day of year                     | D       | 1, 2, ..., 365, 366               | 9     |\n * |                                 | Do      | 1st, 2nd, ..., 365th, 366th       | 7     |\n * |                                 | DD      | 01, 02, ..., 365, 366             | 9     |\n * |                                 | DDD     | 001, 002, ..., 365, 366           |       |\n * |                                 | DDDD    | ...                               | 3     |\n * | Day of week (formatting)        | E..EEE  | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | EEEEE   | M, T, W, T, F, S, S               |       |\n * |                                 | EEEEEE  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | ISO day of week (formatting)    | i       | 1, 2, 3, ..., 7                   | 7     |\n * |                                 | io      | 1st, 2nd, ..., 7th                | 7     |\n * |                                 | ii      | 01, 02, ..., 07                   | 7     |\n * |                                 | iii     | Mon, Tue, Wed, ..., Sun           | 7     |\n * |                                 | iiii    | Monday, Tuesday, ..., Sunday      | 2,7   |\n * |                                 | iiiii   | M, T, W, T, F, S, S               | 7     |\n * |                                 | iiiiii  | Mo, Tu, We, Th, Fr, Sa, Su        | 7     |\n * | Local day of week (formatting)  | e       | 2, 3, 4, ..., 1                   |       |\n * |                                 | eo      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | ee      | 02, 03, ..., 01                   |       |\n * |                                 | eee     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | eeee    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | eeeee   | M, T, W, T, F, S, S               |       |\n * |                                 | eeeeee  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | Local day of week (stand-alone) | c       | 2, 3, 4, ..., 1                   |       |\n * |                                 | co      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | cc      | 02, 03, ..., 01                   |       |\n * |                                 | ccc     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | cccc    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | ccccc   | M, T, W, T, F, S, S               |       |\n * |                                 | cccccc  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | AM, PM                          | a..aa   | AM, PM                            |       |\n * |                                 | aaa     | am, pm                            |       |\n * |                                 | aaaa    | a.m., p.m.                        | 2     |\n * |                                 | aaaaa   | a, p                              |       |\n * | AM, PM, noon, midnight          | b..bb   | AM, PM, noon, midnight            |       |\n * |                                 | bbb     | am, pm, noon, midnight            |       |\n * |                                 | bbbb    | a.m., p.m., noon, midnight        | 2     |\n * |                                 | bbbbb   | a, p, n, mi                       |       |\n * | Flexible day period             | B..BBB  | at night, in the morning, ...     |       |\n * |                                 | BBBB    | at night, in the morning, ...     | 2     |\n * |                                 | BBBBB   | at night, in the morning, ...     |       |\n * | Hour [1-12]                     | h       | 1, 2, ..., 11, 12                 |       |\n * |                                 | ho      | 1st, 2nd, ..., 11th, 12th         | 7     |\n * |                                 | hh      | 01, 02, ..., 11, 12               |       |\n * | Hour [0-23]                     | H       | 0, 1, 2, ..., 23                  |       |\n * |                                 | Ho      | 0th, 1st, 2nd, ..., 23rd          | 7     |\n * |                                 | HH      | 00, 01, 02, ..., 23               |       |\n * | Hour [0-11]                     | K       | 1, 2, ..., 11, 0                  |       |\n * |                                 | Ko      | 1st, 2nd, ..., 11th, 0th          | 7     |\n * |                                 | KK      | 01, 02, ..., 11, 00               |       |\n * | Hour [1-24]                     | k       | 24, 1, 2, ..., 23                 |       |\n * |                                 | ko      | 24th, 1st, 2nd, ..., 23rd         | 7     |\n * |                                 | kk      | 24, 01, 02, ..., 23               |       |\n * | Minute                          | m       | 0, 1, ..., 59                     |       |\n * |                                 | mo      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | mm      | 00, 01, ..., 59                   |       |\n * | Second                          | s       | 0, 1, ..., 59                     |       |\n * |                                 | so      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | ss      | 00, 01, ..., 59                   |       |\n * | Fraction of second              | S       | 0, 1, ..., 9                      |       |\n * |                                 | SS      | 00, 01, ..., 99                   |       |\n * |                                 | SSS     | 000, 001, ..., 999                |       |\n * |                                 | SSSS    | ...                               | 3     |\n * | Timezone (ISO-8601 w/ Z)        | X       | -08, +0530, Z                     |       |\n * |                                 | XX      | -0800, +0530, Z                   |       |\n * |                                 | XXX     | -08:00, +05:30, Z                 |       |\n * |                                 | XXXX    | -0800, +0530, Z, +123456          | 2     |\n * |                                 | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |\n * | Timezone (ISO-8601 w/o Z)       | x       | -08, +0530, +00                   |       |\n * |                                 | xx      | -0800, +0530, +0000               |       |\n * |                                 | xxx     | -08:00, +05:30, +00:00            | 2     |\n * |                                 | xxxx    | -0800, +0530, +0000, +123456      |       |\n * |                                 | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |\n * | Timezone (GMT)                  | O...OOO | GMT-8, GMT+5:30, GMT+0            |       |\n * |                                 | OOOO    | GMT-08:00, GMT+05:30, GMT+00:00   | 2     |\n * | Timezone (specific non-locat.)  | z...zzz | GMT-8, GMT+5:30, GMT+0            | 6     |\n * |                                 | zzzz    | GMT-08:00, GMT+05:30, GMT+00:00   | 2,6   |\n * | Seconds timestamp               | t       | 512969520                         | 7     |\n * |                                 | tt      | ...                               | 3,7   |\n * | Milliseconds timestamp          | T       | 512969520900                      | 7     |\n * |                                 | TT      | ...                               | 3,7   |\n * | Long localized date             | P       | 04/29/1453                        | 7     |\n * |                                 | PP      | Apr 29, 1453                      | 7     |\n * |                                 | PPP     | April 29th, 1453                  | 7     |\n * |                                 | PPPP    | Friday, April 29th, 1453          | 2,7   |\n * | Long localized time             | p       | 12:00 AM                          | 7     |\n * |                                 | pp      | 12:00:00 AM                       | 7     |\n * |                                 | ppp     | 12:00:00 AM GMT+2                 | 7     |\n * |                                 | pppp    | 12:00:00 AM GMT+02:00             | 2,7   |\n * | Combination of date and time    | Pp      | 04/29/1453, 12:00 AM              | 7     |\n * |                                 | PPpp    | Apr 29, 1453, 12:00:00 AM         | 7     |\n * |                                 | PPPppp  | April 29th, 1453 at ...           | 7     |\n * |                                 | PPPPpppp| Friday, April 29th, 1453 at ...   | 2,7   |\n * Notes:\n * 1. \"Formatting\" units (e.g. formatting quarter) in the default en-US locale\n *    are the same as \"stand-alone\" units, but are different in some languages.\n *    \"Formatting\" units are declined according to the rules of the language\n *    in the context of a date. \"Stand-alone\" units are always nominative singular:\n *\n *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`\n *\n *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`\n *\n * 2. Any sequence of the identical letters is a pattern, unless it is escaped by\n *    the single quote characters (see below).\n *    If the sequence is longer than listed in table (e.g. `EEEEEEEEEEE`)\n *    the output will be the same as default pattern for this unit, usually\n *    the longest one (in case of ISO weekdays, `EEEE`). Default patterns for units\n *    are marked with \"2\" in the last column of the table.\n *\n *    `format(new Date(2017, 10, 6), 'MMM') //=> 'Nov'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMM') //=> 'N'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMMM') //=> 'November'`\n *\n * 3. Some patterns could be unlimited length (such as `yyyyyyyy`).\n *    The output will be padded with zeros to match the length of the pattern.\n *\n *    `format(new Date(2017, 10, 6), 'yyyyyyyy') //=> '00002017'`\n *\n * 4. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.\n *    These tokens represent the shortest form of the quarter.\n *\n * 5. The main difference between `y` and `u` patterns are B.C. years:\n *\n *    | Year | `y` | `u` |\n *    |------|-----|-----|\n *    | AC 1 |   1 |   1 |\n *    | BC 1 |   1 |   0 |\n *    | BC 2 |   2 |  -1 |\n *\n *    Also `yy` always returns the last two digits of a year,\n *    while `uu` pads single digit years to 2 characters and returns other years unchanged:\n *\n *    | Year | `yy` | `uu` |\n *    |------|------|------|\n *    | 1    |   01 |   01 |\n *    | 14   |   14 |   14 |\n *    | 376  |   76 |  376 |\n *    | 1453 |   53 | 1453 |\n *\n *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),\n *    except local week-numbering years are dependent on `options.weekStartsOn`\n *    and `options.firstWeekContainsDate` (compare [getISOWeekYear]{@link https://date-fns.org/docs/getISOWeekYear}\n *    and [getWeekYear]{@link https://date-fns.org/docs/getWeekYear}).\n *\n * 6. Specific non-location timezones are currently unavailable in `date-fns`,\n *    so right now these tokens fall back to GMT timezones.\n *\n * 7. These patterns are not in the Unicode Technical Standard #35:\n *    - `i`: ISO day of week\n *    - `I`: ISO week of year\n *    - `R`: ISO week-numbering year\n *    - `t`: seconds timestamp\n *    - `T`: milliseconds timestamp\n *    - `o`: ordinal number modifier\n *    - `P`: long localized date\n *    - `p`: long localized time\n *\n * 8. `YY` and `YYYY` tokens represent week-numbering years but they are often confused with years.\n *    You should enable `options.useAdditionalWeekYearTokens` to use them. See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * 9. `D` and `DD` tokens represent days of the year but they are often confused with days of the month.\n *    You should enable `options.useAdditionalDayOfYearTokens` to use them. See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * @param {Date|Number} date - the original date\n * @param {String} format - the string of tokens\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @param {Number} [options.firstWeekContainsDate=1] - the day of January, which is\n * @param {Boolean} [options.useAdditionalWeekYearTokens=false] - if true, allows usage of the week-numbering year tokens `YY` and `YYYY`;\n *   see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @param {Boolean} [options.useAdditionalDayOfYearTokens=false] - if true, allows usage of the day of year tokens `D` and `DD`;\n *   see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @returns {String} the formatted date string\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `date` must not be Invalid Date\n * @throws {RangeError} `options.locale` must contain `localize` property\n * @throws {RangeError} `options.locale` must contain `formatLong` property\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7\n * @throws {RangeError} use `yyyy` instead of `YYYY` for formatting years using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws {RangeError} use `yy` instead of `YY` for formatting years using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws {RangeError} use `d` instead of `D` for formatting days of the month using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws {RangeError} use `dd` instead of `DD` for formatting days of the month using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws {RangeError} format string contains an unescaped latin alphabet character\n *\n * @example\n * // Represent 11 February 2014 in middle-endian format:\n * const result = format(new Date(2014, 1, 11), 'MM/dd/yyyy')\n * //=> '02/11/2014'\n *\n * @example\n * // Represent 2 July 2014 in Esperanto:\n * import { eoLocale } from 'date-fns/locale/eo'\n * const result = format(new Date(2014, 6, 2), \"do 'de' MMMM yyyy\", {\n *   locale: eoLocale\n * })\n * //=> '2-a de julio 2014'\n *\n * @example\n * // Escape string by single quote characters:\n * const result = format(new Date(2014, 6, 2, 15), \"h 'o''clock'\")\n * //=> \"3 o'clock\"\n */\n\nfunction format(dirtyDate, dirtyFormatStr, options) {\n  var _ref, _options$locale, _ref2, _ref3, _ref4, _options$firstWeekCon, _options$locale2, _options$locale2$opti, _defaultOptions$local, _defaultOptions$local2, _ref5, _ref6, _ref7, _options$weekStartsOn, _options$locale3, _options$locale3$opti, _defaultOptions$local3, _defaultOptions$local4;\n  (0, _index9.default)(2, arguments);\n  var formatStr = String(dirtyFormatStr);\n  var defaultOptions = (0, _index10.getDefaultOptions)();\n  var locale = (_ref = (_options$locale = options === null || options === void 0 ? void 0 : options.locale) !== null && _options$locale !== void 0 ? _options$locale : defaultOptions.locale) !== null && _ref !== void 0 ? _ref : _index11.default;\n  var firstWeekContainsDate = (0, _index8.default)((_ref2 = (_ref3 = (_ref4 = (_options$firstWeekCon = options === null || options === void 0 ? void 0 : options.firstWeekContainsDate) !== null && _options$firstWeekCon !== void 0 ? _options$firstWeekCon : options === null || options === void 0 ? void 0 : (_options$locale2 = options.locale) === null || _options$locale2 === void 0 ? void 0 : (_options$locale2$opti = _options$locale2.options) === null || _options$locale2$opti === void 0 ? void 0 : _options$locale2$opti.firstWeekContainsDate) !== null && _ref4 !== void 0 ? _ref4 : defaultOptions.firstWeekContainsDate) !== null && _ref3 !== void 0 ? _ref3 : (_defaultOptions$local = defaultOptions.locale) === null || _defaultOptions$local === void 0 ? void 0 : (_defaultOptions$local2 = _defaultOptions$local.options) === null || _defaultOptions$local2 === void 0 ? void 0 : _defaultOptions$local2.firstWeekContainsDate) !== null && _ref2 !== void 0 ? _ref2 : 1);\n\n  // Test if weekStartsOn is between 1 and 7 _and_ is not NaN\n  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {\n    throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively');\n  }\n  var weekStartsOn = (0, _index8.default)((_ref5 = (_ref6 = (_ref7 = (_options$weekStartsOn = options === null || options === void 0 ? void 0 : options.weekStartsOn) !== null && _options$weekStartsOn !== void 0 ? _options$weekStartsOn : options === null || options === void 0 ? void 0 : (_options$locale3 = options.locale) === null || _options$locale3 === void 0 ? void 0 : (_options$locale3$opti = _options$locale3.options) === null || _options$locale3$opti === void 0 ? void 0 : _options$locale3$opti.weekStartsOn) !== null && _ref7 !== void 0 ? _ref7 : defaultOptions.weekStartsOn) !== null && _ref6 !== void 0 ? _ref6 : (_defaultOptions$local3 = defaultOptions.locale) === null || _defaultOptions$local3 === void 0 ? void 0 : (_defaultOptions$local4 = _defaultOptions$local3.options) === null || _defaultOptions$local4 === void 0 ? void 0 : _defaultOptions$local4.weekStartsOn) !== null && _ref5 !== void 0 ? _ref5 : 0);\n\n  // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n  if (!locale.localize) {\n    throw new RangeError('locale must contain localize property');\n  }\n  if (!locale.formatLong) {\n    throw new RangeError('locale must contain formatLong property');\n  }\n  var originalDate = (0, _index3.default)(dirtyDate);\n  if (!(0, _index.default)(originalDate)) {\n    throw new RangeError('Invalid time value');\n  }\n\n  // Convert the date in system timezone to the same date in UTC+00:00 timezone.\n  // This ensures that when UTC functions will be implemented, locales will be compatible with them.\n  // See an issue about UTC functions: https://github.com/date-fns/date-fns/issues/376\n  var timezoneOffset = (0, _index6.default)(originalDate);\n  var utcDate = (0, _index2.default)(originalDate, timezoneOffset);\n  var formatterOptions = {\n    firstWeekContainsDate: firstWeekContainsDate,\n    weekStartsOn: weekStartsOn,\n    locale: locale,\n    _originalDate: originalDate\n  };\n  var result = formatStr.match(longFormattingTokensRegExp).map(function (substring) {\n    var firstCharacter = substring[0];\n    if (firstCharacter === 'p' || firstCharacter === 'P') {\n      var longFormatter = _index5.default[firstCharacter];\n      return longFormatter(substring, locale.formatLong);\n    }\n    return substring;\n  }).join('').match(formattingTokensRegExp).map(function (substring) {\n    // Replace two single quote characters with one single quote character\n    if (substring === \"''\") {\n      return \"'\";\n    }\n    var firstCharacter = substring[0];\n    if (firstCharacter === \"'\") {\n      return cleanEscapedString(substring);\n    }\n    var formatter = _index4.default[firstCharacter];\n    if (formatter) {\n      if (!(options !== null && options !== void 0 && options.useAdditionalWeekYearTokens) && (0, _index7.isProtectedWeekYearToken)(substring)) {\n        (0, _index7.throwProtectedError)(substring, dirtyFormatStr, String(dirtyDate));\n      }\n      if (!(options !== null && options !== void 0 && options.useAdditionalDayOfYearTokens) && (0, _index7.isProtectedDayOfYearToken)(substring)) {\n        (0, _index7.throwProtectedError)(substring, dirtyFormatStr, String(dirtyDate));\n      }\n      return formatter(utcDate, substring, locale.localize, formatterOptions);\n    }\n    if (firstCharacter.match(unescapedLatinCharacterRegExp)) {\n      throw new RangeError('Format string contains an unescaped latin alphabet character `' + firstCharacter + '`');\n    }\n    return substring;\n  }).join('');\n  return result;\n}\nfunction cleanEscapedString(input) {\n  var matched = input.match(escapedStringRegExp);\n  if (!matched) {\n    return input;\n  }\n  return matched[1].replace(doubleQuoteRegExp, \"'\");\n}\nmodule.exports = exports.default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = assign;\nfunction assign(target, object) {\n  if (target == null) {\n    throw new TypeError('assign requires that input parameter not be null or undefined');\n  }\n  for (var property in object) {\n    if (Object.prototype.hasOwnProperty.call(object, property)) {\n      ;\n      target[property] = object[property];\n    }\n  }\n  return target;\n}\nmodule.exports = exports.default;", "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = cloneObject;\nvar _index = _interopRequireDefault(require(\"../assign/index.js\"));\nfunction cloneObject(object) {\n  return (0, _index.default)({}, object);\n}\nmodule.exports = exports.default;", "/**\n * Throw a given error.\n *\n * @param {Error|null|undefined} [error]\n *   Maybe error.\n * @returns {asserts error is null|undefined}\n */\nexport function bail(error) {\n  if (error) {\n    throw error\n  }\n}\n", "/**\n * @typedef {import('trough').Pipeline} Pipeline\n *\n * @typedef {import('unist').Node} Node\n *\n * @typedef {import('vfile').Compatible} Compatible\n * @typedef {import('vfile').Value} Value\n *\n * @typedef {import('../index.js').CompileResultMap} CompileResultMap\n * @typedef {import('../index.js').Data} Data\n * @typedef {import('../index.js').Settings} Settings\n */\n\n/**\n * @typedef {CompileResultMap[keyof CompileResultMap]} CompileResults\n *   Acceptable results from compilers.\n *\n *   To register custom results, add them to\n *   {@linkcode CompileResultMap}.\n */\n\n/**\n * @template {Node} [Tree=Node]\n *   The node that the compiler receives (default: `Node`).\n * @template {CompileResults} [Result=CompileResults]\n *   The thing that the compiler yields (default: `CompileResults`).\n * @callback Compiler\n *   A **compiler** handles the compiling of a syntax tree to something else\n *   (in most cases, text) (TypeScript type).\n *\n *   It is used in the stringify phase and called with a {@linkcode Node}\n *   and {@linkcode VFile} representation of the document to compile.\n *   It should return the textual representation of the given tree (typically\n *   `string`).\n *\n *   > **Note**: unified typically compiles by serializing: most compilers\n *   > return `string` (or `Uint8Array`).\n *   > Some compilers, such as the one configured with\n *   > [`rehype-react`][rehype-react], return other values (in this case, a\n *   > React tree).\n *   > If you’re using a compiler that doesn’t serialize, expect different\n *   > result values.\n *   >\n *   > To register custom results in TypeScript, add them to\n *   > {@linkcode CompileResultMap}.\n *\n *   [rehype-react]: https://github.com/rehypejs/rehype-react\n * @param {Tree} tree\n *   Tree to compile.\n * @param {VFile} file\n *   File associated with `tree`.\n * @returns {Result}\n *   New content: compiled text (`string` or `Uint8Array`, for `file.value`) or\n *   something else (for `file.result`).\n */\n\n/**\n * @template {Node} [Tree=Node]\n *   The node that the parser yields (default: `Node`)\n * @callback Parser\n *   A **parser** handles the parsing of text to a syntax tree.\n *\n *   It is used in the parse phase and is called with a `string` and\n *   {@linkcode VFile} of the document to parse.\n *   It must return the syntax tree representation of the given file\n *   ({@linkcode Node}).\n * @param {string} document\n *   Document to parse.\n * @param {VFile} file\n *   File associated with `document`.\n * @returns {Tree}\n *   Node representing the given file.\n */\n\n/**\n * @typedef {(\n *   Plugin<Array<any>, any, any> |\n *   PluginTuple<Array<any>, any, any> |\n *   Preset\n * )} Pluggable\n *   Union of the different ways to add plugins and settings.\n */\n\n/**\n * @typedef {Array<Pluggable>} PluggableList\n *   List of plugins and presets.\n */\n\n// Note: we can’t use `callback` yet as it messes up `this`:\n//  <https://github.com/microsoft/TypeScript/issues/55197>.\n/**\n * @template {Array<unknown>} [PluginParameters=[]]\n *   Arguments passed to the plugin (default: `[]`, the empty tuple).\n * @template {Node | string | undefined} [Input=Node]\n *   Value that is expected as input (default: `Node`).\n *\n *   *   If the plugin returns a {@linkcode Transformer}, this\n *       should be the node it expects.\n *   *   If the plugin sets a {@linkcode Parser}, this should be\n *       `string`.\n *   *   If the plugin sets a {@linkcode Compiler}, this should be the\n *       node it expects.\n * @template [Output=Input]\n *   Value that is yielded as output (default: `Input`).\n *\n *   *   If the plugin returns a {@linkcode Transformer}, this\n *       should be the node that that yields.\n *   *   If the plugin sets a {@linkcode Parser}, this should be the\n *       node that it yields.\n *   *   If the plugin sets a {@linkcode Compiler}, this should be\n *       result it yields.\n * @typedef {(\n *   (this: Processor, ...parameters: PluginParameters) =>\n *     Input extends string ? // Parser.\n *        Output extends Node | undefined ? undefined | void : never :\n *     Output extends CompileResults ? // Compiler.\n *        Input extends Node | undefined ? undefined | void : never :\n *     Transformer<\n *       Input extends Node ? Input : Node,\n *       Output extends Node ? Output : Node\n *     > | undefined | void\n * )} Plugin\n *   Single plugin.\n *\n *   Plugins configure the processors they are applied on in the following\n *   ways:\n *\n *   *   they change the processor, such as the parser, the compiler, or by\n *       configuring data\n *   *   they specify how to handle trees and files\n *\n *   In practice, they are functions that can receive options and configure the\n *   processor (`this`).\n *\n *   > **Note**: plugins are called when the processor is *frozen*, not when\n *   > they are applied.\n */\n\n/**\n * Tuple of a plugin and its configuration.\n *\n * The first item is a plugin, the rest are its parameters.\n *\n * @template {Array<unknown>} [TupleParameters=[]]\n *   Arguments passed to the plugin (default: `[]`, the empty tuple).\n * @template {Node | string | undefined} [Input=undefined]\n *   Value that is expected as input (optional).\n *\n *   *   If the plugin returns a {@linkcode Transformer}, this\n *       should be the node it expects.\n *   *   If the plugin sets a {@linkcode Parser}, this should be\n *       `string`.\n *   *   If the plugin sets a {@linkcode Compiler}, this should be the\n *       node it expects.\n * @template [Output=undefined] (optional).\n *   Value that is yielded as output.\n *\n *   *   If the plugin returns a {@linkcode Transformer}, this\n *       should be the node that that yields.\n *   *   If the plugin sets a {@linkcode Parser}, this should be the\n *       node that it yields.\n *   *   If the plugin sets a {@linkcode Compiler}, this should be\n *       result it yields.\n * @typedef {(\n *   [\n *     plugin: Plugin<TupleParameters, Input, Output>,\n *     ...parameters: TupleParameters\n *   ]\n * )} PluginTuple\n */\n\n/**\n * @typedef Preset\n *   Sharable configuration.\n *\n *   They can contain plugins and settings.\n * @property {PluggableList | undefined} [plugins]\n *   List of plugins and presets (optional).\n * @property {Settings | undefined} [settings]\n *   Shared settings for parsers and compilers (optional).\n */\n\n/**\n * @template {VFile} [File=VFile]\n *   The file that the callback receives (default: `VFile`).\n * @callback ProcessCallback\n *   Callback called when the process is done.\n *\n *   Called with either an error or a result.\n * @param {Error | undefined} [error]\n *   Fatal error (optional).\n * @param {File | undefined} [file]\n *   Processed file (optional).\n * @returns {undefined}\n *   Nothing.\n */\n\n/**\n * @template {Node} [Tree=Node]\n *   The tree that the callback receives (default: `Node`).\n * @callback RunCallback\n *   Callback called when transformers are done.\n *\n *   Called with either an error or results.\n * @param {Error | undefined} [error]\n *   Fatal error (optional).\n * @param {Tree | undefined} [tree]\n *   Transformed tree (optional).\n * @param {VFile | undefined} [file]\n *   File (optional).\n * @returns {undefined}\n *   Nothing.\n */\n\n/**\n * @template {Node} [Output=Node]\n *   Node type that the transformer yields (default: `Node`).\n * @callback TransformCallback\n *   Callback passed to transforms.\n *\n *   If the signature of a `transformer` accepts a third argument, the\n *   transformer may perform asynchronous operations, and must call it.\n * @param {Error | undefined} [error]\n *   Fatal error to stop the process (optional).\n * @param {Output | undefined} [tree]\n *   New, changed, tree (optional).\n * @param {VFile | undefined} [file]\n *   New, changed, file (optional).\n * @returns {undefined}\n *   Nothing.\n */\n\n/**\n * @template {Node} [Input=Node]\n *   Node type that the transformer expects (default: `Node`).\n * @template {Node} [Output=Input]\n *   Node type that the transformer yields (default: `Input`).\n * @callback Transformer\n *   Transformers handle syntax trees and files.\n *\n *   They are functions that are called each time a syntax tree and file are\n *   passed through the run phase.\n *   When an error occurs in them (either because it’s thrown, returned,\n *   rejected, or passed to `next`), the process stops.\n *\n *   The run phase is handled by [`trough`][trough], see its documentation for\n *   the exact semantics of these functions.\n *\n *   > **Note**: you should likely ignore `next`: don’t accept it.\n *   > it supports callback-style async work.\n *   > But promises are likely easier to reason about.\n *\n *   [trough]: https://github.com/wooorm/trough#function-fninput-next\n * @param {Input} tree\n *   Tree to handle.\n * @param {VFile} file\n *   File to handle.\n * @param {TransformCallback<Output>} next\n *   Callback.\n * @returns {(\n *   Promise<Output | undefined | void> |\n *   Promise<never> | // For some reason this is needed separately.\n *   Output |\n *   Error |\n *   undefined |\n *   void\n * )}\n *   If you accept `next`, nothing.\n *   Otherwise:\n *\n *   *   `Error` — fatal error to stop the process\n *   *   `Promise<undefined>` or `undefined` — the next transformer keeps using\n *       same tree\n *   *   `Promise<Node>` or `Node` — new, changed, tree\n */\n\n/**\n * @template {Node | undefined} ParseTree\n *   Output of `parse`.\n * @template {Node | undefined} HeadTree\n *   Input for `run`.\n * @template {Node | undefined} TailTree\n *   Output for `run`.\n * @template {Node | undefined} CompileTree\n *   Input of `stringify`.\n * @template {CompileResults | undefined} CompileResult\n *   Output of `stringify`.\n * @template {Node | string | undefined} Input\n *   Input of plugin.\n * @template Output\n *   Output of plugin (optional).\n * @typedef {(\n *   Input extends string\n *     ? Output extends Node | undefined\n *       ? // Parser.\n *         Processor<\n *           Output extends undefined ? ParseTree : Output,\n *           HeadTree,\n *           TailTree,\n *           CompileTree,\n *           CompileResult\n *         >\n *       : // Unknown.\n *         Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n *     : Output extends CompileResults\n *     ? Input extends Node | undefined\n *       ? // Compiler.\n *         Processor<\n *           ParseTree,\n *           HeadTree,\n *           TailTree,\n *           Input extends undefined ? CompileTree : Input,\n *           Output extends undefined ? CompileResult : Output\n *         >\n *       : // Unknown.\n *         Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n *     : Input extends Node | undefined\n *     ? Output extends Node | undefined\n *       ? // Transform.\n *         Processor<\n *           ParseTree,\n *           HeadTree extends undefined ? Input : HeadTree,\n *           Output extends undefined ? TailTree : Output,\n *           CompileTree,\n *           CompileResult\n *         >\n *       : // Unknown.\n *         Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n *     : // Unknown.\n *       Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n * )} UsePlugin\n *   Create a processor based on the input/output of a {@link Plugin plugin}.\n */\n\n/**\n * @template {CompileResults | undefined} Result\n *   Node type that the transformer yields.\n * @typedef {(\n *   Result extends Value | undefined ?\n *     VFile :\n *     VFile & {result: Result}\n *   )} VFileWithOutput\n *   Type to generate a {@linkcode VFile} corresponding to a compiler result.\n *\n *   If a result that is not acceptable on a `VFile` is used, that will\n *   be stored on the `result` field of {@linkcode VFile}.\n */\n\nimport {bail} from 'bail'\nimport extend from 'extend'\nimport {ok as assert} from 'devlop'\nimport isPlainObj from 'is-plain-obj'\nimport {trough} from 'trough'\nimport {VFile} from 'vfile'\nimport {CallableInstance} from './callable-instance.js'\n\n// To do: next major: drop `Compiler`, `Parser`: prefer lowercase.\n\n// To do: we could start yielding `never` in TS when a parser is missing and\n// `parse` is called.\n// Currently, we allow directly setting `processor.parser`, which is untyped.\n\nconst own = {}.hasOwnProperty\n\n/**\n * @template {Node | undefined} [ParseTree=undefined]\n *   Output of `parse` (optional).\n * @template {Node | undefined} [HeadTree=undefined]\n *   Input for `run` (optional).\n * @template {Node | undefined} [TailTree=undefined]\n *   Output for `run` (optional).\n * @template {Node | undefined} [CompileTree=undefined]\n *   Input of `stringify` (optional).\n * @template {CompileResults | undefined} [CompileResult=undefined]\n *   Output of `stringify` (optional).\n * @extends {CallableInstance<[], Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>>}\n */\nexport class Processor extends CallableInstance {\n  /**\n   * Create a processor.\n   */\n  constructor() {\n    // If `Processor()` is called (w/o new), `copy` is called instead.\n    super('copy')\n\n    /**\n     * Compiler to use (deprecated).\n     *\n     * @deprecated\n     *   Use `compiler` instead.\n     * @type {(\n     *   Compiler<\n     *     CompileTree extends undefined ? Node : CompileTree,\n     *     CompileResult extends undefined ? CompileResults : CompileResult\n     *   > |\n     *   undefined\n     * )}\n     */\n    this.Compiler = undefined\n\n    /**\n     * Parser to use (deprecated).\n     *\n     * @deprecated\n     *   Use `parser` instead.\n     * @type {(\n     *   Parser<ParseTree extends undefined ? Node : ParseTree> |\n     *   undefined\n     * )}\n     */\n    this.Parser = undefined\n\n    // Note: the following fields are considered private.\n    // However, they are needed for tests, and TSC generates an untyped\n    // `private freezeIndex` field for, which trips `type-coverage` up.\n    // Instead, we use `@deprecated` to visualize that they shouldn’t be used.\n    /**\n     * Internal list of configured plugins.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {Array<PluginTuple<Array<unknown>>>}\n     */\n    this.attachers = []\n\n    /**\n     * Compiler to use.\n     *\n     * @type {(\n     *   Compiler<\n     *     CompileTree extends undefined ? Node : CompileTree,\n     *     CompileResult extends undefined ? CompileResults : CompileResult\n     *   > |\n     *   undefined\n     * )}\n     */\n    this.compiler = undefined\n\n    /**\n     * Internal state to track where we are while freezing.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {number}\n     */\n    this.freezeIndex = -1\n\n    /**\n     * Internal state to track whether we’re frozen.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {boolean | undefined}\n     */\n    this.frozen = undefined\n\n    /**\n     * Internal state.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {Data}\n     */\n    this.namespace = {}\n\n    /**\n     * Parser to use.\n     *\n     * @type {(\n     *   Parser<ParseTree extends undefined ? Node : ParseTree> |\n     *   undefined\n     * )}\n     */\n    this.parser = undefined\n\n    /**\n     * Internal list of configured transformers.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {Pipeline}\n     */\n    this.transformers = trough()\n  }\n\n  /**\n   * Copy a processor.\n   *\n   * @deprecated\n   *   This is a private internal method and should not be used.\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *   New *unfrozen* processor ({@linkcode Processor}) that is\n   *   configured to work the same as its ancestor.\n   *   When the descendant processor is configured in the future it does not\n   *   affect the ancestral processor.\n   */\n  copy() {\n    // Cast as the type parameters will be the same after attaching.\n    const destination =\n      /** @type {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>} */ (\n        new Processor()\n      )\n    let index = -1\n\n    while (++index < this.attachers.length) {\n      const attacher = this.attachers[index]\n      destination.use(...attacher)\n    }\n\n    destination.data(extend(true, {}, this.namespace))\n\n    return destination\n  }\n\n  /**\n   * Configure the processor with info available to all plugins.\n   * Information is stored in an object.\n   *\n   * Typically, options can be given to a specific plugin, but sometimes it\n   * makes sense to have information shared with several plugins.\n   * For example, a list of HTML elements that are self-closing, which is\n   * needed during all phases.\n   *\n   * > **Note**: setting information cannot occur on *frozen* processors.\n   * > Call the processor first to create a new unfrozen processor.\n   *\n   * > **Note**: to register custom data in TypeScript, augment the\n   * > {@linkcode Data} interface.\n   *\n   * @example\n   *   This example show how to get and set info:\n   *\n   *   ```js\n   *   import {unified} from 'unified'\n   *\n   *   const processor = unified().data('alpha', 'bravo')\n   *\n   *   processor.data('alpha') // => 'bravo'\n   *\n   *   processor.data() // => {alpha: 'bravo'}\n   *\n   *   processor.data({charlie: 'delta'})\n   *\n   *   processor.data() // => {charlie: 'delta'}\n   *   ```\n   *\n   * @template {keyof Data} Key\n   *\n   * @overload\n   * @returns {Data}\n   *\n   * @overload\n   * @param {Data} dataset\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @overload\n   * @param {Key} key\n   * @returns {Data[Key]}\n   *\n   * @overload\n   * @param {Key} key\n   * @param {Data[Key]} value\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @param {Data | Key} [key]\n   *   Key to get or set, or entire dataset to set, or nothing to get the\n   *   entire dataset (optional).\n   * @param {Data[Key]} [value]\n   *   Value to set (optional).\n   * @returns {unknown}\n   *   The current processor when setting, the value at `key` when getting, or\n   *   the entire dataset when getting without key.\n   */\n  data(key, value) {\n    if (typeof key === 'string') {\n      // Set `key`.\n      if (arguments.length === 2) {\n        assertUnfrozen('data', this.frozen)\n        this.namespace[key] = value\n        return this\n      }\n\n      // Get `key`.\n      return (own.call(this.namespace, key) && this.namespace[key]) || undefined\n    }\n\n    // Set space.\n    if (key) {\n      assertUnfrozen('data', this.frozen)\n      this.namespace = key\n      return this\n    }\n\n    // Get space.\n    return this.namespace\n  }\n\n  /**\n   * Freeze a processor.\n   *\n   * Frozen processors are meant to be extended and not to be configured\n   * directly.\n   *\n   * When a processor is frozen it cannot be unfrozen.\n   * New processors working the same way can be created by calling the\n   * processor.\n   *\n   * It’s possible to freeze processors explicitly by calling `.freeze()`.\n   * Processors freeze automatically when `.parse()`, `.run()`, `.runSync()`,\n   * `.stringify()`, `.process()`, or `.processSync()` are called.\n   *\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *   The current processor.\n   */\n  freeze() {\n    if (this.frozen) {\n      return this\n    }\n\n    // Cast so that we can type plugins easier.\n    // Plugins are supposed to be usable on different processors, not just on\n    // this exact processor.\n    const self = /** @type {Processor} */ (/** @type {unknown} */ (this))\n\n    while (++this.freezeIndex < this.attachers.length) {\n      const [attacher, ...options] = this.attachers[this.freezeIndex]\n\n      if (options[0] === false) {\n        continue\n      }\n\n      if (options[0] === true) {\n        options[0] = undefined\n      }\n\n      const transformer = attacher.call(self, ...options)\n\n      if (typeof transformer === 'function') {\n        this.transformers.use(transformer)\n      }\n    }\n\n    this.frozen = true\n    this.freezeIndex = Number.POSITIVE_INFINITY\n\n    return this\n  }\n\n  /**\n   * Parse text to a syntax tree.\n   *\n   * > **Note**: `parse` freezes the processor if not already *frozen*.\n   *\n   * > **Note**: `parse` performs the parse phase, not the run phase or other\n   * > phases.\n   *\n   * @param {Compatible | undefined} [file]\n   *   file to parse (optional); typically `string` or `VFile`; any value\n   *   accepted as `x` in `new VFile(x)`.\n   * @returns {ParseTree extends undefined ? Node : ParseTree}\n   *   Syntax tree representing `file`.\n   */\n  parse(file) {\n    this.freeze()\n    const realFile = vfile(file)\n    const parser = this.parser || this.Parser\n    assertParser('parse', parser)\n    return parser(String(realFile), realFile)\n  }\n\n  /**\n   * Process the given file as configured on the processor.\n   *\n   * > **Note**: `process` freezes the processor if not already *frozen*.\n   *\n   * > **Note**: `process` performs the parse, run, and stringify phases.\n   *\n   * @overload\n   * @param {Compatible | undefined} file\n   * @param {ProcessCallback<VFileWithOutput<CompileResult>>} done\n   * @returns {undefined}\n   *\n   * @overload\n   * @param {Compatible | undefined} [file]\n   * @returns {Promise<VFileWithOutput<CompileResult>>}\n   *\n   * @param {Compatible | undefined} [file]\n   *   File (optional); typically `string` or `VFile`]; any value accepted as\n   *   `x` in `new VFile(x)`.\n   * @param {ProcessCallback<VFileWithOutput<CompileResult>> | undefined} [done]\n   *   Callback (optional).\n   * @returns {Promise<VFile> | undefined}\n   *   Nothing if `done` is given.\n   *   Otherwise a promise, rejected with a fatal error or resolved with the\n   *   processed file.\n   *\n   *   The parsed, transformed, and compiled value is available at\n   *   `file.value` (see note).\n   *\n   *   > **Note**: unified typically compiles by serializing: most\n   *   > compilers return `string` (or `Uint8Array`).\n   *   > Some compilers, such as the one configured with\n   *   > [`rehype-react`][rehype-react], return other values (in this case, a\n   *   > React tree).\n   *   > If you’re using a compiler that doesn’t serialize, expect different\n   *   > result values.\n   *   >\n   *   > To register custom results in TypeScript, add them to\n   *   > {@linkcode CompileResultMap}.\n   *\n   *   [rehype-react]: https://github.com/rehypejs/rehype-react\n   */\n  process(file, done) {\n    const self = this\n\n    this.freeze()\n    assertParser('process', this.parser || this.Parser)\n    assertCompiler('process', this.compiler || this.Compiler)\n\n    return done ? executor(undefined, done) : new Promise(executor)\n\n    // Note: `void`s needed for TS.\n    /**\n     * @param {((file: VFileWithOutput<CompileResult>) => undefined | void) | undefined} resolve\n     * @param {(error: Error | undefined) => undefined | void} reject\n     * @returns {undefined}\n     */\n    function executor(resolve, reject) {\n      const realFile = vfile(file)\n      // Assume `ParseTree` (the result of the parser) matches `HeadTree` (the\n      // input of the first transform).\n      const parseTree =\n        /** @type {HeadTree extends undefined ? Node : HeadTree} */ (\n          /** @type {unknown} */ (self.parse(realFile))\n        )\n\n      self.run(parseTree, realFile, function (error, tree, file) {\n        if (error || !tree || !file) {\n          return realDone(error)\n        }\n\n        // Assume `TailTree` (the output of the last transform) matches\n        // `CompileTree` (the input of the compiler).\n        const compileTree =\n          /** @type {CompileTree extends undefined ? Node : CompileTree} */ (\n            /** @type {unknown} */ (tree)\n          )\n\n        const compileResult = self.stringify(compileTree, file)\n\n        if (looksLikeAValue(compileResult)) {\n          file.value = compileResult\n        } else {\n          file.result = compileResult\n        }\n\n        realDone(error, /** @type {VFileWithOutput<CompileResult>} */ (file))\n      })\n\n      /**\n       * @param {Error | undefined} error\n       * @param {VFileWithOutput<CompileResult> | undefined} [file]\n       * @returns {undefined}\n       */\n      function realDone(error, file) {\n        if (error || !file) {\n          reject(error)\n        } else if (resolve) {\n          resolve(file)\n        } else {\n          assert(done, '`done` is defined if `resolve` is not')\n          done(undefined, file)\n        }\n      }\n    }\n  }\n\n  /**\n   * Process the given file as configured on the processor.\n   *\n   * An error is thrown if asynchronous transforms are configured.\n   *\n   * > **Note**: `processSync` freezes the processor if not already *frozen*.\n   *\n   * > **Note**: `processSync` performs the parse, run, and stringify phases.\n   *\n   * @param {Compatible | undefined} [file]\n   *   File (optional); typically `string` or `VFile`; any value accepted as\n   *   `x` in `new VFile(x)`.\n   * @returns {VFileWithOutput<CompileResult>}\n   *   The processed file.\n   *\n   *   The parsed, transformed, and compiled value is available at\n   *   `file.value` (see note).\n   *\n   *   > **Note**: unified typically compiles by serializing: most\n   *   > compilers return `string` (or `Uint8Array`).\n   *   > Some compilers, such as the one configured with\n   *   > [`rehype-react`][rehype-react], return other values (in this case, a\n   *   > React tree).\n   *   > If you’re using a compiler that doesn’t serialize, expect different\n   *   > result values.\n   *   >\n   *   > To register custom results in TypeScript, add them to\n   *   > {@linkcode CompileResultMap}.\n   *\n   *   [rehype-react]: https://github.com/rehypejs/rehype-react\n   */\n  processSync(file) {\n    /** @type {boolean} */\n    let complete = false\n    /** @type {VFileWithOutput<CompileResult> | undefined} */\n    let result\n\n    this.freeze()\n    assertParser('processSync', this.parser || this.Parser)\n    assertCompiler('processSync', this.compiler || this.Compiler)\n\n    this.process(file, realDone)\n    assertDone('processSync', 'process', complete)\n    assert(result, 'we either bailed on an error or have a tree')\n\n    return result\n\n    /**\n     * @type {ProcessCallback<VFileWithOutput<CompileResult>>}\n     */\n    function realDone(error, file) {\n      complete = true\n      bail(error)\n      result = file\n    }\n  }\n\n  /**\n   * Run *transformers* on a syntax tree.\n   *\n   * > **Note**: `run` freezes the processor if not already *frozen*.\n   *\n   * > **Note**: `run` performs the run phase, not other phases.\n   *\n   * @overload\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   * @param {RunCallback<TailTree extends undefined ? Node : TailTree>} done\n   * @returns {undefined}\n   *\n   * @overload\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   * @param {Compatible | undefined} file\n   * @param {RunCallback<TailTree extends undefined ? Node : TailTree>} done\n   * @returns {undefined}\n   *\n   * @overload\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   * @param {Compatible | undefined} [file]\n   * @returns {Promise<TailTree extends undefined ? Node : TailTree>}\n   *\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   *   Tree to transform and inspect.\n   * @param {(\n   *   RunCallback<TailTree extends undefined ? Node : TailTree> |\n   *   Compatible\n   * )} [file]\n   *   File associated with `node` (optional); any value accepted as `x` in\n   *   `new VFile(x)`.\n   * @param {RunCallback<TailTree extends undefined ? Node : TailTree>} [done]\n   *   Callback (optional).\n   * @returns {Promise<TailTree extends undefined ? Node : TailTree> | undefined}\n   *   Nothing if `done` is given.\n   *   Otherwise, a promise rejected with a fatal error or resolved with the\n   *   transformed tree.\n   */\n  run(tree, file, done) {\n    assertNode(tree)\n    this.freeze()\n\n    const transformers = this.transformers\n\n    if (!done && typeof file === 'function') {\n      done = file\n      file = undefined\n    }\n\n    return done ? executor(undefined, done) : new Promise(executor)\n\n    // Note: `void`s needed for TS.\n    /**\n     * @param {(\n     *   ((tree: TailTree extends undefined ? Node : TailTree) => undefined | void) |\n     *   undefined\n     * )} resolve\n     * @param {(error: Error) => undefined | void} reject\n     * @returns {undefined}\n     */\n    function executor(resolve, reject) {\n      assert(\n        typeof file !== 'function',\n        '`file` can’t be a `done` anymore, we checked'\n      )\n      const realFile = vfile(file)\n      transformers.run(tree, realFile, realDone)\n\n      /**\n       * @param {Error | undefined} error\n       * @param {Node} outputTree\n       * @param {VFile} file\n       * @returns {undefined}\n       */\n      function realDone(error, outputTree, file) {\n        const resultingTree =\n          /** @type {TailTree extends undefined ? Node : TailTree} */ (\n            outputTree || tree\n          )\n\n        if (error) {\n          reject(error)\n        } else if (resolve) {\n          resolve(resultingTree)\n        } else {\n          assert(done, '`done` is defined if `resolve` is not')\n          done(undefined, resultingTree, file)\n        }\n      }\n    }\n  }\n\n  /**\n   * Run *transformers* on a syntax tree.\n   *\n   * An error is thrown if asynchronous transforms are configured.\n   *\n   * > **Note**: `runSync` freezes the processor if not already *frozen*.\n   *\n   * > **Note**: `runSync` performs the run phase, not other phases.\n   *\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   *   Tree to transform and inspect.\n   * @param {Compatible | undefined} [file]\n   *   File associated with `node` (optional); any value accepted as `x` in\n   *   `new VFile(x)`.\n   * @returns {TailTree extends undefined ? Node : TailTree}\n   *   Transformed tree.\n   */\n  runSync(tree, file) {\n    /** @type {boolean} */\n    let complete = false\n    /** @type {(TailTree extends undefined ? Node : TailTree) | undefined} */\n    let result\n\n    this.run(tree, file, realDone)\n\n    assertDone('runSync', 'run', complete)\n    assert(result, 'we either bailed on an error or have a tree')\n    return result\n\n    /**\n     * @type {RunCallback<TailTree extends undefined ? Node : TailTree>}\n     */\n    function realDone(error, tree) {\n      bail(error)\n      result = tree\n      complete = true\n    }\n  }\n\n  /**\n   * Compile a syntax tree.\n   *\n   * > **Note**: `stringify` freezes the processor if not already *frozen*.\n   *\n   * > **Note**: `stringify` performs the stringify phase, not the run phase\n   * > or other phases.\n   *\n   * @param {CompileTree extends undefined ? Node : CompileTree} tree\n   *   Tree to compile.\n   * @param {Compatible | undefined} [file]\n   *   File associated with `node` (optional); any value accepted as `x` in\n   *   `new VFile(x)`.\n   * @returns {CompileResult extends undefined ? Value : CompileResult}\n   *   Textual representation of the tree (see note).\n   *\n   *   > **Note**: unified typically compiles by serializing: most compilers\n   *   > return `string` (or `Uint8Array`).\n   *   > Some compilers, such as the one configured with\n   *   > [`rehype-react`][rehype-react], return other values (in this case, a\n   *   > React tree).\n   *   > If you’re using a compiler that doesn’t serialize, expect different\n   *   > result values.\n   *   >\n   *   > To register custom results in TypeScript, add them to\n   *   > {@linkcode CompileResultMap}.\n   *\n   *   [rehype-react]: https://github.com/rehypejs/rehype-react\n   */\n  stringify(tree, file) {\n    this.freeze()\n    const realFile = vfile(file)\n    const compiler = this.compiler || this.Compiler\n    assertCompiler('stringify', compiler)\n    assertNode(tree)\n\n    return compiler(tree, realFile)\n  }\n\n  /**\n   * Configure the processor to use a plugin, a list of usable values, or a\n   * preset.\n   *\n   * If the processor is already using a plugin, the previous plugin\n   * configuration is changed based on the options that are passed in.\n   * In other words, the plugin is not added a second time.\n   *\n   * > **Note**: `use` cannot be called on *frozen* processors.\n   * > Call the processor first to create a new unfrozen processor.\n   *\n   * @example\n   *   There are many ways to pass plugins to `.use()`.\n   *   This example gives an overview:\n   *\n   *   ```js\n   *   import {unified} from 'unified'\n   *\n   *   unified()\n   *     // Plugin with options:\n   *     .use(pluginA, {x: true, y: true})\n   *     // Passing the same plugin again merges configuration (to `{x: true, y: false, z: true}`):\n   *     .use(pluginA, {y: false, z: true})\n   *     // Plugins:\n   *     .use([pluginB, pluginC])\n   *     // Two plugins, the second with options:\n   *     .use([pluginD, [pluginE, {}]])\n   *     // Preset with plugins and settings:\n   *     .use({plugins: [pluginF, [pluginG, {}]], settings: {position: false}})\n   *     // Settings only:\n   *     .use({settings: {position: false}})\n   *   ```\n   *\n   * @template {Array<unknown>} [Parameters=[]]\n   * @template {Node | string | undefined} [Input=undefined]\n   * @template [Output=Input]\n   *\n   * @overload\n   * @param {Preset | null | undefined} [preset]\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @overload\n   * @param {PluggableList} list\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @overload\n   * @param {Plugin<Parameters, Input, Output>} plugin\n   * @param {...(Parameters | [boolean])} parameters\n   * @returns {UsePlugin<ParseTree, HeadTree, TailTree, CompileTree, CompileResult, Input, Output>}\n   *\n   * @param {PluggableList | Plugin | Preset | null | undefined} value\n   *   Usable value.\n   * @param {...unknown} parameters\n   *   Parameters, when a plugin is given as a usable value.\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *   Current processor.\n   */\n  use(value, ...parameters) {\n    const attachers = this.attachers\n    const namespace = this.namespace\n\n    assertUnfrozen('use', this.frozen)\n\n    if (value === null || value === undefined) {\n      // Empty.\n    } else if (typeof value === 'function') {\n      addPlugin(value, parameters)\n    } else if (typeof value === 'object') {\n      if (Array.isArray(value)) {\n        addList(value)\n      } else {\n        addPreset(value)\n      }\n    } else {\n      throw new TypeError('Expected usable value, not `' + value + '`')\n    }\n\n    return this\n\n    /**\n     * @param {Pluggable} value\n     * @returns {undefined}\n     */\n    function add(value) {\n      if (typeof value === 'function') {\n        addPlugin(value, [])\n      } else if (typeof value === 'object') {\n        if (Array.isArray(value)) {\n          const [plugin, ...parameters] =\n            /** @type {PluginTuple<Array<unknown>>} */ (value)\n          addPlugin(plugin, parameters)\n        } else {\n          addPreset(value)\n        }\n      } else {\n        throw new TypeError('Expected usable value, not `' + value + '`')\n      }\n    }\n\n    /**\n     * @param {Preset} result\n     * @returns {undefined}\n     */\n    function addPreset(result) {\n      if (!('plugins' in result) && !('settings' in result)) {\n        throw new Error(\n          'Expected usable value but received an empty preset, which is probably a mistake: presets typically come with `plugins` and sometimes with `settings`, but this has neither'\n        )\n      }\n\n      addList(result.plugins)\n\n      if (result.settings) {\n        namespace.settings = extend(true, namespace.settings, result.settings)\n      }\n    }\n\n    /**\n     * @param {PluggableList | null | undefined} plugins\n     * @returns {undefined}\n     */\n    function addList(plugins) {\n      let index = -1\n\n      if (plugins === null || plugins === undefined) {\n        // Empty.\n      } else if (Array.isArray(plugins)) {\n        while (++index < plugins.length) {\n          const thing = plugins[index]\n          add(thing)\n        }\n      } else {\n        throw new TypeError('Expected a list of plugins, not `' + plugins + '`')\n      }\n    }\n\n    /**\n     * @param {Plugin} plugin\n     * @param {Array<unknown>} parameters\n     * @returns {undefined}\n     */\n    function addPlugin(plugin, parameters) {\n      let index = -1\n      let entryIndex = -1\n\n      while (++index < attachers.length) {\n        if (attachers[index][0] === plugin) {\n          entryIndex = index\n          break\n        }\n      }\n\n      if (entryIndex === -1) {\n        attachers.push([plugin, ...parameters])\n      }\n      // Only set if there was at least a `primary` value, otherwise we’d change\n      // `arguments.length`.\n      else if (parameters.length > 0) {\n        let [primary, ...rest] = parameters\n        const currentPrimary = attachers[entryIndex][1]\n        if (isPlainObj(currentPrimary) && isPlainObj(primary)) {\n          primary = extend(true, currentPrimary, primary)\n        }\n\n        attachers[entryIndex] = [plugin, primary, ...rest]\n      }\n    }\n  }\n}\n\n// Note: this returns a *callable* instance.\n// That’s why it’s documented as a function.\n/**\n * Create a new processor.\n *\n * @example\n *   This example shows how a new processor can be created (from `remark`) and linked\n *   to **stdin**(4) and **stdout**(4).\n *\n *   ```js\n *   import process from 'node:process'\n *   import concatStream from 'concat-stream'\n *   import {remark} from 'remark'\n *\n *   process.stdin.pipe(\n *     concatStream(function (buf) {\n *       process.stdout.write(String(remark().processSync(buf)))\n *     })\n *   )\n *   ```\n *\n * @returns\n *   New *unfrozen* processor (`processor`).\n *\n *   This processor is configured to work the same as its ancestor.\n *   When the descendant processor is configured in the future it does not\n *   affect the ancestral processor.\n */\nexport const unified = new Processor().freeze()\n\n/**\n * Assert a parser is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Parser}\n */\nfunction assertParser(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `parser`')\n  }\n}\n\n/**\n * Assert a compiler is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Compiler}\n */\nfunction assertCompiler(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `compiler`')\n  }\n}\n\n/**\n * Assert the processor is not frozen.\n *\n * @param {string} name\n * @param {unknown} frozen\n * @returns {asserts frozen is false}\n */\nfunction assertUnfrozen(name, frozen) {\n  if (frozen) {\n    throw new Error(\n      'Cannot call `' +\n        name +\n        '` on a frozen processor.\\nCreate a new processor first, by calling it: use `processor()` instead of `processor`.'\n    )\n  }\n}\n\n/**\n * Assert `node` is a unist node.\n *\n * @param {unknown} node\n * @returns {asserts node is Node}\n */\nfunction assertNode(node) {\n  // `isPlainObj` unfortunately uses `any` instead of `unknown`.\n  // type-coverage:ignore-next-line\n  if (!isPlainObj(node) || typeof node.type !== 'string') {\n    throw new TypeError('Expected node, got `' + node + '`')\n    // Fine.\n  }\n}\n\n/**\n * Assert that `complete` is `true`.\n *\n * @param {string} name\n * @param {string} asyncName\n * @param {unknown} complete\n * @returns {asserts complete is true}\n */\nfunction assertDone(name, asyncName, complete) {\n  if (!complete) {\n    throw new Error(\n      '`' + name + '` finished async. Use `' + asyncName + '` instead'\n    )\n  }\n}\n\n/**\n * @param {Compatible | undefined} [value]\n * @returns {VFile}\n */\nfunction vfile(value) {\n  return looksLikeAVFile(value) ? value : new VFile(value)\n}\n\n/**\n * @param {Compatible | undefined} [value]\n * @returns {value is VFile}\n */\nfunction looksLikeAVFile(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'message' in value &&\n      'messages' in value\n  )\n}\n\n/**\n * @param {unknown} [value]\n * @returns {value is Value}\n */\nfunction looksLikeAValue(value) {\n  return typeof value === 'string' || isUint8Array(value)\n}\n\n/**\n * Assert `value` is an `Uint8Array`.\n *\n * @param {unknown} value\n *   thing.\n * @returns {value is Uint8Array}\n *   Whether `value` is an `Uint8Array`.\n */\nfunction isUint8Array(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'byteLength' in value &&\n      'byteOffset' in value\n  )\n}\n", "export default function isPlainObject(value) {\n\tif (typeof value !== 'object' || value === null) {\n\t\treturn false;\n\t}\n\n\tconst prototype = Object.getPrototypeOf(value);\n\treturn (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in value) && !(Symbol.iterator in value);\n}\n", "// To do: remove `void`s\n// To do: remove `null` from output of our APIs, allow it as user APIs.\n\n/**\n * @typedef {(error?: Error | null | undefined, ...output: Array<any>) => void} Callback\n *   Callback.\n *\n * @typedef {(...input: Array<any>) => any} Middleware\n *   Ware.\n *\n * @typedef Pipeline\n *   Pipeline.\n * @property {Run} run\n *   Run the pipeline.\n * @property {Use} use\n *   Add middleware.\n *\n * @typedef {(...input: Array<any>) => void} Run\n *   Call all middleware.\n *\n *   Calls `done` on completion with either an error or the output of the\n *   last middleware.\n *\n *   > 👉 **Note**: as the length of input defines whether async functions get a\n *   > `next` function,\n *   > it’s recommended to keep `input` at one value normally.\n\n *\n * @typedef {(fn: Middleware) => Pipeline} Use\n *   Add middleware.\n */\n\n/**\n * Create new middleware.\n *\n * @returns {Pipeline}\n *   Pipeline.\n */\nexport function trough() {\n  /** @type {Array<Middleware>} */\n  const fns = []\n  /** @type {Pipeline} */\n  const pipeline = {run, use}\n\n  return pipeline\n\n  /** @type {Run} */\n  function run(...values) {\n    let middlewareIndex = -1\n    /** @type {Callback} */\n    const callback = values.pop()\n\n    if (typeof callback !== 'function') {\n      throw new TypeError('Expected function as last argument, not ' + callback)\n    }\n\n    next(null, ...values)\n\n    /**\n     * Run the next `fn`, or we’re done.\n     *\n     * @param {Error | null | undefined} error\n     * @param {Array<any>} output\n     */\n    function next(error, ...output) {\n      const fn = fns[++middlewareIndex]\n      let index = -1\n\n      if (error) {\n        callback(error)\n        return\n      }\n\n      // Copy non-nullish input into values.\n      while (++index < values.length) {\n        if (output[index] === null || output[index] === undefined) {\n          output[index] = values[index]\n        }\n      }\n\n      // Save the newly created `output` for the next call.\n      values = output\n\n      // Next or done.\n      if (fn) {\n        wrap(fn, next)(...output)\n      } else {\n        callback(null, ...output)\n      }\n    }\n  }\n\n  /** @type {Use} */\n  function use(middelware) {\n    if (typeof middelware !== 'function') {\n      throw new TypeError(\n        'Expected `middelware` to be a function, not ' + middelware\n      )\n    }\n\n    fns.push(middelware)\n    return pipeline\n  }\n}\n\n/**\n * Wrap `middleware` into a uniform interface.\n *\n * You can pass all input to the resulting function.\n * `callback` is then called with the output of `middleware`.\n *\n * If `middleware` accepts more arguments than the later given in input,\n * an extra `done` function is passed to it after that input,\n * which must be called by `middleware`.\n *\n * The first value in `input` is the main input value.\n * All other input values are the rest input values.\n * The values given to `callback` are the input values,\n * merged with every non-nullish output value.\n *\n * * if `middleware` throws an error,\n *   returns a promise that is rejected,\n *   or calls the given `done` function with an error,\n *   `callback` is called with that error\n * * if `middleware` returns a value or returns a promise that is resolved,\n *   that value is the main output value\n * * if `middleware` calls `done`,\n *   all non-nullish values except for the first one (the error) overwrite the\n *   output values\n *\n * @param {Middleware} middleware\n *   Function to wrap.\n * @param {Callback} callback\n *   Callback called with the output of `middleware`.\n * @returns {Run}\n *   Wrapped middleware.\n */\nexport function wrap(middleware, callback) {\n  /** @type {boolean} */\n  let called\n\n  return wrapped\n\n  /**\n   * Call `middleware`.\n   * @this {any}\n   * @param {Array<any>} parameters\n   * @returns {void}\n   */\n  function wrapped(...parameters) {\n    const fnExpectsCallback = middleware.length > parameters.length\n    /** @type {any} */\n    let result\n\n    if (fnExpectsCallback) {\n      parameters.push(done)\n    }\n\n    try {\n      result = middleware.apply(this, parameters)\n    } catch (error) {\n      const exception = /** @type {Error} */ (error)\n\n      // Well, this is quite the pickle.\n      // `middleware` received a callback and called it synchronously, but that\n      // threw an error.\n      // The only thing left to do is to throw the thing instead.\n      if (fnExpectsCallback && called) {\n        throw exception\n      }\n\n      return done(exception)\n    }\n\n    if (!fnExpectsCallback) {\n      if (result && result.then && typeof result.then === 'function') {\n        result.then(then, done)\n      } else if (result instanceof Error) {\n        done(result)\n      } else {\n        then(result)\n      }\n    }\n  }\n\n  /**\n   * Call `callback`, only once.\n   *\n   * @type {Callback}\n   */\n  function done(error, ...output) {\n    if (!called) {\n      called = true\n      callback(error, ...output)\n    }\n  }\n\n  /**\n   * Call `done` with one value.\n   *\n   * @param {any} [value]\n   */\n  function then(value) {\n    done(null, value)\n  }\n}\n", "export const CallableInstance =\n  /**\n   * @type {new <Parameters extends Array<unknown>, Result>(property: string | symbol) => (...parameters: Parameters) => Result}\n   */\n  (\n    /** @type {unknown} */\n    (\n      /**\n       * @this {Function}\n       * @param {string | symbol} property\n       * @returns {(...parameters: Array<unknown>) => unknown}\n       */\n      function (property) {\n        const self = this\n        const constr = self.constructor\n        const proto = /** @type {Record<string | symbol, Function>} */ (\n          // Prototypes do exist.\n          // type-coverage:ignore-next-line\n          constr.prototype\n        )\n        const value = proto[property]\n        /** @type {(...parameters: Array<unknown>) => unknown} */\n        const apply = function () {\n          return value.apply(apply, arguments)\n        }\n\n        Object.setPrototypeOf(apply, proto)\n\n        // Not needed for us in `unified`: we only call this on the `copy`\n        // function,\n        // and we don't need to add its fields (`length`, `name`)\n        // over.\n        // See also: GH-246.\n        // const names = Object.getOwnPropertyNames(value)\n        //\n        // for (const p of names) {\n        //   const descriptor = Object.getOwnPropertyDescriptor(value, p)\n        //   if (descriptor) Object.defineProperty(apply, p, descriptor)\n        // }\n\n        return apply\n      }\n    )\n  )\n", "export function withDefault(options) {\n    return {\n        ...defaultOptions,\n        ...options,\n    };\n}\nconst defaultOptions = {\n    todos: ['TODO | DONE'],\n    timezone: Intl.DateTimeFormat().resolvedOptions().timeZone,\n    flat: false,\n};\n", "const matchOperatorsRe = /[|\\\\{}()[\\]^$+*?.]/g;\nexport const escape = (str) => {\n    return str.replace(matchOperatorsRe, '\\\\$&');\n};\nexport const clone = (obj) => {\n    return JSON.parse(JSON.stringify(obj));\n};\nexport const isPhrasingContent = (token) => {\n    return (token.type === 'text' ||\n        token.type === 'footnote.reference' ||\n        token.type === 'opening' ||\n        token.type === 'link' ||\n        token.type === 'newline');\n};\n", "const block = (begin, ctx) => {\n    ctx.save();\n    const contentStart = begin.position.end;\n    const blockName = begin.name.toLowerCase();\n    const block = ctx.enter({\n        type: 'block',\n        name: begin.name,\n        params: begin.params,\n        value: '',\n        attributes: { ...ctx.attributes },\n        children: [],\n    });\n    ctx.push(ctx.lexer.eat());\n    /*\n     * find the indentation of the block and apply it to\n     * the rest of the block.\n     *\n     * The indentation of the first non-blank line is used as standard.\n     * The following lines use the lesser one between its own\n     * indentation and the standard. Leading and trailing blank lines\n     * are omitted.\n     */\n    const align = (content) => {\n        let indent = -1;\n        return content\n            .trimEnd()\n            .split('\\n')\n            .map((line) => {\n            const _indent = line.search(/\\S/);\n            if (indent === -1) {\n                indent = _indent;\n            }\n            if (indent === -1)\n                return '';\n            let result = line.substring(Math.min(_indent, indent));\n            // remove escaping char ,\n            if (block.name.toLowerCase() === 'src' && block.params[0] === 'org') {\n                result = result.replace(/^(\\s*),/, '$1');\n            }\n            return result;\n        })\n            .join('\\n')\n            .trim();\n    };\n    return {\n        name: 'block',\n        rules: [\n            {\n                test: 'block.end',\n                action: (token, context) => {\n                    const lexer = context.lexer;\n                    if (token.name.toLowerCase() !== blockName)\n                        return 'next';\n                    block.value = align(lexer.substring({\n                        start: contentStart,\n                        end: token.position.start,\n                    }));\n                    context.push(lexer.eat());\n                    context.exit('block');\n                    return 'break';\n                },\n            },\n            {\n                test: ['stars', 'EOF'],\n                action: (_, context) => {\n                    context.restore();\n                    context.lexer.modify((t) => ({\n                        type: 'text',\n                        value: context.lexer.substring(t.position),\n                        position: t.position,\n                    }));\n                    return 'break';\n                },\n            },\n            { test: 'newline', action: (_, { discard }) => discard() },\n            { test: /./, action: (_, { consume }) => consume() },\n        ],\n    };\n};\nexport default block;\n", "const latex = (begin, context) => {\n    context.save();\n    const contentStart = begin.position.start;\n    const envName = begin.name.toLowerCase();\n    const latexBlock = context.enter({\n        type: 'latex',\n        name: begin.name,\n        value: '',\n        children: [],\n    });\n    context.push(context.lexer.eat());\n    /*\n     * find the indentation of the block and apply it to\n     * the rest of the block.\n     *\n     * The indentation of the first non-blank line is used as standard.\n     * The following lines use the lesser one between its own\n     * indentation and the standard. Leading and trailing blank lines\n     * are omitted.\n     */\n    const align = (content) => {\n        let indent = -1;\n        return content\n            .trimEnd()\n            .split('\\n')\n            .map((line) => {\n            const _indent = line.search(/\\S/);\n            if (indent === -1) {\n                indent = _indent;\n            }\n            if (indent === -1)\n                return '';\n            const result = line.substring(Math.min(_indent, indent));\n            return result;\n        })\n            .join('\\n')\n            .trim();\n    };\n    return {\n        name: 'latex',\n        rules: [\n            {\n                test: 'latex.end',\n                action: (token, context) => {\n                    if (token.name.toLowerCase() !== envName)\n                        return 'next';\n                    latexBlock.value = align(context.lexer.substring({\n                        start: contentStart,\n                        end: token.position.end,\n                    }));\n                    context.push(context.lexer.eat());\n                    context.lexer.eat('newline');\n                    context.exit('latex');\n                    return 'break';\n                },\n            },\n            {\n                test: ['stars', 'EOF'],\n                action: (_, context) => {\n                    context.restore();\n                    context.lexer.modify((t) => ({\n                        type: 'text',\n                        value: context.lexer.substring(t.position),\n                        position: t.position,\n                    }));\n                    return 'break';\n                },\n            },\n            { test: /./, action: (_, context) => context.push(context.lexer.eat()) },\n        ],\n    };\n};\nexport default latex;\n", "export function isSection(node) {\n    return node.type === 'section';\n}\nexport function isParagraph(node) {\n    return node.type === 'paragraph';\n}\nexport function isLink(node) {\n    return node.type === 'link';\n}\nexport function isFootnoteReference(node) {\n    return node.type === 'footnote.reference';\n}\nexport function isText(node) {\n    return node.type === 'text';\n}\n", "import { not, test } from './index.js';\nimport { isSection } from '../types.js';\nfunction point(d) {\n    return { ...d };\n}\nexport function createContext(lexer, options) {\n    let stack = [];\n    let snapshot = undefined;\n    function enter(node) {\n        const start = lexer.peek()?.position?.start ||\n            lexer.peek(-1)?.position?.end || { line: 1, column: 1, offset: 0 };\n        // @ts-ignore will add the end later\n        node.position = { start: point(start) };\n        stack.push(node);\n        return node;\n    }\n    const tree = enter({\n        type: 'document',\n        properties: {},\n        children: [],\n    });\n    const pop = () => {\n        const node = stack.pop();\n        const end = lexer.peek()?.position?.start ||\n            lexer.peek(-1)?.position?.end || { line: 1, column: 1, offset: 0 };\n        node.position.end = point(end);\n        if (!node) {\n            throw new Error('unexpected empty stack');\n        }\n        // attach to tree\n        if (stack.length > 0) {\n            push(node);\n        }\n        return node;\n    };\n    function exit(predicate, strict = true) {\n        if (stack.length === 0)\n            return; // never exit the root\n        const last = stack[stack.length - 1];\n        if (test(last, predicate)) {\n            return pop();\n        }\n        if (strict) {\n            throw new Error(`\ncan not strictly exit ${predicate},\nactual: ${last.type}\nlocation: line: ${last.position.start.line}, column: ${last.position.start.column}\n`.trim());\n        }\n    }\n    function exitTo(predicate) {\n        exitAll(not(predicate));\n    }\n    function exitAll(predicate) {\n        if (exit(predicate, false)) {\n            exitAll(predicate);\n        }\n    }\n    function getLevel() {\n        let index = stack.length - 1;\n        while (index > 0) {\n            const node = stack[index];\n            if (isSection(node)) {\n                return node.level;\n            }\n            index -= 1;\n        }\n        return 0;\n    }\n    const push = (node) => {\n        if (!node)\n            return;\n        if (stack.length === 0) {\n            throw new Error('unexpected empty stack');\n        }\n        const parent = stack[stack.length - 1];\n        parent.children.push(node);\n        // node.parent = parent\n    };\n    return {\n        options,\n        attributes: {},\n        enter,\n        exit,\n        exitAll,\n        exitTo,\n        push,\n        addProp: function (key, value) {\n            const k = key.toLowerCase().trim();\n            const v = value.trim();\n            const existing = tree.properties[k];\n            if (existing) {\n                if (Array.isArray(existing)) {\n                    existing.push(v);\n                }\n                if (typeof existing === 'string') {\n                    tree.properties[k] = [existing, v];\n                }\n            }\n            else {\n                tree.properties[k] = v;\n            }\n        },\n        consume: function () {\n            push(lexer.eat());\n        },\n        discard: function () {\n            lexer.eat();\n        },\n        within: function (predicate) {\n            return test(this.parent, predicate);\n        },\n        save: function () {\n            const level = this.level;\n            const attributes = this.attributes;\n            snapshot = {\n                stack: [...stack],\n                level,\n                attributes: { ...attributes },\n                savePoint: lexer.save(),\n            };\n        },\n        restore: function () {\n            if (snapshot === undefined)\n                return;\n            this.attributes = { ...snapshot.attributes };\n            stack = [...snapshot.stack];\n            lexer.restore(snapshot.savePoint);\n        },\n        get parent() {\n            return stack[stack.length - 1];\n        },\n        get tree() {\n            return tree;\n        },\n        get lexer() {\n            return lexer;\n        },\n        get level() {\n            return getLevel();\n        },\n        get state() {\n            const token = lexer.peek();\n            const lines = [`lexer: ${lexer.save()}`];\n            lines.push(`token: ${token ? token.type : 'EOF'}`);\n            if (token) {\n                lines.push(`content: ${lexer.substring(token.position)}`);\n            }\n            lines.push(`stack:   ${stack.map((n) => n.type).join(' > ')}`);\n            return lines.join('\\n');\n        },\n    };\n}\n", "export default (value) => {\n    const num = Number(value);\n    if (!Number.isNaN(num))\n        return num;\n    if (value.toLowerCase() === 'true')\n        return true;\n    if (value.toLowerCase() === 'false')\n        return false;\n    return value;\n};\n", "import primitive from './_primitive.js';\nexport default (text) => {\n    let t = text;\n    const result = {};\n    while (t.length > 0) {\n        const m = t.match(/^:\\w+/);\n        if (!m)\n            break;\n        const key = m[0].substring(1);\n        t = t.slice(m[0].length);\n        const end = t.match(/\\s(:\\w+)/);\n        const index = end ? end.index + 1 : t.length;\n        const value = t.substring(0, index).trim();\n        t = t.slice(index);\n        result[key] = primitive(value);\n    }\n    return result;\n};\n", "import parseSymbols from './_parseSymbols.js';\nimport _primitive from './_primitive.js';\nconst AFFILIATED_KEYWORDS = ['caption', 'header', 'name', 'plot', 'results'];\nconst keyword = (token, context) => {\n    const { push, lexer, addProp } = context;\n    const key = token.key.toLowerCase();\n    const { value } = token;\n    if (key === 'html') {\n        push({ type: 'html', value, position: token.position });\n    }\n    else if (key === 'jsx') {\n        push({ type: 'jsx', value, position: token.position });\n    }\n    else {\n        if (AFFILIATED_KEYWORDS.includes(key)) {\n            context.attributes[key] = _primitive(value);\n        }\n        else if (key.startsWith('attr_')) {\n            context.attributes[key] = {\n                ...context.attributes[key],\n                ...parseSymbols(value),\n            };\n        }\n        else if (key === 'todo') {\n            lexer.addInBufferTodoKeywords(value);\n        }\n        else {\n            addProp(key, value);\n        }\n        push(token);\n    }\n    // if (AFFILIATED_KEYWORDS.includes(key)) {\n    //   context.attributes[key] = _primitive(value)\n    // } else if (key.startsWith('attr_')) {\n    //   context.attributes[key] = {\n    //     ...(context.attributes[key] as { [key: string]: Primitive }),\n    //     ...parseSymbols(value),\n    //   }\n    // } else if (key === 'todo') {\n    //   lexer.addInBufferTodoKeywords(value)\n    // } else if (key === 'html') {\n    //   push({ type: 'html', value } as HTML)\n    // } else if (key === 'jsx') {\n    //   push({ type: 'jsx', value } as JSX)\n    // } else {\n    //   addProp(key, value)\n    // }\n    lexer.eat();\n};\nexport default keyword;\n// export default (context: Context) => {\n//   const { push, lexer } = context\n//   const token = lexer.peek()\n//   if (token.type !== 'keyword') return\n//   lexer.eat()\n// }\n", "import { isFootnoteReference, isLink, } from '../types.js';\nconst phrasingContent = {\n    name: 'inline',\n    rules: [\n        {\n            test: 'opening',\n            action: (token, { enter, consume }) => {\n                enter({\n                    type: token.element,\n                    children: [],\n                });\n                consume();\n            },\n        },\n        {\n            test: 'closing',\n            action: (token, { exit, consume }) => {\n                consume();\n                exit(token.element);\n            },\n        },\n        {\n            test: 'link.path',\n            action: (token, context) => {\n                const { parent, consume, attributes } = context;\n                if (!isLink(parent)) {\n                    throw new Error('expect parent to be link');\n                }\n                parent.path = {\n                    protocol: token.protocol,\n                    value: token.value,\n                    search: token.search,\n                };\n                parent.attributes = attributes;\n                context.attributes = {};\n                consume();\n            },\n        },\n        {\n            test: 'footnote.label',\n            action: (token, { parent, consume }) => {\n                if (!isFootnoteReference(parent)) {\n                    throw new Error('expect parent to be footnote reference');\n                }\n                parent.label = token.label;\n                consume();\n            },\n        },\n        {\n            test: 'text',\n            action: (_, { consume }) => {\n                consume();\n            },\n        },\n    ],\n};\nexport default phrasingContent;\n", "import { isPhrasingContent } from '../utils.js';\nimport phrasingContent from './phrasing.js';\nconst listItem = (token, { enter, consume }) => {\n    const item = enter({\n        type: 'list.item',\n        indent: token.indent,\n        children: [],\n    });\n    consume();\n    return {\n        name: 'list item',\n        rules: [\n            {\n                test: 'emptyLine',\n                action: (_, { exit, consume }) => {\n                    consume();\n                    exit(item.type);\n                    return 'break';\n                },\n            },\n            { test: 'newline', action: (_, { consume }) => consume() },\n            {\n                test: 'list.item.tag',\n                action: (token, { consume }) => {\n                    item.tag = token.value;\n                    consume();\n                },\n            },\n            {\n                test: 'list.item.checkbox',\n                action: (_, { consume }) => {\n                    consume();\n                },\n            },\n            { test: isPhrasingContent, action: phrasingContent },\n            {\n                test: /.*/,\n                action: (_, { exit }) => {\n                    exit('list.item');\n                    return 'break';\n                },\n            },\n        ],\n    };\n};\nconst list = (token, context) => {\n    context.enter({\n        type: 'list',\n        indent: token.indent,\n        ordered: token.ordered,\n        children: [],\n        attributes: context.attributes,\n    });\n    context.attributes = {};\n    const indent = token.indent;\n    const handler = {\n        name: 'list',\n        rules: [\n            {\n                test: 'stars',\n                action: (_, { exit }) => {\n                    exit('list');\n                    return 'break';\n                },\n            },\n            {\n                test: ['emptyLine', 'newline'],\n                action: (_, { exit, consume }) => {\n                    consume();\n                    exit('list');\n                    return 'break';\n                },\n            },\n            {\n                test: 'list.item.bullet',\n                action: (token, context) => {\n                    const { exit } = context;\n                    if (indent > token.indent) {\n                        exit('list');\n                        return 'break';\n                    }\n                    else if (indent === token.indent) {\n                        return listItem(token, context);\n                    }\n                    else {\n                        return list(token, context);\n                    }\n                },\n            },\n            {\n                test: /.*/,\n                action: (_, { exit }) => {\n                    exit('list');\n                    return 'break';\n                },\n            },\n        ],\n    };\n    return handler;\n};\nexport default list;\n", "const COMMON_IMAGE_EXTENSIONS = [\n    'apng',\n    'avif',\n    'gif',\n    'jpeg',\n    'jpg',\n    'jfif',\n    'pjpeg',\n    'pjp',\n    'png',\n    'svg',\n    'webp',\n    'bmp',\n    'ico',\n    'cur',\n    'tif',\n    'tiff',\n];\nexport const isImage = (path) => {\n    const ext = path.toLowerCase().split('.').pop();\n    return COMMON_IMAGE_EXTENSIONS.includes(ext);\n};\n", "import { isParagraph } from '../types.js';\nimport { clone, isPhrasingContent } from '../utils.js';\nimport phrasingContent from './phrasing.js';\nimport { isImage } from './_utils.js';\nconst isWhitespaces = (node) => {\n    return ((node.type === 'text' && node.value.trim().length === 0) ||\n        node.type === 'newline' ||\n        node.type === 'emptyLine');\n};\nconst paragraph = () => {\n    const makeSureParagraph = (context) => {\n        const parent = context.parent;\n        if (parent.type === 'paragraph')\n            return;\n        context.save();\n        context.enter({\n            type: 'paragraph',\n            children: [],\n            attributes: clone(context.attributes),\n        });\n        context.attributes = {};\n    };\n    const exitPragraph = (context) => {\n        const paragraph = context.parent;\n        if (!isParagraph(paragraph))\n            return;\n        if (paragraph.children.length === 0 ||\n            paragraph.children.every(isWhitespaces)) {\n            context.restore();\n        }\n        else {\n            // TODO: should we do this?\n            // exitTo('paragraph')\n            context.exit('paragraph');\n        }\n    };\n    return {\n        name: 'paragraph',\n        rules: [\n            {\n                test: 'emptyLine',\n                action: (_, context) => {\n                    context.consume();\n                    exitPragraph(context);\n                    return 'break';\n                },\n            },\n            {\n                test: 'newline',\n                action: (_, { consume }) => consume(),\n            },\n            {\n                test: 'opening',\n                action: (token, context) => {\n                    if (token.element === 'link') {\n                        const next = context.lexer.peek(1);\n                        if (next.type === 'link.path' && isImage(next.value)) {\n                            exitPragraph(context);\n                            return phrasingContent;\n                        }\n                    }\n                    makeSureParagraph(context);\n                    return phrasingContent;\n                },\n            },\n            {\n                test: isPhrasingContent,\n                action: (_, context) => {\n                    makeSureParagraph(context);\n                    return phrasingContent;\n                },\n            },\n            // catch all\n            {\n                test: /.*/,\n                action: (_, context) => {\n                    exitPragraph(context);\n                    return 'break';\n                },\n            },\n        ],\n    };\n};\nexport default paragraph;\n", "const drawer = (begin, context) => {\n    context.save();\n    const drawer = context.enter({\n        type: 'drawer',\n        name: begin.name,\n        value: '',\n        children: [],\n    });\n    context.consume();\n    const contentStart = begin.position.end;\n    return {\n        name: 'drawer',\n        rules: [\n            {\n                test: ['stars', 'EOF'],\n                action: (_, context) => {\n                    context.restore();\n                    context.lexer.modify((t) => ({\n                        type: 'text',\n                        value: context.lexer.substring(t.position),\n                        position: t.position,\n                    }));\n                    return 'break';\n                },\n            },\n            {\n                test: 'drawer.end',\n                action: (token, context) => {\n                    context.consume();\n                    drawer.value = context.lexer.substring({\n                        start: contentStart,\n                        end: token.position.start,\n                    });\n                    context.exit('drawer');\n                    context.lexer.eat('newline');\n                    if (drawer.name.toLowerCase() === 'properties') {\n                        const section = context.parent;\n                        section.properties = drawer.value\n                            .split('\\n')\n                            .reduce((accu, current) => {\n                            const m = current.match(/\\s*:(.+?):\\s*(.+)\\s*$/);\n                            if (m) {\n                                return { ...accu, [m[1].toLowerCase()]: m[2] };\n                            }\n                            return accu;\n                        }, section.properties);\n                    }\n                    return 'break';\n                },\n            },\n            {\n                test: /.*/,\n                action: (_, { consume }) => consume(),\n            },\n        ],\n    };\n};\nexport default drawer;\n", "import { isPhrasingContent } from '../utils.js';\nimport phrasingContent from './phrasing.js';\nconst headline = (token, context) => {\n    const { enter } = context;\n    const headline = enter({\n        type: 'headline',\n        actionable: false,\n        children: [],\n        level: token.level || context.level,\n    });\n    return {\n        name: 'headline',\n        rules: [\n            {\n                test: ['newline', 'EOF'],\n                action: (_, { exit, discard }) => {\n                    discard();\n                    exit(headline.type);\n                    return 'break';\n                },\n            },\n            {\n                test: 'todo',\n                action: (token) => {\n                    headline.keyword = token.keyword;\n                    headline.actionable = token.actionable;\n                    return 'next';\n                },\n            },\n            {\n                test: 'tags',\n                action: (token) => {\n                    headline.tags = token.tags;\n                    return 'next';\n                },\n            },\n            {\n                test: 'priority',\n                action: (token) => {\n                    headline.priority = token.value;\n                    return 'next';\n                },\n            },\n            {\n                test: isPhrasingContent,\n                action: phrasingContent,\n            },\n            {\n                test: /.*/,\n                action: (_, { push, lexer }) => {\n                    push(lexer.eat());\n                },\n            },\n        ],\n    };\n};\nexport default headline;\n", "import drawer from './drawer.js';\nconst planning = {\n    name: 'planning',\n    rules: [\n        {\n            test: 'planning.keyword',\n            action: (keyword, context) => {\n                const { lexer, enter, push, exit } = context;\n                const { eat, eatAll, peek } = lexer;\n                const timestamp = peek(1);\n                if (!timestamp || timestamp.type !== 'planning.timestamp') {\n                    return 'break';\n                }\n                enter({\n                    type: 'planning',\n                    keyword: keyword.value,\n                    timestamp: timestamp.value,\n                    children: [],\n                });\n                push(eat()); // keyword\n                push(eat()); // timestamp\n                exit('planning');\n                if (eatAll('newline') > 1) {\n                    return 'break';\n                }\n            },\n        },\n        {\n            test: 'drawer.begin',\n            action: (token, context) => {\n                return drawer(token, context);\n            },\n        },\n        {\n            test: /.*/,\n            action: () => {\n                return 'break';\n            },\n        },\n    ],\n};\nexport default planning;\n", "import drawer from './drawer.js';\nimport headline from './headline.js';\nimport planning from './planning.js';\nconst section = (token, context) => {\n    const { enter, exit, exitTo, options: { flat }, } = context;\n    // stars break footnote\n    exit('footnote', false);\n    if (!flat) {\n        const level = token.level;\n        if (level <= context.level) {\n            exitTo('section');\n            exit('section');\n            return;\n        }\n        enter({\n            type: 'section',\n            level: level,\n            properties: {},\n            children: [],\n        });\n    }\n    let headlineProcessed = false;\n    return {\n        name: 'section',\n        rules: [\n            {\n                test: 'stars',\n                action: (token, context) => {\n                    if (headlineProcessed)\n                        return 'break';\n                    headlineProcessed = true;\n                    return headline(token, context);\n                },\n            },\n            {\n                test: 'planning.keyword',\n                action: planning,\n            },\n            {\n                test: 'drawer.begin',\n                action: drawer,\n            },\n        ],\n    };\n};\nexport default section;\n", "import { isPhrasingContent } from '../utils.js';\nimport phrasingContent from './phrasing.js';\nconst tableCell = (_, { enter }) => {\n    enter({\n        type: 'table.cell',\n        children: [],\n    });\n    return {\n        name: 'table cell',\n        rules: [\n            {\n                test: ['newline', 'table.columnSeparator'],\n                action: (_, { exit }) => {\n                    exit('table.cell');\n                    return 'break';\n                },\n            },\n            {\n                test: isPhrasingContent,\n                action: phrasingContent,\n            },\n            {\n                test: /.*/,\n                action: (_, { exit }) => {\n                    exit('table.cell');\n                    return 'break';\n                },\n            },\n        ],\n    };\n};\nconst tableRow = (_, { enter, lexer }) => {\n    enter({\n        type: 'table.row',\n        children: [],\n    });\n    // consume()\n    lexer.eat();\n    return {\n        name: 'table row',\n        rules: [\n            {\n                test: 'newline',\n                action: (_, { exit, discard }) => {\n                    discard();\n                    exit('table.row');\n                    return 'break';\n                },\n            },\n            { test: 'table.columnSeparator', action: (_, { consume }) => consume() },\n            { test: isPhrasingContent, action: tableCell },\n        ],\n    };\n};\nconst table = (_, context) => {\n    context.enter({\n        type: 'table',\n        children: [],\n        attributes: {},\n    });\n    return {\n        name: 'table',\n        rules: [\n            { test: 'table.columnSeparator', action: tableRow },\n            { test: 'table.hr', action: (_, context) => context.consume() },\n            { test: 'newline', action: (_, context) => context.discard() },\n            {\n                test: /.*/,\n                action: (_, context) => {\n                    context.exitTo('table');\n                    context.exit('table');\n                    return 'break';\n                },\n            },\n        ],\n    };\n};\nexport default table;\n", "const Footnote = (token, { enter, exitTo, consume }) => {\n    exitTo('document');\n    enter({\n        type: 'footnote',\n        label: token.label,\n        children: [],\n    });\n    consume();\n};\nexport default Footnote;\n", "import { isPhrasingContent } from '../utils.js';\nimport block from './block.js';\nimport latex from './latex.js';\nimport { createContext } from './context.js';\nimport keyword from './keyword.js';\nimport list from './list.js';\nimport paragraph from './paragraph.js';\nimport section from './section.js';\nimport table from './table.js';\nimport footnote from './footnote.js';\nexport function test(node, predicate) {\n    return toFunc(predicate)(node);\n}\nexport function not(test) {\n    return (token) => !toFunc(test)(token);\n}\nexport function toFunc(test) {\n    if (typeof test === 'function') {\n        return (token) => token && test(token);\n    }\n    if (test === 'EOF') {\n        return (token) => {\n            return token === undefined;\n        };\n    }\n    if (typeof test === 'string') {\n        return (token) => token && test === token.type;\n    }\n    return (token) => token && test.test(token.type);\n}\nconst main = {\n    name: 'main',\n    rules: [\n        {\n            test: 'emptyLine',\n            action: function (_, context) {\n                const { consume, exit } = context;\n                context.attributes = {};\n                exit('footnote', false);\n                consume();\n            },\n        },\n        { test: 'newline', action: (_, { discard }) => discard() },\n        { test: 'stars', action: section },\n        { test: 'keyword', action: keyword },\n        { test: 'list.item.bullet', action: list },\n        { test: 'block.begin', action: block },\n        { test: 'latex.begin', action: latex },\n        { test: /^table\\./, action: table },\n        {\n            test: 'hr',\n            action: (token, { lexer, push }) => {\n                lexer.eat();\n                push(token);\n            },\n        },\n        { test: isPhrasingContent, action: paragraph },\n        { test: 'footnote.label', action: footnote },\n        // catch all\n        {\n            test: /.*/,\n            action: (_, { lexer }) => {\n                lexer.eat();\n            },\n        },\n        { test: 'EOF', action: () => 'break' },\n    ],\n};\nexport function parser(lexer, options) {\n    const context = createContext(lexer, options);\n    const end = lexer.toOffset(options.range?.end || Infinity);\n    const handlerStack = [main];\n    function handler() {\n        return handlerStack.length > 0\n            ? handlerStack[handlerStack.length - 1]\n            : undefined;\n    }\n    let lexerLocation = lexer.save();\n    let maxStaleIterations = 10;\n    function advance() {\n        if (!handler() && lexer.now >= end) {\n            return finish();\n        }\n        // prevent infinit loop\n        if (maxStaleIterations === 0) {\n            throw new Error(`it's stuck. \\n${context.state}`);\n        }\n        let nothingMatches = true;\n        for (const { test: _test, action } of handler().rules) {\n            const token = lexer.peek();\n            const predicates = Array.isArray(_test) ? _test : [_test];\n            if (!predicates.some((p) => test(token, p)))\n                continue;\n            nothingMatches = false;\n            if (typeof action !== 'function') {\n                handlerStack.push(action);\n                return advance();\n            }\n            const control = action(token, context);\n            if (typeof control === 'object') {\n                handlerStack.push(control);\n                return advance();\n            }\n            if (control === 'break') {\n                handlerStack.pop();\n                // if (handlerStack.length === 0) {\n                //   throw new Error('can not pop the root handler')\n                // }\n                // return the offset if the block is finished\n                if (lexer.peek() && context.parent.type === 'document') {\n                    return lexer.peek().position.start.offset;\n                }\n                return advance();\n            }\n            if (control === 'next') {\n                continue;\n            }\n            break;\n        }\n        if (nothingMatches) {\n            handlerStack.pop();\n            return advance();\n        }\n        if (lexer.save() === lexerLocation) {\n            maxStaleIterations -= 1;\n        }\n        else {\n            lexerLocation = lexer.save();\n            maxStaleIterations = 10;\n        }\n        return advance();\n    }\n    function finish() {\n        context.exitTo('document');\n        context.exit('document');\n        // algin the end position\n        context.tree.position.end = lexer.toPoint(lexer.now);\n        return context.tree;\n    }\n    return {\n        advance,\n        parse() {\n            for (;;) {\n                const tree = advance();\n                if (typeof tree === 'number')\n                    continue;\n                return tree;\n            }\n        },\n        finish,\n    };\n}\n", "import dateFnsFormat from 'date-fns/format/index.js'\nimport formatters from './formatters/index.js'\nimport toDate from '../toDate/index.js'\n\nvar tzFormattingTokensRegExp = /([xXOz]+)|''|'(''|[^'])+('|$)/g\n\n/**\n * @name format\n * @category Common Helpers\n * @summary Format the date.\n *\n * @description\n * Return the formatted date string in the given format. The result may vary by locale.\n *\n * > ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.\n * > See: https://git.io/fxCyr\n *\n * The characters wrapped between two single quotes characters (') are escaped.\n * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.\n * (see the last example)\n *\n * Format of the string is based on Unicode Technical Standard #35:\n * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n * with a few additions (see note 7 below the table).\n *\n * Accepted patterns:\n * | Unit                            | Pattern | Result examples                   | Notes |\n * |---------------------------------|---------|-----------------------------------|-------|\n * | Era                             | G..GGG  | AD, BC                            |       |\n * |                                 | GGGG    | Anno Domini, Before Christ        | 2     |\n * |                                 | GGGGG   | A, B                              |       |\n * | Calendar year                   | y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | yo      | 44th, 1st, 0th, 17th              | 5,7   |\n * |                                 | yy      | 44, 01, 00, 17                    | 5     |\n * |                                 | yyy     | 044, 001, 1900, 2017              | 5     |\n * |                                 | yyyy    | 0044, 0001, 1900, 2017            | 5     |\n * |                                 | yyyyy   | ...                               | 3,5   |\n * | Local week-numbering year       | Y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | Yo      | 44th, 1st, 1900th, 2017th         | 5,7   |\n * |                                 | YY      | 44, 01, 00, 17                    | 5,8   |\n * |                                 | YYY     | 044, 001, 1900, 2017              | 5     |\n * |                                 | YYYY    | 0044, 0001, 1900, 2017            | 5,8   |\n * |                                 | YYYYY   | ...                               | 3,5   |\n * | ISO week-numbering year         | R       | -43, 0, 1, 1900, 2017             | 5,7   |\n * |                                 | RR      | -43, 00, 01, 1900, 2017           | 5,7   |\n * |                                 | RRR     | -043, 000, 001, 1900, 2017        | 5,7   |\n * |                                 | RRRR    | -0043, 0000, 0001, 1900, 2017     | 5,7   |\n * |                                 | RRRRR   | ...                               | 3,5,7 |\n * | Extended year                   | u       | -43, 0, 1, 1900, 2017             | 5     |\n * |                                 | uu      | -43, 01, 1900, 2017               | 5     |\n * |                                 | uuu     | -043, 001, 1900, 2017             | 5     |\n * |                                 | uuuu    | -0043, 0001, 1900, 2017           | 5     |\n * |                                 | uuuuu   | ...                               | 3,5   |\n * | Quarter (formatting)            | Q       | 1, 2, 3, 4                        |       |\n * |                                 | Qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | QQ      | 01, 02, 03, 04                    |       |\n * |                                 | QQQ     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | QQQQQ   | 1, 2, 3, 4                        | 4     |\n * | Quarter (stand-alone)           | q       | 1, 2, 3, 4                        |       |\n * |                                 | qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | qq      | 01, 02, 03, 04                    |       |\n * |                                 | qqq     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | qqqqq   | 1, 2, 3, 4                        | 4     |\n * | Month (formatting)              | M       | 1, 2, ..., 12                     |       |\n * |                                 | Mo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | MM      | 01, 02, ..., 12                   |       |\n * |                                 | MMM     | Jan, Feb, ..., Dec                |       |\n * |                                 | MMMM    | January, February, ..., December  | 2     |\n * |                                 | MMMMM   | J, F, ..., D                      |       |\n * | Month (stand-alone)             | L       | 1, 2, ..., 12                     |       |\n * |                                 | Lo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | LL      | 01, 02, ..., 12                   |       |\n * |                                 | LLL     | Jan, Feb, ..., Dec                |       |\n * |                                 | LLLL    | January, February, ..., December  | 2     |\n * |                                 | LLLLL   | J, F, ..., D                      |       |\n * | Local week of year              | w       | 1, 2, ..., 53                     |       |\n * |                                 | wo      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | ww      | 01, 02, ..., 53                   |       |\n * | ISO week of year                | I       | 1, 2, ..., 53                     | 7     |\n * |                                 | Io      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | II      | 01, 02, ..., 53                   | 7     |\n * | Day of month                    | d       | 1, 2, ..., 31                     |       |\n * |                                 | do      | 1st, 2nd, ..., 31st               | 7     |\n * |                                 | dd      | 01, 02, ..., 31                   |       |\n * | Day of year                     | D       | 1, 2, ..., 365, 366               | 8     |\n * |                                 | Do      | 1st, 2nd, ..., 365th, 366th       | 7     |\n * |                                 | DD      | 01, 02, ..., 365, 366             | 8     |\n * |                                 | DDD     | 001, 002, ..., 365, 366           |       |\n * |                                 | DDDD    | ...                               | 3     |\n * | Day of week (formatting)        | E..EEE  | Mon, Tue, Wed, ..., Su            |       |\n * |                                 | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | EEEEE   | M, T, W, T, F, S, S               |       |\n * |                                 | EEEEEE  | Mo, Tu, We, Th, Fr, Su, Sa        |       |\n * | ISO day of week (formatting)    | i       | 1, 2, 3, ..., 7                   | 7     |\n * |                                 | io      | 1st, 2nd, ..., 7th                | 7     |\n * |                                 | ii      | 01, 02, ..., 07                   | 7     |\n * |                                 | iii     | Mon, Tue, Wed, ..., Su            | 7     |\n * |                                 | iiii    | Monday, Tuesday, ..., Sunday      | 2,7   |\n * |                                 | iiiii   | M, T, W, T, F, S, S               | 7     |\n * |                                 | iiiiii  | Mo, Tu, We, Th, Fr, Su, Sa        | 7     |\n * | Local day of week (formatting)  | e       | 2, 3, 4, ..., 1                   |       |\n * |                                 | eo      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | ee      | 02, 03, ..., 01                   |       |\n * |                                 | eee     | Mon, Tue, Wed, ..., Su            |       |\n * |                                 | eeee    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | eeeee   | M, T, W, T, F, S, S               |       |\n * |                                 | eeeeee  | Mo, Tu, We, Th, Fr, Su, Sa        |       |\n * | Local day of week (stand-alone) | c       | 2, 3, 4, ..., 1                   |       |\n * |                                 | co      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | cc      | 02, 03, ..., 01                   |       |\n * |                                 | ccc     | Mon, Tue, Wed, ..., Su            |       |\n * |                                 | cccc    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | ccccc   | M, T, W, T, F, S, S               |       |\n * |                                 | cccccc  | Mo, Tu, We, Th, Fr, Su, Sa        |       |\n * | AM, PM                          | a..aaa  | AM, PM                            |       |\n * |                                 | aaaa    | a.m., p.m.                        | 2     |\n * |                                 | aaaaa   | a, p                              |       |\n * | AM, PM, noon, midnight          | b..bbb  | AM, PM, noon, midnight            |       |\n * |                                 | bbbb    | a.m., p.m., noon, midnight        | 2     |\n * |                                 | bbbbb   | a, p, n, mi                       |       |\n * | Flexible day period             | B..BBB  | at night, in the morning, ...     |       |\n * |                                 | BBBB    | at night, in the morning, ...     | 2     |\n * |                                 | BBBBB   | at night, in the morning, ...     |       |\n * | Hour [1-12]                     | h       | 1, 2, ..., 11, 12                 |       |\n * |                                 | ho      | 1st, 2nd, ..., 11th, 12th         | 7     |\n * |                                 | hh      | 01, 02, ..., 11, 12               |       |\n * | Hour [0-23]                     | H       | 0, 1, 2, ..., 23                  |       |\n * |                                 | Ho      | 0th, 1st, 2nd, ..., 23rd          | 7     |\n * |                                 | HH      | 00, 01, 02, ..., 23               |       |\n * | Hour [0-11]                     | K       | 1, 2, ..., 11, 0                  |       |\n * |                                 | Ko      | 1st, 2nd, ..., 11th, 0th          | 7     |\n * |                                 | KK      | 1, 2, ..., 11, 0                  |       |\n * | Hour [1-24]                     | k       | 24, 1, 2, ..., 23                 |       |\n * |                                 | ko      | 24th, 1st, 2nd, ..., 23rd         | 7     |\n * |                                 | kk      | 24, 01, 02, ..., 23               |       |\n * | Minute                          | m       | 0, 1, ..., 59                     |       |\n * |                                 | mo      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | mm      | 00, 01, ..., 59                   |       |\n * | Second                          | s       | 0, 1, ..., 59                     |       |\n * |                                 | so      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | ss      | 00, 01, ..., 59                   |       |\n * | Fraction of second              | S       | 0, 1, ..., 9                      |       |\n * |                                 | SS      | 00, 01, ..., 99                   |       |\n * |                                 | SSS     | 000, 0001, ..., 999               |       |\n * |                                 | SSSS    | ...                               | 3     |\n * | Timezone (ISO-8601 w/ Z)        | X       | -08, +0530, Z                     |       |\n * |                                 | XX      | -0800, +0530, Z                   |       |\n * |                                 | XXX     | -08:00, +05:30, Z                 |       |\n * |                                 | XXXX    | -0800, +0530, Z, +123456          | 2     |\n * |                                 | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |\n * | Timezone (ISO-8601 w/o Z)       | x       | -08, +0530, +00                   |       |\n * |                                 | xx      | -0800, +0530, +0000               |       |\n * |                                 | xxx     | -08:00, +05:30, +00:00            | 2     |\n * |                                 | xxxx    | -0800, +0530, +0000, +123456      |       |\n * |                                 | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |\n * | Timezone (GMT)                  | O...OOO | GMT-8, GMT+5:30, GMT+0            |       |\n * |                                 | OOOO    | GMT-08:00, GMT+05:30, GMT+00:00   | 2     |\n * | Timezone (specific non-locat.)  | z...zzz | PDT, EST, CEST                    | 6     |\n * |                                 | zzzz    | Pacific Daylight Time             | 2,6   |\n * | Seconds timestamp               | t       | 512969520                         | 7     |\n * |                                 | tt      | ...                               | 3,7   |\n * | Milliseconds timestamp          | T       | 512969520900                      | 7     |\n * |                                 | TT      | ...                               | 3,7   |\n * | Long localized date             | P       | 05/29/1453                        | 7     |\n * |                                 | PP      | May 29, 1453                      | 7     |\n * |                                 | PPP     | May 29th, 1453                    | 7     |\n * |                                 | PPPP    | Sunday, May 29th, 1453            | 2,7   |\n * | Long localized time             | p       | 12:00 AM                          | 7     |\n * |                                 | pp      | 12:00:00 AM                       | 7     |\n * |                                 | ppp     | 12:00:00 AM GMT+2                 | 7     |\n * |                                 | pppp    | 12:00:00 AM GMT+02:00             | 2,7   |\n * | Combination of date and time    | Pp      | 05/29/1453, 12:00 AM              | 7     |\n * |                                 | PPpp    | May 29, 1453, 12:00:00 AM         | 7     |\n * |                                 | PPPppp  | May 29th, 1453 at ...             | 7     |\n * |                                 | PPPPpppp| Sunday, May 29th, 1453 at ...     | 2,7   |\n * Notes:\n * 1. \"Formatting\" units (e.g. formatting quarter) in the default en-US locale\n *    are the same as \"stand-alone\" units, but are different in some languages.\n *    \"Formatting\" units are declined according to the rules of the language\n *    in the context of a date. \"Stand-alone\" units are always nominative singular:\n *\n *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`\n *\n *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`\n *\n * 2. Any sequence of the identical letters is a pattern, unless it is escaped by\n *    the single quote characters (see below).\n *    If the sequence is longer than listed in table (e.g. `EEEEEEEEEEE`)\n *    the output will be the same as default pattern for this unit, usually\n *    the longest one (in case of ISO weekdays, `EEEE`). Default patterns for units\n *    are marked with \"2\" in the last column of the table.\n *\n *    `format(new Date(2017, 10, 6), 'MMM') //=> 'Nov'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMM') //=> 'N'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMMM') //=> 'November'`\n *\n * 3. Some patterns could be unlimited length (such as `yyyyyyyy`).\n *    The output will be padded with zeros to match the length of the pattern.\n *\n *    `format(new Date(2017, 10, 6), 'yyyyyyyy') //=> '00002017'`\n *\n * 4. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.\n *    These tokens represent the shortest form of the quarter.\n *\n * 5. The main difference between `y` and `u` patterns are B.C. years:\n *\n *    | Year | `y` | `u` |\n *    |------|-----|-----|\n *    | AC 1 |   1 |   1 |\n *    | BC 1 |   1 |   0 |\n *    | BC 2 |   2 |  -1 |\n *\n *    Also `yy` always returns the last two digits of a year,\n *    while `uu` pads single digit years to 2 characters and returns other years unchanged:\n *\n *    | Year | `yy` | `uu` |\n *    |------|------|------|\n *    | 1    |   01 |   01 |\n *    | 14   |   14 |   14 |\n *    | 376  |   76 |  376 |\n *    | 1453 |   53 | 1453 |\n *\n *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),\n *    except local week-numbering years are dependent on `options.weekStartsOn`\n *    and `options.firstWeekContainsDate` (compare [getISOWeekYear]{@link https://date-fns.org/docs/getISOWeekYear}\n *    and [getWeekYear]{@link https://date-fns.org/docs/getWeekYear}).\n *\n * 6. Specific non-location timezones are created using the Intl browser API. The output is determined by the\n *    preferred standard of the current locale (en-US by default) which may not always give the expected result.\n *    For this reason it is recommended to supply a `locale` in the format options when formatting a time zone name.\n *\n * 7. These patterns are not in the Unicode Technical Standard #35:\n *    - `i`: ISO day of week\n *    - `I`: ISO week of year\n *    - `R`: ISO week-numbering year\n *    - `t`: seconds timestamp\n *    - `T`: milliseconds timestamp\n *    - `o`: ordinal number modifier\n *    - `P`: long localized date\n *    - `p`: long localized time\n *\n * 8. These tokens are often confused with others. See: https://git.io/fxCyr\n *\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole\n *   library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The second argument is now required for the sake of explicitness.\n *\n *   ```javascript\n *   // Before v2.0.0\n *   format(new Date(2016, 0, 1))\n *\n *   // v2.0.0 onward\n *   format(new Date(2016, 0, 1), \"yyyy-MM-dd'T'HH:mm:ss.SSSxxx\")\n *   ```\n *\n * - New format string API for `format` function\n *   which is based on [Unicode Technical Standard\n *   #35](https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table). See [this\n *   post](https://blog.date-fns.org/post/unicode-tokens-in-date-fns-v2-sreatyki91jg) for more details.\n *\n * - Characters are now escaped using single quote symbols (`'`) instead of square brackets.\n *\n * @param {Date|Number} date - the original date\n * @param {String} format - the string of tokens\n * @param {OptionsWithTZ} [options] - the object with options. See [Options]{@link https://date-fns.org/docs/Options}\n * @param {0|1|2} [options.additionalDigits=2] - passed to `toDate`. See [toDate]{@link\n *   https://date-fns.org/docs/toDate}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @param {Number} [options.firstWeekContainsDate=1] - the day of January, which is\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See\n *   [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {Boolean} [options.awareOfUnicodeTokens=false] - if true, allows usage of Unicode tokens causes confusion:\n *   - Some of the day of year tokens (`D`, `DD`) that are confused with the day of month tokens (`d`, `dd`).\n *   - Some of the local week-numbering year tokens (`YY`, `YYYY`) that are confused with the calendar year tokens\n *   (`yy`, `yyyy`). See: https://git.io/fxCyr\n * @param {String} [options.timeZone=''] - used to specify the IANA time zone offset of a date String.\n * @param {Date|Number} [options.originalDate] - can be used to pass the original unmodified date to `format` to\n *   improve correctness of the replaced timezone token close to the DST threshold.\n * @returns {String} the formatted date string\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `options.additionalDigits` must be 0, 1 or 2\n * @throws {RangeError} `options.locale` must contain `localize` property\n * @throws {RangeError} `options.locale` must contain `formatLong` property\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7\n * @throws {RangeError} `options.awareOfUnicodeTokens` must be set to `true` to use `XX` token; see:\n *   https://git.io/fxCyr\n *\n * @example\n * // Represent 11 February 2014 in middle-endian format:\n * var result = format(new Date(2014, 1, 11), 'MM/dd/yyyy')\n * //=> '02/11/2014'\n *\n * @example\n * // Represent 2 July 2014 in Esperanto:\n * import { eoLocale } from 'date-fns/locale/eo'\n * var result = format(new Date(2014, 6, 2), \"do 'de' MMMM yyyy\", {\n *   locale: eoLocale\n * })\n * //=> '2-a de julio 2014'\n *\n * @example\n * // Escape string by single quote characters:\n * var result = format(new Date(2014, 6, 2, 15), \"h 'o''clock'\")\n * //=> \"3 o'clock\"\n */\nexport default function format(dirtyDate, dirtyFormatStr, dirtyOptions) {\n  var formatStr = String(dirtyFormatStr)\n  var options = dirtyOptions || {}\n\n  var matches = formatStr.match(tzFormattingTokensRegExp)\n  if (matches) {\n    var date = toDate(options.originalDate || dirtyDate, options)\n    // Work through each match and replace the tz token in the format string with the quoted\n    // formatted time zone so the remaining tokens can be filled in by date-fns#format.\n    formatStr = matches.reduce(function (result, token) {\n      if (token[0] === \"'\") {\n        return result // This is a quoted portion, matched only to ensure we don't match inside it\n      }\n      var pos = result.indexOf(token)\n      var precededByQuotedSection = result[pos - 1] === \"'\"\n      var replaced = result.replace(\n        token,\n        \"'\" + formatters[token[0]](date, token, null, options) + \"'\"\n      )\n      // If the replacement results in two adjoining quoted strings, the back to back quotes\n      // are removed, so it doesn't look like an escaped quote.\n      return precededByQuotedSection\n        ? replaced.substring(0, pos - 1) + replaced.substring(pos + 1)\n        : replaced\n    }, formatStr)\n  }\n\n  return dateFnsFormat(dirtyDate, formatStr, options)\n}\n", "/**\n * Returns the [year, month, day, hour, minute, seconds] tokens of the provided\n * `date` as it will be rendered in the `timeZone`.\n */\nexport default function tzTokenizeDate(date, timeZone) {\n  var dtf = getDateTimeFormat(timeZone)\n  return dtf.formatToParts ? partsOffset(dtf, date) : hackyOffset(dtf, date)\n}\n\nvar typeToPos = {\n  year: 0,\n  month: 1,\n  day: 2,\n  hour: 3,\n  minute: 4,\n  second: 5,\n}\n\nfunction partsOffset(dtf, date) {\n  try {\n    var formatted = dtf.formatToParts(date)\n    var filled = []\n    for (var i = 0; i < formatted.length; i++) {\n      var pos = typeToPos[formatted[i].type]\n\n      if (pos >= 0) {\n        filled[pos] = parseInt(formatted[i].value, 10)\n      }\n    }\n    return filled\n  } catch (error) {\n    if (error instanceof RangeError) {\n      return [NaN]\n    }\n    throw error\n  }\n}\n\nfunction hackyOffset(dtf, date) {\n  var formatted = dtf.format(date)\n  var parsed = /(\\d+)\\/(\\d+)\\/(\\d+),? (\\d+):(\\d+):(\\d+)/.exec(formatted)\n  // var [, fMonth, fDay, fYear, fHour, fMinute, fSecond] = parsed\n  // return [fYear, fMonth, fDay, fHour, fMinute, fSecond]\n  return [parsed[3], parsed[1], parsed[2], parsed[4], parsed[5], parsed[6]]\n}\n\n// Get a cached Intl.DateTimeFormat instance for the IANA `timeZone`. This can be used\n// to get deterministic local date/time output according to the `en-US` locale which\n// can be used to extract local time parts as necessary.\nvar dtfCache = {}\nfunction getDateTimeFormat(timeZone) {\n  if (!dtfCache[timeZone]) {\n    // New browsers use `hourCycle`, IE and Chrome <73 does not support it and uses `hour12`\n    var testDateFormatted = new Intl.DateTimeFormat('en-US', {\n      hourCycle: 'h23',\n      timeZone: 'America/New_York',\n      year: 'numeric',\n      month: '2-digit',\n      day: '2-digit',\n      hour: '2-digit',\n      minute: '2-digit',\n      second: '2-digit',\n    }).format(new Date('2014-06-25T04:00:00.123Z'))\n    var hourCycleSupported =\n      testDateFormatted === '06/25/2014, 00:00:00' ||\n      testDateFormatted === '‎06‎/‎25‎/‎2014‎ ‎00‎:‎00‎:‎00'\n\n    dtfCache[timeZone] = hourCycleSupported\n      ? new Intl.DateTimeFormat('en-US', {\n          hourCycle: 'h23',\n          timeZone: timeZone,\n          year: 'numeric',\n          month: 'numeric',\n          day: '2-digit',\n          hour: '2-digit',\n          minute: '2-digit',\n          second: '2-digit',\n        })\n      : new Intl.DateTimeFormat('en-US', {\n          hour12: false,\n          timeZone: timeZone,\n          year: 'numeric',\n          month: 'numeric',\n          day: '2-digit',\n          hour: '2-digit',\n          minute: '2-digit',\n          second: '2-digit',\n        })\n  }\n  return dtfCache[timeZone]\n}\n", "/**\n * Use instead of `new Date(Date.UTC(...))` to support years below 100 which doesn't work\n * otherwise due to the nature of the\n * [`Date` constructor](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date#interpretation_of_two-digit_years.\n *\n * For `Date.UTC(...)`, use `newDateUTC(...).getTime()`.\n */\nexport default function newDateUTC(fullYear, month, day, hour, minute, second, millisecond) {\n  var utcDate = new Date(0)\n  utcDate.setUTCFullYear(fullYear, month, day)\n  utcDate.setUTCHours(hour, minute, second, millisecond)\n  return utcDate\n}\n", "import tzTokenizeDate from '../tzTokenizeDate/index.js'\nimport newDateUTC from '../newDateUTC/index.js'\n\nvar MILLISECONDS_IN_HOUR = 3600000\nvar MILLISECONDS_IN_MINUTE = 60000\n\nvar patterns = {\n  timezone: /([Z+-].*)$/,\n  timezoneZ: /^(Z)$/,\n  timezoneHH: /^([+-]\\d{2})$/,\n  timezoneHHMM: /^([+-])(\\d{2}):?(\\d{2})$/,\n}\n\n// Parse various time zone offset formats to an offset in milliseconds\nexport default function tzParseTimezone(timezoneString, date, isUtcDate) {\n  var token\n  var absoluteOffset\n\n  // Empty string\n  if (!timezoneString) {\n    return 0\n  }\n\n  // Z\n  token = patterns.timezoneZ.exec(timezoneString)\n  if (token) {\n    return 0\n  }\n\n  var hours\n\n  // ±hh\n  token = patterns.timezoneHH.exec(timezoneString)\n  if (token) {\n    hours = parseInt(token[1], 10)\n\n    if (!validateTimezone(hours)) {\n      return NaN\n    }\n\n    return -(hours * MILLISECONDS_IN_HOUR)\n  }\n\n  // ±hh:mm or ±hhmm\n  token = patterns.timezoneHHMM.exec(timezoneString)\n  if (token) {\n    hours = parseInt(token[2], 10)\n    var minutes = parseInt(token[3], 10)\n\n    if (!validateTimezone(hours, minutes)) {\n      return NaN\n    }\n\n    absoluteOffset = Math.abs(hours) * MILLISECONDS_IN_HOUR + minutes * MILLISECONDS_IN_MINUTE\n    return token[1] === '+' ? -absoluteOffset : absoluteOffset\n  }\n\n  // IANA time zone\n  if (isValidTimezoneIANAString(timezoneString)) {\n    date = new Date(date || Date.now())\n    var utcDate = isUtcDate ? date : toUtcDate(date)\n\n    var offset = calcOffset(utcDate, timezoneString)\n\n    var fixedOffset = isUtcDate ? offset : fixOffset(date, offset, timezoneString)\n\n    return -fixedOffset\n  }\n\n  return NaN\n}\n\nfunction toUtcDate(date) {\n  return newDateUTC(\n    date.getFullYear(),\n    date.getMonth(),\n    date.getDate(),\n    date.getHours(),\n    date.getMinutes(),\n    date.getSeconds(),\n    date.getMilliseconds()\n  )\n}\n\nfunction calcOffset(date, timezoneString) {\n  var tokens = tzTokenizeDate(date, timezoneString)\n\n  // ms dropped because it's not provided by tzTokenizeDate\n  var asUTC = newDateUTC(\n    tokens[0],\n    tokens[1] - 1,\n    tokens[2],\n    tokens[3] % 24,\n    tokens[4],\n    tokens[5],\n    0\n  ).getTime()\n\n  var asTS = date.getTime()\n  var over = asTS % 1000\n  asTS -= over >= 0 ? over : 1000 + over\n  return asUTC - asTS\n}\n\nfunction fixOffset(date, offset, timezoneString) {\n  var localTS = date.getTime()\n\n  // Our UTC time is just a guess because our offset is just a guess\n  var utcGuess = localTS - offset\n\n  // Test whether the zone matches the offset for this ts\n  var o2 = calcOffset(new Date(utcGuess), timezoneString)\n\n  // If so, offset didn't change, and we're done\n  if (offset === o2) {\n    return offset\n  }\n\n  // If not, change the ts by the difference in the offset\n  utcGuess -= o2 - offset\n\n  // If that gives us the local time we want, we're done\n  var o3 = calcOffset(new Date(utcGuess), timezoneString)\n  if (o2 === o3) {\n    return o2\n  }\n\n  // If it's different, we're in a hole time. The offset has changed, but we don't adjust the time\n  return Math.max(o2, o3)\n}\n\nfunction validateTimezone(hours, minutes) {\n  return -23 <= hours && hours <= 23 && (minutes == null || (0 <= minutes && minutes <= 59))\n}\n\nvar validIANATimezoneCache = {}\nfunction isValidTimezoneIANAString(timeZoneString) {\n  if (validIANATimezoneCache[timeZoneString]) return true\n  try {\n    new Intl.DateTimeFormat(undefined, { timeZone: timeZoneString })\n    validIANATimezoneCache[timeZoneString] = true\n    return true\n  } catch (error) {\n    return false\n  }\n}\n", "import tzIntlTimeZoneName from '../../_lib/tzIntlTimeZoneName/index.js'\nimport tzParseTimezone from '../../_lib/tzParseTimezone/index.js'\n\nvar MILLISECONDS_IN_MINUTE = 60 * 1000\n\nvar formatters = {\n  // Timezone (ISO-8601. If offset is 0, output is always `'Z'`)\n  X: function (date, token, localize, options) {\n    var timezoneOffset = getTimeZoneOffset(options.timeZone, date)\n\n    if (timezoneOffset === 0) {\n      return 'Z'\n    }\n\n    switch (token) {\n      // Hours and optional minutes\n      case 'X':\n        return formatTimezoneWithOptionalMinutes(timezoneOffset)\n\n      // Hours, minutes and optional seconds without `:` delimeter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XX`\n      case 'XXXX':\n      case 'XX': // Hours and minutes without `:` delimeter\n        return formatTimezone(timezoneOffset)\n\n      // Hours, minutes and optional seconds with `:` delimeter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XXX`\n      case 'XXXXX':\n      case 'XXX': // Hours and minutes with `:` delimeter\n      default:\n        return formatTimezone(timezoneOffset, ':')\n    }\n  },\n\n  // Timezone (ISO-8601. If offset is 0, output is `'+00:00'` or equivalent)\n  x: function (date, token, localize, options) {\n    var timezoneOffset = getTimeZoneOffset(options.timeZone, date)\n\n    switch (token) {\n      // Hours and optional minutes\n      case 'x':\n        return formatTimezoneWithOptionalMinutes(timezoneOffset)\n\n      // Hours, minutes and optional seconds without `:` delimeter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xx`\n      case 'xxxx':\n      case 'xx': // Hours and minutes without `:` delimeter\n        return formatTimezone(timezoneOffset)\n\n      // Hours, minutes and optional seconds with `:` delimeter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xxx`\n      case 'xxxxx':\n      case 'xxx': // Hours and minutes with `:` delimeter\n      default:\n        return formatTimezone(timezoneOffset, ':')\n    }\n  },\n\n  // Timezone (GMT)\n  O: function (date, token, localize, options) {\n    var timezoneOffset = getTimeZoneOffset(options.timeZone, date)\n\n    switch (token) {\n      // Short\n      case 'O':\n      case 'OO':\n      case 'OOO':\n        return 'GMT' + formatTimezoneShort(timezoneOffset, ':')\n      // Long\n      case 'OOOO':\n      default:\n        return 'GMT' + formatTimezone(timezoneOffset, ':')\n    }\n  },\n\n  // Timezone (specific non-location)\n  z: function (date, token, localize, options) {\n    switch (token) {\n      // Short\n      case 'z':\n      case 'zz':\n      case 'zzz':\n        return tzIntlTimeZoneName('short', date, options)\n      // Long\n      case 'zzzz':\n      default:\n        return tzIntlTimeZoneName('long', date, options)\n    }\n  },\n}\n\nfunction getTimeZoneOffset(timeZone, originalDate) {\n  var timeZoneOffset = timeZone\n    ? tzParseTimezone(timeZone, originalDate, true) / MILLISECONDS_IN_MINUTE\n    : originalDate.getTimezoneOffset()\n  if (Number.isNaN(timeZoneOffset)) {\n    throw new RangeError('Invalid time zone specified: ' + timeZone)\n  }\n  return timeZoneOffset\n}\n\nfunction addLeadingZeros(number, targetLength) {\n  var sign = number < 0 ? '-' : ''\n  var output = Math.abs(number).toString()\n  while (output.length < targetLength) {\n    output = '0' + output\n  }\n  return sign + output\n}\n\nfunction formatTimezone(offset, dirtyDelimeter) {\n  var delimeter = dirtyDelimeter || ''\n  var sign = offset > 0 ? '-' : '+'\n  var absOffset = Math.abs(offset)\n  var hours = addLeadingZeros(Math.floor(absOffset / 60), 2)\n  var minutes = addLeadingZeros(Math.floor(absOffset % 60), 2)\n  return sign + hours + delimeter + minutes\n}\n\nfunction formatTimezoneWithOptionalMinutes(offset, dirtyDelimeter) {\n  if (offset % 60 === 0) {\n    var sign = offset > 0 ? '-' : '+'\n    return sign + addLeadingZeros(Math.abs(offset) / 60, 2)\n  }\n  return formatTimezone(offset, dirtyDelimeter)\n}\n\nfunction formatTimezoneShort(offset, dirtyDelimiter) {\n  var sign = offset > 0 ? '-' : '+'\n  var absOffset = Math.abs(offset)\n  var hours = Math.floor(absOffset / 60)\n  var minutes = absOffset % 60\n  if (minutes === 0) {\n    return sign + String(hours)\n  }\n  var delimiter = dirtyDelimiter || ''\n  return sign + String(hours) + delimiter + addLeadingZeros(minutes, 2)\n}\n\nexport default formatters\n", "import toInteger from 'date-fns/_lib/toInteger/index.js'\nimport getTimezoneOffsetInMilliseconds from 'date-fns/_lib/getTimezoneOffsetInMilliseconds/index.js'\nimport tzParseTimezone from '../_lib/tzParseTimezone/index.js'\nimport tzPattern from '../_lib/tzPattern/index.js'\n\nvar MILLISECONDS_IN_HOUR = 3600000\nvar MILLISECONDS_IN_MINUTE = 60000\nvar DEFAULT_ADDITIONAL_DIGITS = 2\n\nvar patterns = {\n  dateTimePattern: /^([0-9W+-]+)(T| )(.*)/,\n  datePattern: /^([0-9W+-]+)(.*)/,\n  plainTime: /:/,\n\n  // year tokens\n  YY: /^(\\d{2})$/,\n  YYY: [\n    /^([+-]\\d{2})$/, // 0 additional digits\n    /^([+-]\\d{3})$/, // 1 additional digit\n    /^([+-]\\d{4})$/, // 2 additional digits\n  ],\n  YYYY: /^(\\d{4})/,\n  YYYYY: [\n    /^([+-]\\d{4})/, // 0 additional digits\n    /^([+-]\\d{5})/, // 1 additional digit\n    /^([+-]\\d{6})/, // 2 additional digits\n  ],\n\n  // date tokens\n  MM: /^-(\\d{2})$/,\n  DDD: /^-?(\\d{3})$/,\n  MMDD: /^-?(\\d{2})-?(\\d{2})$/,\n  Www: /^-?W(\\d{2})$/,\n  WwwD: /^-?W(\\d{2})-?(\\d{1})$/,\n\n  HH: /^(\\d{2}([.,]\\d*)?)$/,\n  HHMM: /^(\\d{2}):?(\\d{2}([.,]\\d*)?)$/,\n  HHMMSS: /^(\\d{2}):?(\\d{2}):?(\\d{2}([.,]\\d*)?)$/,\n\n  // time zone tokens (to identify the presence of a tz)\n  timeZone: tzPattern,\n}\n\n/**\n * @name toDate\n * @category Common Helpers\n * @summary Convert the given argument to an instance of Date.\n *\n * @description\n * Convert the given argument to an instance of Date.\n *\n * If the argument is an instance of Date, the function returns its clone.\n *\n * If the argument is a number, it is treated as a timestamp.\n *\n * If an argument is a string, the function tries to parse it.\n * Function accepts complete ISO 8601 formats as well as partial implementations.\n * ISO 8601: http://en.wikipedia.org/wiki/ISO_8601\n * If the function cannot parse the string or the values are invalid, it returns Invalid Date.\n *\n * If the argument is none of the above, the function returns Invalid Date.\n *\n * **Note**: *all* Date arguments passed to any *date-fns* function is processed by `toDate`.\n * All *date-fns* functions will throw `RangeError` if `options.additionalDigits` is not 0, 1, 2 or undefined.\n *\n * @param {Date|String|Number} argument - the value to convert\n * @param {OptionsWithTZ} [options] - the object with options. See [Options]{@link https://date-fns.org/docs/Options}\n * @param {0|1|2} [options.additionalDigits=2] - the additional number of digits in the extended year format\n * @param {String} [options.timeZone=''] - used to specify the IANA time zone offset of a date String.\n * @returns {Date} the parsed date in the local time zone\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.additionalDigits` must be 0, 1 or 2\n *\n * @example\n * // Convert string '2014-02-11T11:30:30' to date:\n * var result = toDate('2014-02-11T11:30:30')\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert string '+02014101' to date,\n * // if the additional number of digits in the extended year format is 1:\n * var result = toDate('+02014101', {additionalDigits: 1})\n * //=> Fri Apr 11 2014 00:00:00\n */\nexport default function toDate(argument, dirtyOptions) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present')\n  }\n\n  if (argument === null) {\n    return new Date(NaN)\n  }\n\n  var options = dirtyOptions || {}\n\n  var additionalDigits =\n    options.additionalDigits == null\n      ? DEFAULT_ADDITIONAL_DIGITS\n      : toInteger(options.additionalDigits)\n  if (additionalDigits !== 2 && additionalDigits !== 1 && additionalDigits !== 0) {\n    throw new RangeError('additionalDigits must be 0, 1 or 2')\n  }\n\n  // Clone the date\n  if (\n    argument instanceof Date ||\n    (typeof argument === 'object' && Object.prototype.toString.call(argument) === '[object Date]')\n  ) {\n    // Prevent the date to lose the milliseconds when passed to new Date() in IE10\n    return new Date(argument.getTime())\n  } else if (\n    typeof argument === 'number' ||\n    Object.prototype.toString.call(argument) === '[object Number]'\n  ) {\n    return new Date(argument)\n  } else if (\n    !(\n      typeof argument === 'string' || Object.prototype.toString.call(argument) === '[object String]'\n    )\n  ) {\n    return new Date(NaN)\n  }\n\n  var dateStrings = splitDateString(argument)\n\n  var parseYearResult = parseYear(dateStrings.date, additionalDigits)\n  var year = parseYearResult.year\n  var restDateString = parseYearResult.restDateString\n\n  var date = parseDate(restDateString, year)\n\n  if (isNaN(date)) {\n    return new Date(NaN)\n  }\n\n  if (date) {\n    var timestamp = date.getTime()\n    var time = 0\n    var offset\n\n    if (dateStrings.time) {\n      time = parseTime(dateStrings.time)\n\n      if (isNaN(time)) {\n        return new Date(NaN)\n      }\n    }\n\n    if (dateStrings.timeZone || options.timeZone) {\n      offset = tzParseTimezone(dateStrings.timeZone || options.timeZone, new Date(timestamp + time))\n      if (isNaN(offset)) {\n        return new Date(NaN)\n      }\n    } else {\n      // get offset accurate to hour in time zones that change offset\n      offset = getTimezoneOffsetInMilliseconds(new Date(timestamp + time))\n      offset = getTimezoneOffsetInMilliseconds(new Date(timestamp + time + offset))\n    }\n\n    return new Date(timestamp + time + offset)\n  } else {\n    return new Date(NaN)\n  }\n}\n\nfunction splitDateString(dateString) {\n  var dateStrings = {}\n  var parts = patterns.dateTimePattern.exec(dateString)\n  var timeString\n\n  if (!parts) {\n    parts = patterns.datePattern.exec(dateString)\n    if (parts) {\n      dateStrings.date = parts[1]\n      timeString = parts[2]\n    } else {\n      dateStrings.date = null\n      timeString = dateString\n    }\n  } else {\n    dateStrings.date = parts[1]\n    timeString = parts[3]\n  }\n\n  if (timeString) {\n    var token = patterns.timeZone.exec(timeString)\n    if (token) {\n      dateStrings.time = timeString.replace(token[1], '')\n      dateStrings.timeZone = token[1].trim()\n    } else {\n      dateStrings.time = timeString\n    }\n  }\n\n  return dateStrings\n}\n\nfunction parseYear(dateString, additionalDigits) {\n  var patternYYY = patterns.YYY[additionalDigits]\n  var patternYYYYY = patterns.YYYYY[additionalDigits]\n\n  var token\n\n  // YYYY or ±YYYYY\n  token = patterns.YYYY.exec(dateString) || patternYYYYY.exec(dateString)\n  if (token) {\n    var yearString = token[1]\n    return {\n      year: parseInt(yearString, 10),\n      restDateString: dateString.slice(yearString.length),\n    }\n  }\n\n  // YY or ±YYY\n  token = patterns.YY.exec(dateString) || patternYYY.exec(dateString)\n  if (token) {\n    var centuryString = token[1]\n    return {\n      year: parseInt(centuryString, 10) * 100,\n      restDateString: dateString.slice(centuryString.length),\n    }\n  }\n\n  // Invalid ISO-formatted year\n  return {\n    year: null,\n  }\n}\n\nfunction parseDate(dateString, year) {\n  // Invalid ISO-formatted year\n  if (year === null) {\n    return null\n  }\n\n  var token\n  var date\n  var month\n  var week\n\n  // YYYY\n  if (dateString.length === 0) {\n    date = new Date(0)\n    date.setUTCFullYear(year)\n    return date\n  }\n\n  // YYYY-MM\n  token = patterns.MM.exec(dateString)\n  if (token) {\n    date = new Date(0)\n    month = parseInt(token[1], 10) - 1\n\n    if (!validateDate(year, month)) {\n      return new Date(NaN)\n    }\n\n    date.setUTCFullYear(year, month)\n    return date\n  }\n\n  // YYYY-DDD or YYYYDDD\n  token = patterns.DDD.exec(dateString)\n  if (token) {\n    date = new Date(0)\n    var dayOfYear = parseInt(token[1], 10)\n\n    if (!validateDayOfYearDate(year, dayOfYear)) {\n      return new Date(NaN)\n    }\n\n    date.setUTCFullYear(year, 0, dayOfYear)\n    return date\n  }\n\n  // yyyy-MM-dd or YYYYMMDD\n  token = patterns.MMDD.exec(dateString)\n  if (token) {\n    date = new Date(0)\n    month = parseInt(token[1], 10) - 1\n    var day = parseInt(token[2], 10)\n\n    if (!validateDate(year, month, day)) {\n      return new Date(NaN)\n    }\n\n    date.setUTCFullYear(year, month, day)\n    return date\n  }\n\n  // YYYY-Www or YYYYWww\n  token = patterns.Www.exec(dateString)\n  if (token) {\n    week = parseInt(token[1], 10) - 1\n\n    if (!validateWeekDate(year, week)) {\n      return new Date(NaN)\n    }\n\n    return dayOfISOWeekYear(year, week)\n  }\n\n  // YYYY-Www-D or YYYYWwwD\n  token = patterns.WwwD.exec(dateString)\n  if (token) {\n    week = parseInt(token[1], 10) - 1\n    var dayOfWeek = parseInt(token[2], 10) - 1\n\n    if (!validateWeekDate(year, week, dayOfWeek)) {\n      return new Date(NaN)\n    }\n\n    return dayOfISOWeekYear(year, week, dayOfWeek)\n  }\n\n  // Invalid ISO-formatted date\n  return null\n}\n\nfunction parseTime(timeString) {\n  var token\n  var hours\n  var minutes\n\n  // hh\n  token = patterns.HH.exec(timeString)\n  if (token) {\n    hours = parseFloat(token[1].replace(',', '.'))\n\n    if (!validateTime(hours)) {\n      return NaN\n    }\n\n    return (hours % 24) * MILLISECONDS_IN_HOUR\n  }\n\n  // hh:mm or hhmm\n  token = patterns.HHMM.exec(timeString)\n  if (token) {\n    hours = parseInt(token[1], 10)\n    minutes = parseFloat(token[2].replace(',', '.'))\n\n    if (!validateTime(hours, minutes)) {\n      return NaN\n    }\n\n    return (hours % 24) * MILLISECONDS_IN_HOUR + minutes * MILLISECONDS_IN_MINUTE\n  }\n\n  // hh:mm:ss or hhmmss\n  token = patterns.HHMMSS.exec(timeString)\n  if (token) {\n    hours = parseInt(token[1], 10)\n    minutes = parseInt(token[2], 10)\n    var seconds = parseFloat(token[3].replace(',', '.'))\n\n    if (!validateTime(hours, minutes, seconds)) {\n      return NaN\n    }\n\n    return (hours % 24) * MILLISECONDS_IN_HOUR + minutes * MILLISECONDS_IN_MINUTE + seconds * 1000\n  }\n\n  // Invalid ISO-formatted time\n  return null\n}\n\nfunction dayOfISOWeekYear(isoWeekYear, week, day) {\n  week = week || 0\n  day = day || 0\n  var date = new Date(0)\n  date.setUTCFullYear(isoWeekYear, 0, 4)\n  var fourthOfJanuaryDay = date.getUTCDay() || 7\n  var diff = week * 7 + day + 1 - fourthOfJanuaryDay\n  date.setUTCDate(date.getUTCDate() + diff)\n  return date\n}\n\n// Validation functions\n\nvar DAYS_IN_MONTH = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\nvar DAYS_IN_MONTH_LEAP_YEAR = [31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\n\nfunction isLeapYearIndex(year) {\n  return year % 400 === 0 || (year % 4 === 0 && year % 100 !== 0)\n}\n\nfunction validateDate(year, month, date) {\n  if (month < 0 || month > 11) {\n    return false\n  }\n\n  if (date != null) {\n    if (date < 1) {\n      return false\n    }\n\n    var isLeapYear = isLeapYearIndex(year)\n    if (isLeapYear && date > DAYS_IN_MONTH_LEAP_YEAR[month]) {\n      return false\n    }\n    if (!isLeapYear && date > DAYS_IN_MONTH[month]) {\n      return false\n    }\n  }\n\n  return true\n}\n\nfunction validateDayOfYearDate(year, dayOfYear) {\n  if (dayOfYear < 1) {\n    return false\n  }\n\n  var isLeapYear = isLeapYearIndex(year)\n  if (isLeapYear && dayOfYear > 366) {\n    return false\n  }\n  if (!isLeapYear && dayOfYear > 365) {\n    return false\n  }\n\n  return true\n}\n\nfunction validateWeekDate(year, week, day) {\n  if (week < 0 || week > 52) {\n    return false\n  }\n\n  if (day != null && (day < 0 || day > 6)) {\n    return false\n  }\n\n  return true\n}\n\nfunction validateTime(hours, minutes, seconds) {\n  if (hours != null && (hours < 0 || hours >= 25)) {\n    return false\n  }\n\n  if (minutes != null && (minutes < 0 || minutes >= 60)) {\n    return false\n  }\n\n  if (seconds != null && (seconds < 0 || seconds >= 60)) {\n    return false\n  }\n\n  return true\n}\n", "/** Regex to identify the presence of a time zone specifier in a date string */\nvar tzPattern = /(Z|[+-]\\d{2}(?::?\\d{2})?| UTC| [a-zA-Z]+\\/[a-zA-Z_]+(?:\\/[a-zA-Z_]+)?)$/\n\nexport default tzPattern\n", "import cloneObject from 'date-fns/_lib/cloneObject/index.js'\nimport format from '../format/index.js'\nimport utcToZonedTime from '../utcToZonedTime/index.js'\n\n/**\n * @name formatInTimeZone\n * @category Time Zone Helpers\n * @summary Gets the offset in milliseconds between the time zone and Universal Coordinated Time (UTC)\n *\n * @param {Date|String|Number} date - the date representing the local time / real UTC time\n * @param {String} timeZone - the time zone this date should be formatted for; can be an offset or IANA time zone\n * @param {String} formatStr - the string of tokens\n * @param {OptionsWithTZ} [options] - the object with options. See [Options]{@link https://date-fns.org/docs/Options}\n * @param {0|1|2} [options.additionalDigits=2] - passed to `toDate`. See [toDate]{@link\n *   https://date-fns.org/docs/toDate}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @param {Number} [options.firstWeekContainsDate=1] - the day of January, which is\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See\n *   [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {Boolean} [options.awareOfUnicodeTokens=false] - if true, allows usage of Unicode tokens causes confusion:\n *   - Some of the day of year tokens (`D`, `DD`) that are confused with the day of month tokens (`d`, `dd`).\n *   - Some of the local week-numbering year tokens (`YY`, `YYYY`) that are confused with the calendar year tokens\n *   (`yy`, `yyyy`). See: https://git.io/fxCyr\n * @param {String} [options.timeZone=''] - used to specify the IANA time zone offset of a date String.\n * @returns {String} the formatted date string\n */\nexport default function formatInTimeZone(date, timeZone, formatStr, options) {\n  var extendedOptions = cloneObject(options)\n  extendedOptions.timeZone = timeZone\n  extendedOptions.originalDate = date\n  return format(utcToZonedTime(date, timeZone), formatStr, extendedOptions)\n}\n", "import cloneObject from 'date-fns/_lib/cloneObject/index.js'\nimport toDate from '../toDate/index.js'\nimport tzPattern from '../_lib/tzPattern/index.js'\nimport tzParseTimezone from '../_lib/tzParseTimezone/index.js'\nimport newDateUTC from '../_lib/newDateUTC/index.js'\n\n/**\n * @name zonedTimeToUtc\n * @category Time Zone Helpers\n * @summary Get the UTC date/time from a date representing local time in a given time zone\n *\n * @description\n * Returns a date instance with the UTC time of the provided date of which the values\n * represented the local time in the time zone specified. In other words, if the input\n * date represented local time in time time zone, the timestamp of the output date will\n * give the equivalent UTC of that local time regardless of the current system time zone.\n *\n * @param {Date|String|Number} date - the date with values representing the local time\n * @param {String} timeZone - the time zone of this local time, can be an offset or IANA time zone\n * @param {OptionsWithTZ} [options] - the object with options. See [Options]{@link https://date-fns.org/docs/Options}\n * @param {0|1|2} [options.additionalDigits=2] - passed to `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}\n * @returns {Date} the new date with the equivalent time in the time zone\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `options.additionalDigits` must be 0, 1 or 2\n *\n * @example\n * // In June 10am in Los Angeles is 5pm UTC\n * const result = zonedTimeToUtc(new Date(2014, 5, 25, 10, 0, 0), 'America/Los_Angeles')\n * //=> 2014-06-25T17:00:00.000Z\n */\nexport default function zonedTimeToUtc(date, timeZone, options) {\n  if (typeof date === 'string' && !date.match(tzPattern)) {\n    var extendedOptions = cloneObject(options)\n    extendedOptions.timeZone = timeZone\n    return toDate(date, extendedOptions)\n  }\n\n  var d = toDate(date, options)\n\n  var utc = newDateUTC(\n    d.getFullYear(),\n    d.getMonth(),\n    d.getDate(),\n    d.getHours(),\n    d.getMinutes(),\n    d.getSeconds(),\n    d.getMilliseconds()\n  ).getTime()\n\n  var offsetMilliseconds = tzParseTimezone(timeZone, new Date(utc))\n\n  return new Date(utc + offsetMilliseconds)\n}\n", "/**\n * @import {Point,Position} from 'unist'\n */\n\n/**\n * @typedef {object} CoreAPI\n * @property {string} text\n * @property {number} numberOfLines\n * @property {(index: number) => Point} toPoint\n * @property {(point: Point | number) => number} toIndex\n * @property {(ln: number) => Point | null} bol\n * @property {(ln: number) => Point | null} eol\n * @property {(point: Point, offset: number) => Point} shift\n */\n\n/**\n * @param {number} num\n * @param {number} min\n * @param {number} max\n */\nfunction clamp(num, min, max) {\n\treturn num > max ? max : num < min ? min : num\n}\n\n/**\n * @param {string} text\n * @returns {CoreAPI}\n */\nfunction core(text) {\n\tconst strLines = text.split(/^/gm)\n\tconst lines = strLines.length > 0 ? [0] : [] // index of line starts\n\tstrLines\n\t\t.slice(0, strLines.length - 1)\n\t\t.forEach((l, i) => lines.push(lines[i] + l.length))\n\n\tfunction eof() {\n\t\tif (lines.length === 0) {\n\t\t\treturn { line: 1, column: 1, offset: 0 }\n\t\t}\n\t\treturn {\n\t\t\tline: lines.length,\n\t\t\tcolumn: text.length - lines[lines.length - 1] + 1,\n\t\t\toffset: text.length,\n\t\t}\n\t}\n\n\t/**\n\t * @param {number} ln\n\t * @returns {Point | null}\n\t */\n\tfunction bol(ln) {\n\t\tconst lineIndex = ln - 1\n\t\tif (lineIndex >= lines.length || lineIndex < 0) return null\n\t\treturn { line: ln, column: 1, offset: lines[ln - 1] }\n\t}\n\n\t/**\n\t * @param {number} ln\n\t * @returns {Point | null}\n\t */\n\tfunction eol(ln) {\n\t\tif (ln > lines.length || ln < 1) return null\n\t\tconst lastLine = ln === lines.length\n\t\treturn lastLine ? eof() : toPoint(lines[ln] - 1)\n\t}\n\n\t/**\n\t * @param {Point} point\n\t * @param {number} offset\n\t */\n\tfunction shift(point, offset) {\n\t\treturn toPoint(toIndex(point) + offset)\n\t}\n\n\t/**\n\t * @param {number} index\n\t * @returns {Point}\n\t */\n\tfunction toPoint(index) {\n\t\tif (index <= 0) return { line: 1, column: 1, offset: 0 }\n\t\tif (index >= text.length) return eof()\n\t\tlet lineIndex = lines.findIndex((l) => l > index)\n\t\tif (lineIndex < 0) {\n\t\t\tlineIndex = lines.length\n\t\t}\n\n\t\treturn {\n\t\t\tline: lineIndex,\n\t\t\tcolumn: index - lines[lineIndex - 1] + 1,\n\t\t\toffset: index,\n\t\t}\n\t}\n\n\t/**\n\t * @param {Point|number} point\n\t * @returns {number}\n\t */\n\tfunction toIndex(point) {\n\t\tif (typeof point === 'number') return clamp(point, 0, text.length)\n\t\tif (point.offset) return clamp(point.offset, 0, text.length)\n\t\tconst lineIndex = point.line - 1\n\t\tif (lineIndex < 0 || lines.length === 0) return 0\n\t\tif (lineIndex >= lines.length) return text.length\n\t\tconst i = lines[lineIndex] + point.column - 1\n\t\treturn Math.min(i, text.length)\n\t}\n\n\treturn {\n\t\tget text() {\n\t\t\treturn text\n\t\t},\n\t\tget numberOfLines() {\n\t\t\treturn lines.length\n\t\t},\n\t\tshift,\n\t\ttoPoint,\n\t\ttoIndex,\n\t\tbol,\n\t\teol,\n\t}\n}\n\nexport default core\n", "/**\n * @import {Point} from 'unist'\n * @import {CoreAPI} from '../core.js'\n */\n\n/**\n * @callback substring\n * @param {Point|number} start\n * @param {Point|number} [end]\n * @returns {string}\n */\n\n/**\n * @template {CoreAPI} T\n * @param {T} core\n * @returns {T & {substring: substring}}\n */\nexport default function addSubstring(core) {\n\t/**\n\t * @type {substring}\n\t */\n\tfunction substring(start, end) {\n\t\tconst { toIndex } = core\n\t\treturn core.text.substring(toIndex(start), end && toIndex(end))\n\t}\n\treturn {\n\t\t...core,\n\t\tsubstring,\n\t}\n}\n", "/**\n * @import {Point,Position} from 'unist'\n * @import {CoreAPI} from '../core.js'\n */\n\n/**\n * @callback linePosition\n * @param {Point|number} start\n * @param {Point|number} [end]\n * @returns {Position|null}\n *\n * @callback endOfLine\n * @param {Point|number} ln\n * @returns {Point|undefined}\n *\n * @callback beginOfLine\n * @param {Point|number} ln\n * @returns {Point|undefined}\n *\n */\n\n/**\n * @template {CoreAPI} T\n * @param {T} core\n * @returns {T & {linePosition: linePosition, endOfLine: endOfLine, beginOfLine: beginOfLine}}\n */\nexport default function (core) {\n\t/**\n\t * @type {linePosition}\n\t */\n\tfunction linePosition(start, end) {\n\t\tlet result = null\n\n\t\tif (typeof start === 'number') {\n\t\t\tresult = linePosition(core.toPoint(start))\n\t\t} else {\n\t\t\tconst s = core.bol(start.line)\n\t\t\tconst e = core.eol(start.line)\n\t\t\tif (!s || !e) return null\n\t\t\tresult = {\n\t\t\t\tstart: s,\n\t\t\t\tend: e,\n\t\t\t}\n\t\t}\n\n\t\tif (end && result) {\n\t\t\tconst endLR = linePosition(end)\n\t\t\tif (!endLR) return null\n\t\t\tresult.end = endLR.end\n\t\t}\n\n\t\treturn result\n\t}\n\n\t/**\n\t * @type {endOfLine}\n\t */\n\tfunction endOfLine(ln) {\n\t\tconst pos = linePosition(ln)\n\t\tif (!pos) return undefined\n\t\treturn pos.end\n\t}\n\n\t/**\n\t * @type {beginOfLine}\n\t */\n\tconst beginOfLine = (ln) => {\n\t\tconst pos = linePosition(ln)\n\t\tif (!pos) return undefined\n\t\treturn pos.start\n\t}\n\n\treturn {\n\t\t...core,\n\t\tlinePosition,\n\t\tendOfLine,\n\t\tbeginOfLine,\n\t}\n}\n", "/**\n * @import {CoreAPI} from '../core.js'\n */\n\nimport substring from './substring.js'\nimport lines from './lines.js'\n\n/**\n * @param {CoreAPI} core\n */\nexport default function enhance(core) {\n\treturn substring(lines(core))\n}\n", "/**\n * @import {Point,Position} from 'unist'\n * @import {CoreAPI} from './core.js'\n * @import {Range} from '../index.js'\n */\n\n/**\n * @typedef {'char'|'line'|'whitespaces'|'newline'|RegExp|number} eatable\n */\n\nimport enhance from './utils/index.js'\n\n/**\n * @type {Record<string,string>}\n */\nconst PAIRS = [\n\t['{', '}'],\n\t['[', ']'],\n\t['(', ')'],\n\t['<', '>'],\n].reduce((all, [l, r]) => {\n\treturn {\n\t\t...all,\n\t\t[l]: r,\n\t\t[r]: l,\n\t}\n}, {})\n\n/**\n * @param {CoreAPI} _core\n * @param {Partial<Range>} [range={}]\n */\nfunction reader(_core, range = {}) {\n\tconst core = enhance(_core)\n\n\tlet cursor = core.toIndex(range.start || 0)\n\tconst end = core.toIndex(range.end || Infinity)\n\n\tconst getChar = (offset = 0) => {\n\t\tconst index = cursor + offset\n\t\tif (index >= end || index < 0) return undefined\n\t\treturn core.text.charAt(index)\n\t}\n\n\t/**\n\t * Get the current line\n\t * returns null if cursor is at the end of the document\n\t */\n\tfunction getLine() {\n\t\tconst pos = core.linePosition(cursor)\n\t\tif (!pos) return null\n\t\treturn core.substring(cursor, pos.end)\n\t}\n\n\t/**\n\t * @param {Point|number} point\n\t */\n\tfunction jump(point) {\n\t\tcursor = Math.min(end, core.toIndex(point))\n\t}\n\n\tconst now = () => core.toPoint(cursor)\n\n\t/**\n\t * @param {eatable} [param='char']\n\t * @returns {{position:Position,value:string}|undefined}\n\t */\n\tfunction eat(param = 'char') {\n\t\tlet value\n\n\t\tconst position = {\n\t\t\tstart: core.toPoint(cursor),\n\t\t\tend: core.toPoint(cursor),\n\t\t}\n\n\t\tif (cursor >= end) return undefined\n\t\tif (param === 'char') {\n\t\t\tvalue = getChar()\n\t\t\tcursor += 1\n\t\t} else if (param === 'line') {\n\t\t\tconst lineEnd = core.linePosition(cursor)\n\t\t\tconst e =\n\t\t\t\tlineEnd === null ? end : Math.min(end, lineEnd.end.offset ?? end)\n\t\t\tvalue = core.substring(cursor, e)\n\t\t\tcursor = e\n\t\t} else if (param === 'whitespaces') {\n\t\t\treturn eat(/^[ \\t]+/)\n\t\t} else if (param === 'newline') {\n\t\t\treturn eat(/^[\\n\\r]/)\n\t\t} else if (typeof param === 'number') {\n\t\t\tconst adv = Math.min(param, end - cursor)\n\t\t\tvalue = core.text.substring(cursor, cursor + adv)\n\t\t\tcursor += adv\n\t\t} else {\n\t\t\tconst m = match(param)\n\t\t\tif (!m) return\n\t\t\tif (m.position.end.offset !== undefined) cursor = m.position.end.offset\n\t\t\tvalue = m.result[0]\n\t\t}\n\n\t\tposition.end = core.toPoint(cursor)\n\t\treturn {\n\t\t\tposition,\n\t\t\tvalue: value || '',\n\t\t}\n\t}\n\n\t/**\n\t * @param {RegExp} pattern\n\t * @param {Partial<Position>} [range={}]\n\t */\n\tfunction match(pattern, range = {}) {\n\t\tconst s = range.start?.offset || cursor\n\t\tconst e = range.end?.offset || end\n\t\tconst str = core.text.substring(s, e)\n\t\tconst m = pattern.exec(str)\n\t\tif (!m) return\n\t\treturn {\n\t\t\tresult: m,\n\t\t\tposition: {\n\t\t\t\tstart: core.toPoint(cursor + m.index),\n\t\t\t\tend: core.toPoint(cursor + m.index + m[0].length),\n\t\t\t},\n\t\t}\n\t}\n\n\t/**\n\t * Find the closing pair of a character\n\t * @param {Point|number} [index=cursor]\n\t */\n\tfunction findClosing(index = cursor) {\n\t\tlet cursor = core.toIndex(index)\n\t\tconst opening = core.text.charAt(cursor)\n\t\tif (!opening) return\n\t\tconst closing = PAIRS[opening] || opening\n\n\t\tlet balance = 1\n\t\tcursor += 1\n\t\twhile (cursor < end) {\n\t\t\tconst char = core.text.charAt(cursor)\n\t\t\tif (char === opening) {\n\t\t\t\tbalance += 1\n\t\t\t}\n\n\t\t\tif (char === closing) {\n\t\t\t\tif (opening !== closing) {\n\t\t\t\t\tbalance -= 1\n\t\t\t\t} else {\n\t\t\t\t\tbalance = 0\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (balance === 0) {\n\t\t\t\treturn core.toPoint(cursor)\n\t\t\t}\n\t\t\tcursor += 1\n\t\t}\n\t}\n\n\tconst isStartOfLine = () => {\n\t\treturn cursor === 0 || getChar(-1) === '\\n'\n\t}\n\n\t/**\n\t * Find the first index of a string\n\t * @param {string }str\n\t * @param {Partial<Position>} [range={}]\n\t */\n\tfunction indexOf(str, range = {}) {\n\t\tconst s = range.start?.offset || cursor\n\t\tconst e = range.end?.offset || core.endOfLine(cursor)?.offset || end\n\t\tconst substr = core.text.substring(s, e)\n\t\tconst i = substr.indexOf(str)\n\t\tif (i === -1) return null\n\t\treturn core.toPoint(cursor + i)\n\t}\n\n\treturn {\n\t\t...core,\n\t\tgetChar,\n\t\tgetLine,\n\t\teat,\n\t\tjump,\n\t\tmatch,\n\t\tindexOf,\n\t\tfindClosing,\n\t\tisStartOfLine,\n\t\tnow: () => {\n\t\t\treturn now()\n\t\t},\n\n\t\tbeginOfLine: () => core.beginOfLine(cursor),\n\t\tendOfLine: () => core.endOfLine(cursor),\n\n\t\t/**\n\t\t * Read a range of text\n\t\t * @param {Partial<Range>} [range={}]\n\t\t */\n\t\tread: (range = {}) => {\n\t\t\treturn reader(_core, {\n\t\t\t\tstart: range.start || cursor,\n\t\t\t\tend: range.end || end,\n\t\t\t})\n\t\t},\n\t}\n}\n\nexport default reader\n", "/**\n * @import {Point} from 'unist'\n * @typedef {ReturnType<typeof reader>} Reader\n * @typedef {object} Range\n * @property {Point | number} start\n * @property {Point | number} end\n */\n\nimport core from './lib/core.js'\nimport reader from './lib/reader.js'\n\n/**\n * @param {string} text\n * @param {Partial<Range>} [range={}]\n * @returns {Reader}\n */\nexport function read(text, range = {}) {\n\treturn reader(core(text), range)\n}\n", "import { zonedTimeToUtc } from 'date-fns-tz';\nimport { read } from 'text-kit';\nexport const parse = (input, { timezone = Intl.DateTimeFormat().resolvedOptions().timeZone } = {}) => {\n    const { match, eat, getChar, jump } = read(input);\n    eat('whitespaces');\n    const timestamp = () => {\n        // opening\n        const opening = eat(/[<[]/g);\n        if (!opening)\n            return;\n        const active = opening.value === '<';\n        // date\n        const { value: _date } = eat(/\\d{4}-\\d{2}-\\d{2}/);\n        let date = _date;\n        eat('whitespaces');\n        let end;\n        // day\n        const { value: _day } = eat(/[a-zA-Z]+/);\n        eat('whitespaces');\n        // time\n        const time = match(/(\\d{2}:\\d{2})(?:-(\\d{2}:\\d{2}))?/);\n        if (time) {\n            date = `${_date} ${time.result[1]}`;\n            if (time.result[2]) {\n                end = `${_date} ${time.result[2]}`;\n            }\n            jump(time.position.end);\n        }\n        // closing\n        const closing = getChar();\n        if ((opening.value === '[' && closing === ']') ||\n            (opening.value === '<' && closing === '>')) {\n            eat('char');\n            return {\n                date: zonedTimeToUtc(date, timezone),\n                end: end ? zonedTimeToUtc(end, timezone) : undefined,\n            };\n        }\n        // opening closing does not match\n    };\n    const ts = timestamp();\n    if (!ts)\n        return;\n    if (!ts.end) {\n        const doubleDash = eat(/--/);\n        if (doubleDash) {\n            const end = timestamp();\n            if (end) {\n                ts.end = end.date;\n            }\n        }\n    }\n    return ts;\n};\n", "export default (text) => {\n    const actionables = text\n        .split(' ')\n        .map((p) => p.trim())\n        .filter(String);\n    const pipe = actionables.indexOf('|');\n    const done = actionables.splice(pipe).filter((t) => t !== '|');\n    return {\n        actionables,\n        done,\n        get keywords() {\n            return actionables.concat(done);\n        },\n    };\n};\n", "export default (reader) => {\n    const { match, eat, endOfLine, jump } = reader;\n    const ws = eat('whitespaces');\n    const b = match(/#\\+begin_([^\\s\\n]+)\\s*(.*)$/imy, { end: endOfLine() });\n    if (b) {\n        eat('line');\n        const params = b.result[2]\n            .split(' ')\n            .map((p) => p.trim())\n            .filter(String);\n        return [\n            {\n                type: 'block.begin',\n                name: b.result[1],\n                params,\n                position: { ...b.position },\n            },\n        ];\n    }\n    const e = match(/#\\+end_([^\\s\\n]+)\\s*$/imy, { end: endOfLine() });\n    if (e) {\n        reader.eat('line');\n        return [\n            {\n                type: 'block.end',\n                name: e.result[1],\n                position: { ...e.position },\n            },\n        ];\n    }\n    ws && jump(ws.position.start);\n};\n", "export default (reader) => {\n    const { match, eat, endOfLine } = reader;\n    const b = match(/\\\\begin\\{([a-zA-Z0-9*]+)\\}\\s*$/imy, { end: endOfLine() });\n    if (b) {\n        eat('line');\n        return [\n            {\n                type: 'latex.begin',\n                name: b.result[1],\n                position: { ...b.position },\n            },\n        ];\n    }\n    const e = match(/\\\\end\\{([a-zA-Z0-9*]+)\\}\\s*$/imy, { end: endOfLine() });\n    if (e) {\n        reader.eat('line');\n        return [\n            {\n                type: 'latex.end',\n                name: e.result[1],\n                position: { ...e.position },\n            },\n        ];\n    }\n};\n", "export default ({ match, eat, jump }) => {\n    const ws = eat('whitespaces');\n    if (match(/^#\\s/y)) {\n        const comment = match(/^#\\s+(.*)$/my);\n        if (comment) {\n            eat('line');\n            return {\n                type: 'comment',\n                position: comment.position,\n                value: comment.result[1],\n            };\n        }\n    }\n    ws && jump(ws.position.start);\n};\n", "export default (reader) => {\n    const { match, jump, eat } = reader;\n    const ws = eat('whitespaces');\n    const drawerReg = /:(\\w+):(?=[ \\t]*$)/my;\n    const m = match(drawerReg);\n    if (m) {\n        jump(m.position.end);\n        const name = m.result[1];\n        eat('whitespaces');\n        if (name.toLowerCase() === 'end') {\n            return [\n                {\n                    type: 'drawer.end',\n                    position: m.position,\n                },\n            ];\n        }\n        else {\n            return [\n                {\n                    type: 'drawer.begin',\n                    name,\n                    position: m.position,\n                },\n            ];\n        }\n    }\n    ws && jump(ws.position.start);\n    return [];\n};\n", "const URL_PATTERN = /(?:([a-z][a-z0-9+.-]*):)?(.*)/i;\nconst isFilePath = (str) => {\n    return str && /^\\.{0,2}\\//.test(str);\n};\nexport default (link) => {\n    const m = URL_PATTERN.exec(link);\n    if (!m)\n        return undefined;\n    const protocol = (m[1] || (isFilePath(m[2]) ? `file` : `internal`)).toLowerCase();\n    let value = m[2];\n    if (/https?/.test(protocol)) {\n        value = `${protocol}:${value}`;\n    }\n    let search;\n    if (protocol === 'file') {\n        const m = /(.*?)::(.*)/.exec(value);\n        if (m && m[1] && m[2]) {\n            value = m[1];\n            search = parseInt(m[2]);\n            search = Number.isInteger(search) ? search : m[2];\n        }\n    }\n    return { protocol, value, search };\n};\n", "const MARKERS = {\n    '*': 'bold',\n    '=': 'verbatim',\n    '/': 'italic',\n    '+': 'strikeThrough',\n    _: 'underline',\n    '~': 'code',\n};\nconst tokenizeText = (bol = undefined) => (reader) => {\n    const tokens = [];\n    const { now, eat, jump, getChar, findClosing, substring } = reader;\n    const marker = getChar();\n    const style = MARKERS[marker];\n    if (!style)\n        return;\n    // check pre\n    const pre = getChar(-1);\n    const isBOL = (bol && bol.offset === now().offset) || now().column === 1;\n    if (!isBOL && !/[\\s({'\"]/.test(pre))\n        return;\n    const tokenStart = now();\n    const closing = findClosing(now());\n    if (!closing)\n        return;\n    eat();\n    const valueStart = now();\n    // check border\n    if (getChar().match(/\\s/))\n        return;\n    jump(closing);\n    // check border\n    if (getChar(-1).match(/\\s/))\n        return;\n    // check post\n    const post = getChar(1);\n    if (post && ` \\t\\n-.,;:!?')}[\"`.indexOf(post) === -1)\n        return;\n    const valueEnd = now();\n    eat(); // closing\n    tokens.push({\n        type: 'text',\n        style,\n        value: substring(valueStart, valueEnd),\n        position: { start: tokenStart, end: now() },\n    });\n    return tokens;\n};\nexport default tokenizeText;\n", "import uri from '../../uri.js';\nimport tokenizeText from './text.js';\nimport { tokenize } from './index.js';\nconst tokenizeLink = (reader) => {\n    const tokens = [];\n    const { eat, findClosing, jump, getChar, now } = reader;\n    if (getChar() !== '[') {\n        return;\n    }\n    const linkOpening = eat('char');\n    // if (!linkOpening) return\n    tokens.push({\n        type: 'opening',\n        element: 'link',\n        position: linkOpening.position,\n    });\n    const linkClosing = findClosing(linkOpening.position.start);\n    if (!linkClosing)\n        return;\n    if (getChar() !== '[') {\n        return;\n    }\n    const pathOpening = eat('char');\n    const pathClosing = findClosing(pathOpening.position.start);\n    if (!pathClosing)\n        return;\n    const linkInfo = uri(reader.substring(pathOpening.position.end, pathClosing));\n    if (!linkInfo)\n        return;\n    jump(pathClosing);\n    eat('char'); // eat the ]\n    tokens.push({\n        type: 'link.path',\n        ...linkInfo,\n        position: {\n            start: pathOpening.position.start,\n            end: now(),\n        },\n    });\n    if (getChar() === '[') {\n        const descClosing = findClosing();\n        if (!descClosing) {\n            return;\n        }\n        eat(); // descOpening\n        const desc = tokenize(reader.read({ end: descClosing }), [\n            tokenizeText(now()),\n        ]);\n        tokens.push(...desc);\n    }\n    jump(linkClosing);\n    tokens.push({\n        type: 'closing',\n        element: 'link',\n        position: eat().position,\n    });\n    return tokens;\n};\nexport default tokenizeLink;\n", "const tokenizeMath = (reader) => {\n    const { now, eat, getChar, jump, substring, match } = reader;\n    const tokens = [];\n    const tokenStart = now();\n    let closingMatch;\n    if (getChar() === '\\\\') {\n        eat();\n        const opening = getChar();\n        if (opening === '(') {\n            closingMatch = /\\\\\\)/;\n        }\n        else if (opening === '[') {\n            closingMatch = /\\\\]/;\n        }\n        else\n            return;\n        eat();\n    }\n    else if (getChar() === '$') {\n        eat();\n        if (getChar() === '$') {\n            eat();\n            closingMatch = /\\$\\$/;\n        }\n        else\n            return;\n    }\n    if (!closingMatch)\n        return;\n    const valueStart = now();\n    const m = match(closingMatch);\n    if (!m)\n        return;\n    const valueEnd = m.position.start;\n    jump(m.position.end);\n    const tokenEnd = now();\n    tokens.push({\n        type: 'text',\n        style: 'math',\n        value: substring(valueStart, valueEnd),\n        position: { start: tokenStart, end: tokenEnd },\n    });\n    return tokens;\n};\nexport default tokenizeMath;\n", "import { tokenize } from './index.js';\nconst tokFootnoteRefernece = (reader) => {\n    const tokens = [];\n    const { eat, now, jump } = reader;\n    const fnb = eat(/^\\[fn:/);\n    if (!fnb)\n        return;\n    tokens.push({\n        type: 'opening',\n        element: 'footnote.reference',\n        position: fnb.position,\n    });\n    const closing = reader.findClosing(fnb.position.start);\n    if (!closing)\n        return;\n    const label = eat(/^[\\w_-]+/);\n    if (label) {\n        tokens.push({\n            type: 'footnote.label',\n            label: label.value,\n            position: label.position,\n        });\n    }\n    if (label && now().offset === closing.offset) {\n        tokens.push({\n            type: 'closing',\n            element: 'footnote.reference',\n            position: eat().position,\n        });\n        return tokens;\n    }\n    if (!eat(/^:/))\n        return;\n    const defRange = {\n        start: now(),\n        end: closing,\n    };\n    const more = tokenize(reader.read(defRange));\n    tokens.push(...more);\n    jump(closing);\n    tokens.push({\n        type: 'closing',\n        element: 'footnote.reference',\n        position: eat().position,\n    });\n    return tokens;\n};\nexport default tokFootnoteRefernece;\n", "import tokenizeLink from './link.js';\nimport tokenizeText from './text.js';\nimport tokenizeMath from './math.js';\nimport tokenizeFootnoteRef from './footnote.js';\nconst ALL = [\n    tokenizeFootnoteRef,\n    tokenizeLink,\n    tokenizeMath,\n    tokenizeText(),\n];\nexport const tokenize = (reader, tokenizers = ALL, { ignoring } = { ignoring: [] }) => {\n    const { now, eat, jump, substring, getChar, toPoint } = reader;\n    const _tokens = [];\n    let cursor = now().offset;\n    const push = (...tokens) => {\n        if (tokens.length === 0)\n            return;\n        // collect plain text\n        const textEnd = tokens[0].position.start;\n        if (cursor < textEnd.offset) {\n            _tokens.push({\n                type: 'text',\n                value: substring(cursor, textEnd),\n                position: { start: toPoint(cursor), end: { ...textEnd } },\n            });\n        }\n        cursor = tokens[tokens.length - 1].position.end.offset;\n        _tokens.push(...tokens);\n    };\n    main: while (getChar()) {\n        const newline = eat('newline');\n        if (newline) {\n            push({\n                type: 'newline',\n                position: newline.position,\n            });\n            break; // newline breaks inline\n        }\n        for (const t of tokenizers) {\n            const r = reader.read();\n            const tokens = t(r);\n            if (tokens) {\n                push(...(Array.isArray(tokens) ? tokens : [tokens]));\n                jump(r.now());\n                continue main;\n            }\n        }\n        eat();\n    }\n    if (cursor < now().offset) {\n        const value = substring(cursor, reader.now());\n        _tokens.push({\n            type: 'text',\n            value,\n            position: { start: toPoint(cursor), end: reader.now() },\n        });\n    }\n    return _tokens;\n};\n", "import { tokenize as tokenizeInline } from './inline/index.js';\nexport default (reader) => {\n    const { isStartOfLine, match, jump, eat } = reader;\n    if (!isStartOfLine())\n        return;\n    let tokens = [];\n    const m = match(/^\\[fn:([^\\]]+)\\](?=\\s)/y);\n    if (!m)\n        return [];\n    tokens.push({\n        type: 'footnote.label',\n        label: m.result[1],\n        position: m.position,\n    });\n    jump(m.position.end);\n    eat('whitespaces');\n    tokens = tokens.concat(tokenizeInline(reader));\n    return tokens;\n};\n", "import { tokenize } from './inline/index.js';\nexport default (getTodoKeywordSets) => (reader) => {\n    const { isStartOfLine, match, now, eol, eat, jump, substring, endOfLine } = reader;\n    const todoKeywordSets = getTodoKeywordSets();\n    if (!isStartOfLine() || !match(/^\\*+[ \\t]+/my))\n        return;\n    // TODO: cache this, for performance sake\n    const todos = todoKeywordSets.flatMap((s) => s.keywords);\n    const isActionable = (keyword) => {\n        return !!todoKeywordSets.find((s) => s.actionables.includes(keyword));\n    };\n    let buffer = [];\n    const stars = eat(/^\\*+(?=\\s)/);\n    if (!stars)\n        throw Error('not gonna happen');\n    buffer.push({\n        type: 'stars',\n        level: stars.value.length,\n        position: {\n            start: stars.position.start,\n            end: eat('whitespaces').position.end\n        }\n    });\n    const keyword = eat(RegExp(`${todos.map(escape).join('|')}(?=\\\\s)`, 'y'));\n    if (keyword) {\n        buffer.push({\n            type: 'todo',\n            keyword: keyword.value,\n            actionable: isActionable(keyword.value),\n            position: {\n                start: keyword.position.start,\n                end: eat('whitespaces').position.end\n            }\n        });\n    }\n    const priority = eat(/^\\[#(A|B|C)\\](?=\\s)/y);\n    if (priority) {\n        buffer.push({\n            type: 'priority',\n            ...priority,\n            position: {\n                start: priority.position.start,\n                end: eat('whitespaces').position.end\n            }\n        });\n    }\n    const tags = match(/[ \\t]+(:(?:[\\w@_#%-]+:)+)[ \\t]*$/m, {\n        end: endOfLine()\n    });\n    let contentEnd = eol(now().line);\n    if (tags) {\n        contentEnd = tags.position.start;\n    }\n    const r = reader.read({ end: contentEnd });\n    const tokens = tokenize(r);\n    jump(r.now());\n    buffer = buffer.concat(tokens);\n    if (tags) {\n        eat('whitespaces');\n        const tagsPosition = { start: now(), end: tags.position.end };\n        const s = substring(tagsPosition.start, tagsPosition.end);\n        buffer.push({\n            type: 'tags',\n            tags: s\n                .split(':')\n                .map((t) => t.trim())\n                .filter(Boolean),\n            position: { start: now(), end: tags.position.end }\n        });\n        jump(tags.position.end);\n    }\n    return buffer;\n};\n", "export default ({ eat }) => {\n    const hr = eat(/^\\s*-{5,}\\s*$/my);\n    if (hr) {\n        return {\n            type: 'hr',\n            position: hr.position,\n        };\n    }\n};\n", "export default (reader) => {\n    const keyword = reader.match(/#\\+(\\w+):\\s*([^\\n]*)$/my);\n    if (keyword) {\n        reader.eat('line');\n        const tokens = [\n            {\n                type: 'keyword',\n                key: keyword.result[1],\n                value: keyword.result[2],\n                position: keyword.position,\n            },\n        ];\n        const nl = reader.eat('newline');\n        if (nl) {\n            tokens.push({\n                type: 'newline',\n                position: nl.position,\n            });\n        }\n        return tokens;\n    }\n};\n", "import { tokenize as tokenizeInline } from './inline/index.js';\nexport default (reader) => {\n    const { now, match, eat, jump, substring, endOfLine } = reader;\n    const ws = eat('whitespaces');\n    let tokens = [];\n    const indent = now().column - 1;\n    const bullet = match(/^([-+]|\\d+[.)])(?=\\s)/y);\n    if (!bullet) {\n        ws && jump(ws.position.start);\n        return [];\n    }\n    tokens.push({\n        type: 'list.item.bullet',\n        indent,\n        ordered: /^\\d/.test(bullet.result[1]),\n        position: bullet.position,\n    });\n    jump(bullet.position.end);\n    eat('whitespaces');\n    const checkbox = match(/^\\[(x|X|-| )\\](?=\\s)/y);\n    if (checkbox) {\n        tokens.push({\n            type: 'list.item.checkbox',\n            checked: checkbox.result[1] !== ' ',\n            position: checkbox.position,\n        });\n        jump(checkbox.position.end);\n    }\n    eat('whitespaces');\n    const tagMark = match(/\\s+::\\s+/, { end: endOfLine() });\n    if (tagMark) {\n        const pos = { start: now(), end: tagMark.position.start };\n        tokens.push({\n            type: 'list.item.tag',\n            value: substring(pos.start, pos.end),\n            position: pos,\n        });\n        jump(tagMark.position.end);\n    }\n    tokens = tokens.concat(tokenizeInline(reader));\n    return tokens;\n};\n", "import { parse as parseTimestamp } from '../timestamp.js';\nexport default ({ keywords, timezone, }) => (reader) => {\n    const { now, match, eat, substring, getLine, jump } = reader;\n    const ws = eat('whitespaces');\n    const pattern = `(${keywords.join('|')}):`;\n    if (!match(RegExp(pattern, 'y'))) {\n        ws && jump(ws.position.start);\n        return;\n    }\n    const currentLine = getLine();\n    const { line, column, offset } = now();\n    const getLocation = (_offset) => ({\n        line,\n        column: column + _offset,\n        offset: offset + _offset,\n    });\n    const all = [];\n    const parseLastTimestamp = (end) => {\n        if (all.length === 0)\n            return;\n        const { type, position } = all[all.length - 1];\n        if (!position)\n            throw Error(`position is ${position}`);\n        if (type !== 'planning.keyword')\n            return;\n        const endLocation = getLocation(end);\n        const timestampPosition = { start: position.end, end: endLocation };\n        const value = substring(timestampPosition.start, timestampPosition.end);\n        all.push({\n            type: 'planning.timestamp',\n            value: parseTimestamp(value, { timezone }),\n            position: timestampPosition,\n        });\n    };\n    let m;\n    const p = RegExp(pattern, 'g');\n    while ((m = p.exec(currentLine)) !== null) {\n        parseLastTimestamp(m.index);\n        all.push({\n            type: 'planning.keyword',\n            value: m[1],\n            position: {\n                start: getLocation(m.index),\n                end: getLocation(p.lastIndex),\n            },\n        });\n    }\n    parseLastTimestamp(currentLine.length);\n    eat('line');\n    return all;\n};\n", "import { tokenize as tokenizeInline } from './inline/index.js';\nexport default (reader) => {\n    const { eat, getChar, jump, endOfLine, indexOf } = reader;\n    const ws = eat('whitespaces');\n    const char = getChar();\n    if (char !== '|') {\n        ws && jump(ws.position.start);\n        return [];\n    }\n    if (getChar(1) === '-') {\n        const hr = eat('line');\n        const tokens = [{ type: 'table.hr', position: hr.position }];\n        const nl = eat('newline');\n        if (nl)\n            tokens.push({ type: 'newline', position: nl.position });\n        return tokens;\n    }\n    const startColumnSeparator = {\n        type: 'table.columnSeparator',\n        position: eat().position,\n    };\n    const tokens = [];\n    const tokCells = () => {\n        const pipe = indexOf('|');\n        const end = pipe || endOfLine();\n        if (!end)\n            throw new Error(`what is happening: ${end}`);\n        const inline = tokenizeInline(reader.read({ end }));\n        tokens.push(...inline);\n        jump(end);\n        if (pipe) {\n            const c = eat('char');\n            tokens.push({\n                type: 'table.columnSeparator',\n                position: c.position,\n            });\n            tokCells();\n        }\n        const nl = eat('newline');\n        if (nl) {\n            tokens.push({\n                type: 'newline',\n                position: nl.position,\n            });\n        }\n    };\n    tokCells();\n    return [startColumnSeparator, ...tokens];\n};\n", "export default function ({ isStartOfLine, getLine, eat }) {\n    const tokens = [];\n    while (isStartOfLine()) {\n        const l = getLine();\n        if (l === null || l.replace(/\\s/g, '').length > 0)\n            break;\n        const line = eat('line');\n        if (!line)\n            break;\n        tokens.push({\n            type: 'emptyLine',\n            position: line.position,\n        });\n        const nl = eat('newline');\n        if (!nl)\n            break;\n        tokens.push({\n            type: 'newline',\n            position: nl.position,\n        });\n    }\n    return tokens;\n}\n", "import { read } from 'text-kit';\nimport todoKeywordSet from '../todo-keyword-set.js';\nimport block from './block.js';\nimport latex from './latex.js';\nimport comment from './comment.js';\nimport drawer from './drawer.js';\nimport footnote from './footnote.js';\nimport headline from './headline.js';\nimport hr from './hr.js';\nimport { tokenize as inlineTok } from './inline/index.js';\nimport keyword from './keyword.js';\nimport listItem from './list.js';\nimport planning from './planning.js';\nimport table from './table.js';\nimport emptyLines from './empty.js';\nconst PLANNING_KEYWORDS = ['DEADLINE', 'SCHEDULED', 'CLOSED'];\nexport const tokenize = (text, options) => {\n    const { timezone, todos, range } = options;\n    const reader = read(text, range);\n    const { getChar } = reader;\n    const globalTodoKeywordSets = todos.map(todoKeywordSet);\n    const inBufferTodoKeywordSets = [];\n    function todoKeywordSets() {\n        return inBufferTodoKeywordSets.length === 0\n            ? globalTodoKeywordSets\n            : inBufferTodoKeywordSets;\n    }\n    let tokens = [];\n    let cursor = 0;\n    const tokenizers = [\n        ({ getChar, eat }) => getChar() === '\\n' && {\n            type: 'newline',\n            position: eat('char').position,\n        },\n        headline(todoKeywordSets),\n        drawer,\n        planning({ keywords: PLANNING_KEYWORDS, timezone }),\n        keyword,\n        block,\n        latex,\n        listItem,\n        comment,\n        table,\n        hr,\n        footnote,\n    ];\n    function tok() {\n        const all = emptyLines(reader);\n        // eat('whitespaces')\n        if (!getChar())\n            return all;\n        for (const t of tokenizers) {\n            const result = t(reader);\n            if (!result)\n                continue;\n            const tokens = Array.isArray(result) ? result : [result];\n            if (tokens.length > 0) {\n                return [...all, ...tokens];\n            }\n        }\n        // last resort\n        const currentLine = reader.read({ end: reader.endOfLine() });\n        const inlineTokens = inlineTok(currentLine);\n        reader.jump(currentLine.now());\n        return [...all, ...inlineTokens];\n    }\n    const peek = (offset = 0) => {\n        const pos = cursor + offset;\n        if (pos >= tokens.length) {\n            tokens = tokens.concat(tok());\n        }\n        return tokens[pos];\n    };\n    const modify = (f, offset = 0) => {\n        const pos = cursor + offset;\n        const token = peek(offset);\n        if (token !== undefined) {\n            tokens[pos] = f(token);\n        }\n    };\n    const _eat = (type = undefined) => {\n        const t = peek();\n        if (!t)\n            return undefined;\n        if (!type || type === t.type) {\n            cursor += 1;\n            return t;\n        }\n        return undefined;\n    };\n    return {\n        peek,\n        eat: _eat,\n        eatAll(type) {\n            let count = 0;\n            while (_eat(type)) {\n                count += 1;\n            }\n            return count;\n        },\n        match(cond, offset = 0) {\n            const token = peek();\n            if (!token)\n                return false;\n            if (typeof cond === 'string') {\n                return token.type === cond;\n            }\n            return cond.test(token.type);\n        },\n        all(max = undefined) {\n            let _all = [];\n            let tokens = tok();\n            while (tokens.length > 0) {\n                _all = _all.concat(tokens);\n                tokens = tok();\n            }\n            return _all;\n        },\n        save: () => cursor,\n        restore(point) {\n            cursor = point;\n        },\n        addInBufferTodoKeywords(text) {\n            inBufferTodoKeywordSets.push(todoKeywordSet(text));\n        },\n        substring: (pos) => reader.substring(pos.start, pos.end),\n        modify,\n        get now() {\n            const token = peek();\n            return reader.toIndex(token?.position.start ?? Infinity);\n        },\n        toOffset: (point) => reader.toIndex(point),\n        toPoint: (offset) => reader.toPoint(offset),\n    };\n};\n", "import { withDefault } from './options.js';\nimport { parser as _parser } from './parse/index.js';\nimport { parse as parseTimestamp } from './timestamp.js';\nimport { tokenize as _tokenize } from './tokenize/index.js';\nexport * from './types.js';\nexport { parseTimestamp };\nexport const tokenize = (text, options = {}) => {\n    return _tokenize(text, withDefault(options));\n};\nexport const parse = (text, options = {}) => {\n    const parser = makeParser(text, options);\n    return parser.parse();\n};\nexport function makeParser(text, options = {}) {\n    const { range, ..._options } = withDefault(options);\n    const start = range?.start;\n    const lexer = tokenize(text, {\n        ..._options,\n        range: start ? { start, end: Infinity } : undefined,\n    });\n    return _parser(lexer, { ..._options, range });\n}\n", "/**\n * @import {Document, ParseOptions} from 'orga'\n * @import {Processor} from 'unified'\n */\n\n/**\n * @typedef {ParseOptions} Options\n */\n\nimport { parse } from 'orga'\n\n/**\n * Aadd support for parsing from org-mode.\n *\n * @this {Processor<Document>}\n *   Processor instance.\n * @param {Partial<ParseOptions> | undefined} [options]\n *   Configuration (optional).\n * @returns {undefined}\n *   Nothing.\n */\nexport default function reorgParse(options) {\n\tthis.parser = function (document) {\n\t\treturn parse(document, options)\n\t}\n}\n", "import { unified } from 'unified'\nimport parse from '@orgajs/reorg-parse'\n\nexport const reorg = unified().use(parse).freeze()\n"],
  "mappings": "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",
  "names": ["isArray", "isPlainObject", "setProperty", "getProperty", "extend", "clone", "o", "toDate", "toInteger", "defaultOptions", "defaultOptions", "defaultOptions", "defaultOptions", "dateLongFormatter", "timeLongFormatter", "dateTimeLongFormatter", "getTimezoneOffsetInMilliseconds", "format", "formatDistance", "format", "formatRelative", "ordinalNumber", "format", "defaultOptions", "cloneObject", "extend", "parser", "file", "tree", "value", "parameters", "block", "context", "consume", "token", "context", "paragraph", "drawer", "context", "section", "headline", "token", "keyword", "token", "context", "_", "context", "test", "MILLISECONDS_IN_MINUTE", "MILLISECONDS_IN_HOUR", "MILLISECONDS_IN_MINUTE", "patterns", "toInteger", "getTimezoneOffsetInMilliseconds", "import_cloneObject", "cloneObject", "point", "core", "core", "core", "core", "point", "range", "cursor", "block_default", "reader", "latex_default", "reader", "drawer_default", "reader", "m", "reader", "reader", "reader", "reader", "footnote_default", "footnote_default", "reader", "footnote_default", "reader", "headline_default", "reader", "keyword", "keyword_default", "reader", "keyword", "list_default", "reader", "planning_default", "reader", "table_default", "reader", "tokens", "tokenize", "reader", "getChar", "headline_default", "drawer_default", "planning_default", "keyword_default", "block_default", "latex_default", "list_default", "table_default", "footnote_default", "tokens", "point", "text", "tokenize", "parse", "parser", "parse"]
}
